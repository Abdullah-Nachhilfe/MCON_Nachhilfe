

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 23:00:22 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 06/04/2022 GMT
    45                           ; 
    46                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F24K22 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataCOMRAM
    80   000F84                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for main@F5814
    84   000F84  48                 	db	72
    85   000F85  45                 	db	69
    86   000F86  4C                 	db	76
    87   000F87  4C                 	db	76
    88   000F88  4F                 	db	79
    89   000F89  0D                 	db	13
    90   000F8A  00                 	db	0
    91   000000                     _TXREG1	set	4013
    92   000000                     _RCREG1	set	4014
    93   000000                     _SPBRG1	set	4015
    94   000000                     _BAUDCON1	set	4024
    95   000000                     _RCSTA1bits	set	4011
    96   000000                     _TXSTA1	set	4012
    97   000000                     _TRISBbits	set	3987
    98   000000                     _LATB	set	3978
    99   000000                     _PORTBbits	set	3969
   100   000000                     _ANSELC	set	3898
   101   000000                     _ANSELB	set	3897
   102   000000                     _ANSELA	set	3896
   103   000000                     _LATAbits	set	3977
   104   000000                     _LATCbits	set	3979
   105   000000                     _TRISAbits	set	3986
   106   000000                     _LATBbits	set	3978
   107   000000                     _PIE1bits	set	3997
   108   000000                     _INTCON3bits	set	4080
   109   000000                     _INTCONbits	set	4082
   110   000000                     _RCSTA1	set	4011
   111   000000                     _TXSTA1bits	set	4012
   112   000000                     _ADCON0bits	set	4034
   113   000000                     _PIR1bits	set	3998
   114   000000                     _ADRES	set	4035
   115   000000                     _OSCCON	set	4051
   116   000000                     _TRISCbits	set	3988
   117   000000                     _TRISB	set	3987
   118   000000                     _ADCON2bits	set	4032
   119   000000                     _ADCON1bits	set	4033
   120   000000                     _SPBRGH1	set	4016
   121                           
   122                           	psect	smallconst
   123   000300                     __psmallconst:
   124                           	callstack 0
   125   000300  00                 	db	0
   126   000301                     STR_1:
   127   000301  20                 	db	32
   128   000302  6D                 	db	109	;'m'
   129   000303  56                 	db	86	;'V'
   130   000304  00                 	db	0
   131   000305  00                 	db	0	; dummy byte at the end
   132   000000                     
   133                           ; #config settings
   134                           
   135                           	psect	cinit
   136   000E32                     __pcinit:
   137                           	callstack 0
   138   000E32                     start_initialization:
   139                           	callstack 0
   140   000E32                     __initialization:
   141                           	callstack 0
   142                           
   143                           ; Initialize objects allocated to COMRAM (7 bytes)
   144                           ; load TBLPTR registers with __pidataCOMRAM
   145   000E32  0E84               	movlw	low __pidataCOMRAM
   146   000E34  6EF6               	movwf	tblptrl,c
   147   000E36  0E0F               	movlw	high __pidataCOMRAM
   148   000E38  6EF7               	movwf	tblptrh,c
   149   000E3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   150   000E3C  6EF8               	movwf	tblptru,c
   151   000E3E  EE00  F037         	lfsr	0,__pdataCOMRAM
   152   000E42  EE10 F007          	lfsr	1,7
   153   000E46                     copy_data0:
   154   000E46  0009               	tblrd		*+
   155   000E48  CFF5 FFEE          	movff	tablat,postinc0
   156   000E4C  50E5               	movf	postdec1,w,c
   157   000E4E  50E1               	movf	fsr1l,w,c
   158   000E50  E1FA               	bnz	copy_data0
   159                           
   160                           ; Clear objects allocated to COMRAM (8 bytes)
   161   000E52  EE00  F02F         	lfsr	0,__pbssCOMRAM
   162   000E56  0E08               	movlw	8
   163   000E58                     clear_0:
   164   000E58  6AEE               	clrf	postinc0,c
   165   000E5A  06E8               	decf	wreg,f,c
   166   000E5C  E1FD               	bnz	clear_0
   167   000E5E                     end_of_initialization:
   168                           	callstack 0
   169   000E5E                     __end_of__initialization:
   170                           	callstack 0
   171   000E5E  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   172   000E60  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   173   000E62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174   000E64  6EF8               	movwf	tblptru,c
   175   000E66  0100               	movlb	0
   176   000E68  EF3A  F006         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179   00002F                     __pbssCOMRAM:
   180                           	callstack 0
   181   00002F                     _LCD_busy_cnt:
   182                           	callstack 0
   183   00002F                     	ds	2
   184   000031                     append_sign_to_LCD@F5825:
   185                           	callstack 0
   186   000031                     	ds	2
   187   000033                     _USART1_Status:
   188                           	callstack 0
   189   000033                     	ds	1
   190   000034                     _LCD_data:
   191                           	callstack 0
   192   000034                     	ds	1
   193   000035                     _text_mode_column:
   194                           	callstack 0
   195   000035                     	ds	1
   196   000036                     _state_text_mode:
   197                           	callstack 0
   198   000036                     	ds	1
   199                           
   200                           	psect	dataCOMRAM
   201   000037                     __pdataCOMRAM:
   202                           	callstack 0
   203   000037                     main@F5814:
   204                           	callstack 0
   205   000037                     	ds	7
   206                           
   207                           	psect	cstackCOMRAM
   208   000001                     __pcstackCOMRAM:
   209                           	callstack 0
   210   000001                     ?___wmul:
   211                           	callstack 0
   212   000001                     ?___awdiv:
   213                           	callstack 0
   214   000001                     ?___lwmod:
   215                           	callstack 0
   216   000001                     Read1USART@data:
   217                           	callstack 0
   218   000001                     i2LCD_Write@value:
   219                           	callstack 0
   220   000001                     i2Write1USART@data:
   221                           	callstack 0
   222   000001                     ___wmul@multiplier:
   223                           	callstack 0
   224   000001                     ___awdiv@dividend:
   225                           	callstack 0
   226   000001                     ___lwmod@dividend:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x0
   230   000001                     	ds	1
   231   000002                     sendStatus@status:
   232                           	callstack 0
   233   000002                     LCD_ConstTextOut@col:
   234                           	callstack 0
   235   000002                     i2LCD_TextOut@col:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x1
   239   000002                     	ds	1
   240   000003                     LCD_ConstTextOut@text:
   241                           	callstack 0
   242   000003                     ___wmul@multiplicand:
   243                           	callstack 0
   244   000003                     ___awdiv@divisor:
   245                           	callstack 0
   246   000003                     ___lwmod@divisor:
   247                           	callstack 0
   248   000003                     i2LCD_TextOut@text:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x2
   252   000003                     	ds	2
   253   000005                     LCD_ConstTextOut@row:
   254                           	callstack 0
   255   000005                     ___awdiv@counter:
   256                           	callstack 0
   257   000005                     ___lwmod@counter:
   258                           	callstack 0
   259   000005                     i2LCD_TextOut@row:
   260                           	callstack 0
   261   000005                     ___wmul@product:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x4
   265   000005                     	ds	1
   266   000006                     append_sign_to_LCD@data:
   267                           	callstack 0
   268   000006                     ___awdiv@sign:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x5
   272   000006                     	ds	1
   273   000007                     ?___lwdiv:
   274                           	callstack 0
   275   000007                     append_sign_to_LCD@tempstr:
   276                           	callstack 0
   277   000007                     ___awdiv@quotient:
   278                           	callstack 0
   279   000007                     ___lwdiv@dividend:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x6
   283   000007                     	ds	2
   284   000009                     LCD_ValueOut_00@col:
   285                           	callstack 0
   286   000009                     ___lwdiv@divisor:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x8
   290   000009                     	ds	1
   291   00000A                     LCD_ValueOut_00@value:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x9
   295   00000A                     	ds	1
   296   00000B                     ___lwdiv@quotient:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0xA
   300   00000B                     	ds	1
   301   00000C                     LCD_ValueOut_00@min_dig:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0xB
   305   00000C                     	ds	1
   306   00000D                     LCD_ValueOut_00@row:
   307                           	callstack 0
   308   00000D                     ___lwdiv@counter:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0xC
   312   00000D                     	ds	1
   313   00000E                     LCD_ValueOut_00@leading_0:
   314                           	callstack 0
   315   00000E                     writeValToUSART@val:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0xD
   319   00000E                     	ds	1
   320   00000F                     LCD_ValueOut_00@chBuffer:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0xE
   324   00000F                     	ds	1
   325   000010                     writeValToUSART@c:
   326                           	callstack 0
   327   000010                     adc_to_LCD@val:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0xF
   331   000010                     	ds	2
   332   000012                     ??_adc_to_LCD:
   333                           
   334                           ; 1 bytes @ 0x11
   335   000012                     	ds	1
   336   000013                     ??_high_isr:
   337                           
   338                           ; 1 bytes @ 0x12
   339   000013                     	ds	10
   340   00001D                     high_isr@val:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x1C
   344   00001D                     	ds	2
   345   00001F                     high_isr@data:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x1E
   349   00001F                     	ds	1
   350   000020                     LCD_Write_Nibble@value:
   351                           	callstack 0
   352   000020                     LCD_Write@value:
   353                           	callstack 0
   354   000020                     Write1USART@data:
   355                           	callstack 0
   356   000020                     Open1USART@spbrg:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x1F
   360   000020                     	ds	1
   361   000021                     ??_LCD_Init:
   362   000021                     LCD_TextOut@col:
   363                           	callstack 0
   364   000021                     puts1USART@data:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x20
   368   000021                     	ds	1
   369   000022                     Open1USART@config:
   370                           	callstack 0
   371   000022                     LCD_TextOut@text:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x21
   375   000022                     	ds	1
   376   000023                     ___init@spbrg:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x22
   380   000023                     	ds	1
   381   000024                     LCD_TextOut@row:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x23
   385   000024                     	ds	1
   386   000025                     write_to_LCD@data:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x24
   390   000025                     	ds	2
   391   000027                     ??_main:
   392                           
   393                           ; 1 bytes @ 0x26
   394   000027                     	ds	1
   395   000028                     main@text:
   396                           	callstack 0
   397                           
   398                           ; 7 bytes @ 0x27
   399   000028                     	ds	7
   400                           
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 44 in file "L07_main_serialCommunication.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  text            7   39[COMRAM] unsigned char [7]
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   420 ;;      Params:         0       0       0       0
   421 ;;      Locals:         7       0       0       0
   422 ;;      Temps:          1       0       0       0
   423 ;;      Totals:         8       0       0       0
   424 ;;Total ram usage:        8 bytes
   425 ;; Hardware stack levels required when called: 7
   426 ;; This function calls:
   427 ;;		_LCD_Busy
   428 ;;		_LCD_Write
   429 ;;		___init
   430 ;;		_puts1USART
   431 ;;		_write_to_LCD
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text0
   438   000C74                     __ptext0:
   439                           	callstack 0
   440   000C74                     _main:
   441                           	callstack 24
   442   000C74                     
   443                           ;L07_main_serialCommunication.c: 45:     __init();
   444   000C74  EC6D  F005         	call	___init	;wreg free
   445   000C78                     l2111:
   446   000C78  ECDB  F006         	call	_LCD_Busy	;wreg free
   447   000C7C  0900               	iorlw	0
   448   000C7E  A4D8               	btfss	status,2,c
   449   000C80  EF44  F006         	goto	u1851
   450   000C84  EF46  F006         	goto	u1850
   451   000C88                     u1851:
   452   000C88  EF3C  F006         	goto	l2111
   453   000C8C                     u1850:
   454   000C8C  9A89               	bcf	137,5,c	;volatile
   455   000C8E  0E01               	movlw	1
   456   000C90  ECA2  F005         	call	_LCD_Write
   457   000C94  0E07               	movlw	7
   458   000C96  6E27               	movwf	??_main^0,c
   459   000C98  0E7D               	movlw	125
   460   000C9A                     u1977:
   461   000C9A  2EE8               	decfsz	wreg,f,c
   462   000C9C  D7FE               	bra	u1977
   463   000C9E  2E27               	decfsz	??_main^0,f,c
   464   000CA0  D7FC               	bra	u1977
   465   000CA2  F000               	nop	
   466   000CA4                     
   467                           ;L07_main_serialCommunication.c: 48:     char text[] = "HELLO\r";
   468   000CA4  EE20  F037         	lfsr	2,main@F5814
   469   000CA8  EE10  F028         	lfsr	1,main@text
   470   000CAC  0E06               	movlw	6
   471   000CAE                     u1861:
   472   000CAE  CFDB FFE3          	movff	plusw2,plusw1
   473   000CB2  06E8               	decf	wreg,f,c
   474   000CB4  E2FC               	bc	u1861
   475   000CB6                     
   476                           ;L07_main_serialCommunication.c: 49:     write_to_LCD(text);
   477   000CB6  0E28               	movlw	low main@text
   478   000CB8  6E25               	movwf	write_to_LCD@data^0,c
   479   000CBA  0E00               	movlw	high main@text
   480   000CBC  6E26               	movwf	(write_to_LCD@data+1)^0,c
   481   000CBE  ECB8  F007         	call	_write_to_LCD	;wreg free
   482   000CC2                     
   483                           ;L07_main_serialCommunication.c: 50:     puts1USART(text);
   484   000CC2  0E28               	movlw	low main@text
   485   000CC4  6E21               	movwf	puts1USART@data^0,c
   486   000CC6  0E00               	movlw	high main@text
   487   000CC8  6E22               	movwf	(puts1USART@data+1)^0,c
   488   000CCA  ECBC  F006         	call	_puts1USART	;wreg free
   489   000CCE                     l88:
   490   000CCE  EF67  F006         	goto	l88
   491   000CD2  EFFA  F000         	goto	start
   492   000CD6                     __end_of_main:
   493                           	callstack 0
   494                           
   495 ;; *************** function _write_to_LCD *****************
   496 ;; Defined at:
   497 ;;		line 138 in file "L07_main_serialCommunication.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  data            2   36[COMRAM] PTR unsigned char 
   500 ;;		 -> main@text(7), 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   512 ;;      Params:         2       0       0       0
   513 ;;      Locals:         0       0       0       0
   514 ;;      Temps:          0       0       0       0
   515 ;;      Totals:         2       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 6
   519 ;; This function calls:
   520 ;;		_LCD_TextOut
   521 ;; This function is called by:
   522 ;;		_main
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text1
   527   000F70                     __ptext1:
   528                           	callstack 0
   529   000F70                     _write_to_LCD:
   530                           	callstack 24
   531   000F70                     
   532                           ;L07_main_serialCommunication.c: 140:         LCD_TextOut(0,0,data);
   533   000F70  0E00               	movlw	0
   534   000F72  6E21               	movwf	LCD_TextOut@col^0,c
   535   000F74  C025  F022         	movff	write_to_LCD@data,LCD_TextOut@text
   536   000F78  C026  F023         	movff	write_to_LCD@data+1,LCD_TextOut@text+1
   537   000F7C  0E00               	movlw	0
   538   000F7E  EC01  F005         	call	_LCD_TextOut
   539   000F82  0012               	return		;funcret
   540   000F84                     __end_of_write_to_LCD:
   541                           	callstack 0
   542                           
   543 ;; *************** function _LCD_TextOut *****************
   544 ;; Defined at:
   545 ;;		line 174 in file "../../Libraries/LCD_library.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;  row             1    wreg     unsigned char 
   548 ;;  col             1   32[COMRAM] unsigned char 
   549 ;;  text            2   33[COMRAM] PTR unsigned char 
   550 ;;		 -> append_sign_to_LCD@tempstr(2), main@text(7), 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  row             1   35[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   562 ;;      Params:         3       0       0       0
   563 ;;      Locals:         1       0       0       0
   564 ;;      Temps:          0       0       0       0
   565 ;;      Totals:         4       0       0       0
   566 ;;Total ram usage:        4 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 5
   569 ;; This function calls:
   570 ;;		_LCD_Busy
   571 ;;		_LCD_Write
   572 ;; This function is called by:
   573 ;;		_write_to_LCD
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text2
   578   000A02                     __ptext2:
   579                           	callstack 0
   580   000A02                     _LCD_TextOut:
   581                           	callstack 24
   582                           
   583                           ;incstack = 0
   584                           ;LCD_TextOut@row stored from wreg
   585   000A02  6E24               	movwf	LCD_TextOut@row^0,c
   586   000A04                     l1783:
   587   000A04  ECDB  F006         	call	_LCD_Busy	;wreg free
   588   000A08  0900               	iorlw	0
   589   000A0A  A4D8               	btfss	status,2,c
   590   000A0C  EF0A  F005         	goto	u1291
   591   000A10  EF0C  F005         	goto	u1290
   592   000A14                     u1291:
   593   000A14  EF02  F005         	goto	l1783
   594   000A18                     u1290:
   595   000A18  9A89               	bcf	137,5,c	;volatile
   596   000A1A  5024               	movf	LCD_TextOut@row^0,w,c
   597   000A1C  0D40               	mullw	64
   598   000A1E  50F3               	movf	243,w,c
   599   000A20  2421               	addwf	LCD_TextOut@col^0,w,c
   600   000A22  0F80               	addlw	128
   601   000A24  ECA2  F005         	call	_LCD_Write
   602                           
   603                           ;../../Libraries/LCD_library.c: 177:     while (*text) {
   604   000A28  EF2A  F005         	goto	l1793
   605   000A2C                     l1787:
   606   000A2C  ECDB  F006         	call	_LCD_Busy	;wreg free
   607   000A30  0900               	iorlw	0
   608   000A32  A4D8               	btfss	status,2,c
   609   000A34  EF1E  F005         	goto	u1301
   610   000A38  EF20  F005         	goto	u1300
   611   000A3C                     u1301:
   612   000A3C  EF16  F005         	goto	l1787
   613   000A40                     u1300:
   614   000A40  8A89               	bsf	137,5,c	;volatile
   615   000A42  C022  FFD9         	movff	LCD_TextOut@text,fsr2l
   616   000A46  C023  FFDA         	movff	LCD_TextOut@text+1,fsr2h
   617   000A4A  50DF               	movf	indf2,w,c
   618   000A4C  ECA2  F005         	call	_LCD_Write
   619   000A50                     
   620                           ;../../Libraries/LCD_library.c: 179:         text++;
   621   000A50  4A22               	infsnz	LCD_TextOut@text^0,f,c
   622   000A52  2A23               	incf	(LCD_TextOut@text+1)^0,f,c
   623   000A54                     l1793:
   624                           
   625                           ;../../Libraries/LCD_library.c: 177:     while (*text) {
   626   000A54  C022  FFD9         	movff	LCD_TextOut@text,fsr2l
   627   000A58  C023  FFDA         	movff	LCD_TextOut@text+1,fsr2h
   628   000A5C  50DF               	movf	indf2,w,c
   629   000A5E  A4D8               	btfss	status,2,c
   630   000A60  EF34  F005         	goto	u1311
   631   000A64  EF36  F005         	goto	u1310
   632   000A68                     u1311:
   633   000A68  EF16  F005         	goto	l1787
   634   000A6C                     u1310:
   635   000A6C  0012               	return		;funcret
   636   000A6E                     __end_of_LCD_TextOut:
   637                           	callstack 0
   638                           
   639 ;; *************** function _puts1USART *****************
   640 ;; Defined at:
   641 ;;		line 95 in file "../../Libraries/PLIB_USART.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  data            2   32[COMRAM] PTR unsigned char 
   644 ;;		 -> main@text(7), 
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   656 ;;      Params:         2       0       0       0
   657 ;;      Locals:         0       0       0       0
   658 ;;      Temps:          0       0       0       0
   659 ;;      Totals:         2       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 5
   663 ;; This function calls:
   664 ;;		_Write1USART
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text3
   671   000D78                     __ptext3:
   672                           	callstack 0
   673   000D78                     _puts1USART:
   674                           	callstack 25
   675   000D78                     
   676                           ;../../Libraries/PLIB_USART.c: 96:     while (*data) {
   677   000D78  EFCE  F006         	goto	l2065
   678   000D7C                     l336:
   679   000D7C  A2AC               	btfss	172,1,c	;volatile
   680   000D7E  EFC3  F006         	goto	u1771
   681   000D82  EFC5  F006         	goto	u1770
   682   000D86                     u1771:
   683   000D86  EFBE  F006         	goto	l336
   684   000D8A                     u1770:
   685   000D8A                     
   686                           ;../../Libraries/PLIB_USART.c: 98:         Write1USART(*data);
   687   000D8A  C021  FFD9         	movff	puts1USART@data,fsr2l
   688   000D8E  C022  FFDA         	movff	puts1USART@data+1,fsr2h
   689   000D92  50DF               	movf	indf2,w,c
   690   000D94  EC69  F007         	call	_Write1USART
   691   000D98                     
   692                           ;../../Libraries/PLIB_USART.c: 99:         data++;
   693   000D98  4A21               	infsnz	puts1USART@data^0,f,c
   694   000D9A  2A22               	incf	(puts1USART@data+1)^0,f,c
   695   000D9C                     l2065:
   696                           
   697                           ;../../Libraries/PLIB_USART.c: 96:     while (*data) {
   698   000D9C  C021  FFD9         	movff	puts1USART@data,fsr2l
   699   000DA0  C022  FFDA         	movff	puts1USART@data+1,fsr2h
   700   000DA4  50DF               	movf	indf2,w,c
   701   000DA6  A4D8               	btfss	status,2,c
   702   000DA8  EFD8  F006         	goto	u1781
   703   000DAC  EFDA  F006         	goto	u1780
   704   000DB0                     u1781:
   705   000DB0  EFBE  F006         	goto	l336
   706   000DB4                     u1780:
   707   000DB4  0012               	return		;funcret
   708   000DB6                     __end_of_puts1USART:
   709                           	callstack 0
   710                           
   711 ;; *************** function _Write1USART *****************
   712 ;; Defined at:
   713 ;;		line 84 in file "../../Libraries/PLIB_USART.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  data            1    wreg     unsigned char 
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  data            1   31[COMRAM] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   727 ;;      Params:         0       0       0       0
   728 ;;      Locals:         1       0       0       0
   729 ;;      Temps:          0       0       0       0
   730 ;;      Totals:         1       0       0       0
   731 ;;Total ram usage:        1 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; Hardware stack levels required when called: 4
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_puts1USART
   738 ;;		_putrs1USART
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text4
   743   000ED2                     __ptext4:
   744                           	callstack 0
   745   000ED2                     _Write1USART:
   746                           	callstack 25
   747                           
   748                           ;incstack = 0
   749                           ;Write1USART@data stored from wreg
   750   000ED2  6E20               	movwf	Write1USART@data^0,c
   751   000ED4                     
   752                           ;../../Libraries/PLIB_USART.c: 85:     if (TXSTA1bits.TX9)
   753   000ED4  ACAC               	btfss	172,6,c	;volatile
   754   000ED6  EF6F  F007         	goto	u311
   755   000EDA  EF71  F007         	goto	u310
   756   000EDE                     u311:
   757   000EDE  EF7A  F007         	goto	l1189
   758   000EE2                     u310:
   759   000EE2                     
   760                           ;../../Libraries/PLIB_USART.c: 86:     {;../../Libraries/PLIB_USART.c: 87:         TXSTA
      +                          1bits.TX9D = 0;
   761   000EE2  90AC               	bcf	172,0,c	;volatile
   762                           
   763                           ;../../Libraries/PLIB_USART.c: 88:         if (USART1_Status.TX_NINE)
   764   000EE4  A233               	btfss	_USART1_Status^0,1,c
   765   000EE6  EF77  F007         	goto	u321
   766   000EEA  EF79  F007         	goto	u320
   767   000EEE                     u321:
   768   000EEE  EF7A  F007         	goto	l1189
   769   000EF2                     u320:
   770   000EF2                     
   771                           ;../../Libraries/PLIB_USART.c: 89:             TXSTA1bits.TX9D = 1;
   772   000EF2  80AC               	bsf	172,0,c	;volatile
   773   000EF4                     l1189:
   774                           
   775                           ;../../Libraries/PLIB_USART.c: 92:     TXREG1 = data;
   776   000EF4  C020  FFAD         	movff	Write1USART@data,4013	;volatile
   777   000EF8  0012               	return		;funcret
   778   000EFA                     __end_of_Write1USART:
   779                           	callstack 0
   780                           
   781 ;; *************** function ___init *****************
   782 ;; Defined at:
   783 ;;		line 184 in file "L07_main_serialCommunication.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  spbrg           2   34[COMRAM] unsigned int 
   788 ;;  config          1    0        unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   798 ;;      Params:         0       0       0       0
   799 ;;      Locals:         2       0       0       0
   800 ;;      Temps:          0       0       0       0
   801 ;;      Totals:         2       0       0       0
   802 ;;Total ram usage:        2 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 6
   805 ;; This function calls:
   806 ;;		_LCD_Init
   807 ;;		_Open1USART
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text5
   814   000ADA                     __ptext5:
   815                           	callstack 0
   816   000ADA                     ___init:
   817                           	callstack 24
   818   000ADA                     
   819                           ;L07_main_serialCommunication.c: 185:     OSCCON = 0x50;
   820   000ADA  0E50               	movlw	80
   821   000ADC  6ED3               	movwf	211,c	;volatile
   822   000ADE                     
   823                           ;L07_main_serialCommunication.c: 190:     LATB = 255;
   824   000ADE  688A               	setf	138,c	;volatile
   825   000AE0                     
   826                           ;L07_main_serialCommunication.c: 191:     TRISAbits.TRISA0 = 1;
   827   000AE0  8092               	bsf	146,0,c	;volatile
   828                           
   829                           ;L07_main_serialCommunication.c: 192:     ANSELA = 0b00000001;
   830   000AE2  0E01               	movlw	1
   831   000AE4  010F               	movlb	15	; () banked
   832   000AE6  6F38               	movwf	56,b	;volatile
   833                           
   834                           ;L07_main_serialCommunication.c: 193:     ANSELB = ANSELC = 0x00;
   835   000AE8  0E00               	movlw	0
   836   000AEA  6F3A               	movwf	58,b	;volatile
   837   000AEC  CF3A FF39          	movff	3898,3897	;volatile
   838                           
   839                           ;L07_main_serialCommunication.c: 194:     TRISB = 0b0000010;
   840   000AF0  0E02               	movlw	2
   841   000AF2  6E93               	movwf	147,c	;volatile
   842   000AF4                     
   843                           ; BSR set to: 15
   844                           ;L07_main_serialCommunication.c: 200:     TRISCbits.TRISC6 = 1 ;
   845   000AF4  8C94               	bsf	148,6,c	;volatile
   846   000AF6                     
   847                           ; BSR set to: 15
   848                           ;L07_main_serialCommunication.c: 201:     TRISCbits.TRISC7 = 1 ;
   849   000AF6  8E94               	bsf	148,7,c	;volatile
   850   000AF8                     
   851                           ; BSR set to: 15
   852                           ;L07_main_serialCommunication.c: 211:     TXSTA1bits.SENDB = 0;
   853   000AF8  96AC               	bcf	172,3,c	;volatile
   854                           
   855                           ;L07_main_serialCommunication.c: 216:     unsigned int spbrg = 51;
   856   000AFA  0E00               	movlw	0
   857   000AFC  6E24               	movwf	(___init@spbrg+1)^0,c
   858   000AFE  0E33               	movlw	51
   859   000B00  6E23               	movwf	___init@spbrg^0,c
   860   000B02                     
   861                           ; BSR set to: 15
   862                           ;L07_main_serialCommunication.c: 217:     Open1USART(config, spbrg);
   863   000B02  0E00               	movlw	0
   864   000B04  6E21               	movwf	(Open1USART@spbrg+1)^0,c
   865   000B06  0E33               	movlw	51
   866   000B08  6E20               	movwf	Open1USART@spbrg^0,c
   867   000B0A  0E7C               	movlw	124
   868   000B0C  ECFE  F003         	call	_Open1USART
   869   000B10                     
   870                           ;L07_main_serialCommunication.c: 218:     BAUDCON1 = 0b11111111 & 0b11011111 & 0b1110111
      +                          1 & 0b11111110 & 0b11111101;
   871   000B10  0ECC               	movlw	204
   872   000B12  6EB8               	movwf	184,c	;volatile
   873   000B14                     
   874                           ;L07_main_serialCommunication.c: 224:     ADCON0bits.CHS = 0b00000;
   875   000B14  0E83               	movlw	-125
   876   000B16  16C2               	andwf	194,f,c	;volatile
   877   000B18                     
   878                           ;L07_main_serialCommunication.c: 225:     ADCON1bits.PVCFG = 0b00;
   879   000B18  0EF3               	movlw	-13
   880   000B1A  16C1               	andwf	193,f,c	;volatile
   881   000B1C                     
   882                           ;L07_main_serialCommunication.c: 226:     ADCON1bits.NVCFG = 0b00;
   883   000B1C  0EFC               	movlw	-4
   884   000B1E  16C1               	andwf	193,f,c	;volatile
   885   000B20                     
   886                           ;L07_main_serialCommunication.c: 227:     ADCON2bits.ACQT = 0b101;
   887   000B20  50C0               	movf	192,w,c	;volatile
   888   000B22  0BC7               	andlw	-57
   889   000B24  0928               	iorlw	40
   890   000B26  6EC0               	movwf	192,c	;volatile
   891   000B28                     
   892                           ;L07_main_serialCommunication.c: 228:     ADCON2bits.ADCS = 0b010;
   893   000B28  50C0               	movf	192,w,c	;volatile
   894   000B2A  0BF8               	andlw	-8
   895   000B2C  0902               	iorlw	2
   896   000B2E  6EC0               	movwf	192,c	;volatile
   897   000B30                     
   898                           ;L07_main_serialCommunication.c: 229:     ADCON2bits.ADFM = 0b1;
   899   000B30  8EC0               	bsf	192,7,c	;volatile
   900   000B32                     
   901                           ;L07_main_serialCommunication.c: 230:     ADCON0bits.ADON = 1;
   902   000B32  80C2               	bsf	194,0,c	;volatile
   903   000B34                     
   904                           ;L07_main_serialCommunication.c: 231:     PIR1bits.ADIF = 0;
   905   000B34  9C9E               	bcf	158,6,c	;volatile
   906   000B36                     
   907                           ;L07_main_serialCommunication.c: 232:     PIE1bits.ADIE = 1;
   908   000B36  8C9D               	bsf	157,6,c	;volatile
   909   000B38                     
   910                           ;L07_main_serialCommunication.c: 234:     LCD_Init();
   911   000B38  ECF1  F002         	call	_LCD_Init	;wreg free
   912   000B3C                     
   913                           ;L07_main_serialCommunication.c: 237:     INTCON3bits.INT1IE = 1;
   914   000B3C  86F0               	bsf	240,3,c	;volatile
   915   000B3E                     
   916                           ;L07_main_serialCommunication.c: 240:     INTCONbits.PEIE = 1;
   917   000B3E  8CF2               	bsf	242,6,c	;volatile
   918   000B40                     
   919                           ;L07_main_serialCommunication.c: 241:     INTCONbits.GIE = 1;
   920   000B40  8EF2               	bsf	242,7,c	;volatile
   921   000B42  0012               	return		;funcret
   922   000B44                     __end_of___init:
   923                           	callstack 0
   924                           
   925 ;; *************** function _Open1USART *****************
   926 ;; Defined at:
   927 ;;		line 15 in file "../../Libraries/PLIB_USART.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  config          1    wreg     unsigned char 
   930 ;;  spbrg           2   31[COMRAM] unsigned int 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  config          1   33[COMRAM] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   942 ;;      Params:         2       0       0       0
   943 ;;      Locals:         1       0       0       0
   944 ;;      Temps:          0       0       0       0
   945 ;;      Totals:         3       0       0       0
   946 ;;Total ram usage:        3 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 4
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		___init
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text6
   957   0007FC                     __ptext6:
   958                           	callstack 0
   959   0007FC                     _Open1USART:
   960                           	callstack 25
   961                           
   962                           ;incstack = 0
   963                           ;Open1USART@config stored from wreg
   964   0007FC  6E22               	movwf	Open1USART@config^0,c
   965   0007FE                     
   966                           ;../../Libraries/PLIB_USART.c: 16:     TXSTA1 = 0;
   967   0007FE  0E00               	movlw	0
   968   000800  6EAC               	movwf	172,c	;volatile
   969                           
   970                           ;../../Libraries/PLIB_USART.c: 17:     RCSTA1 = 0;
   971   000802  0E00               	movlw	0
   972   000804  6EAB               	movwf	171,c	;volatile
   973   000806                     
   974                           ;../../Libraries/PLIB_USART.c: 19:     if (config & 0x01)
   975   000806  A022               	btfss	Open1USART@config^0,0,c
   976   000808  EF08  F004         	goto	u1581
   977   00080C  EF0A  F004         	goto	u1580
   978   000810                     u1581:
   979   000810  EF0B  F004         	goto	l1921
   980   000814                     u1580:
   981   000814                     
   982                           ;../../Libraries/PLIB_USART.c: 20:         TXSTA1bits.SYNC = 1;
   983   000814  88AC               	bsf	172,4,c	;volatile
   984   000816                     l1921:
   985                           
   986                           ;../../Libraries/PLIB_USART.c: 22:     if (config & 0x02)
   987   000816  A222               	btfss	Open1USART@config^0,1,c
   988   000818  EF10  F004         	goto	u1591
   989   00081C  EF12  F004         	goto	u1590
   990   000820                     u1591:
   991   000820  EF14  F004         	goto	l1925
   992   000824                     u1590:
   993   000824                     
   994                           ;../../Libraries/PLIB_USART.c: 23:     {;../../Libraries/PLIB_USART.c: 24:         TXSTA
      +                          1bits.TX9 = 1;
   995   000824  8CAC               	bsf	172,6,c	;volatile
   996                           
   997                           ;../../Libraries/PLIB_USART.c: 25:         RCSTA1bits.RX9 = 1;
   998   000826  8CAB               	bsf	171,6,c	;volatile
   999   000828                     l1925:
  1000                           
  1001                           ;../../Libraries/PLIB_USART.c: 28:     if (config & 0x04)
  1002   000828  A422               	btfss	Open1USART@config^0,2,c
  1003   00082A  EF19  F004         	goto	u1601
  1004   00082E  EF1B  F004         	goto	u1600
  1005   000832                     u1601:
  1006   000832  EF1C  F004         	goto	l1929
  1007   000836                     u1600:
  1008   000836                     
  1009                           ;../../Libraries/PLIB_USART.c: 29:         TXSTA1bits.CSRC = 1;
  1010   000836  8EAC               	bsf	172,7,c	;volatile
  1011   000838                     l1929:
  1012                           
  1013                           ;../../Libraries/PLIB_USART.c: 31:     if (config & 0x08)
  1014   000838  A622               	btfss	Open1USART@config^0,3,c
  1015   00083A  EF21  F004         	goto	u1611
  1016   00083E  EF23  F004         	goto	u1610
  1017   000842                     u1611:
  1018   000842  EF26  F004         	goto	l311
  1019   000846                     u1610:
  1020   000846                     
  1021                           ;../../Libraries/PLIB_USART.c: 32:         RCSTA1bits.CREN = 1;
  1022   000846  88AB               	bsf	171,4,c	;volatile
  1023   000848  EF27  F004         	goto	l1933
  1024   00084C                     l311:
  1025                           
  1026                           ;../../Libraries/PLIB_USART.c: 34:         RCSTA1bits.SREN = 1;
  1027   00084C  8AAB               	bsf	171,5,c	;volatile
  1028   00084E                     l1933:
  1029                           
  1030                           ;../../Libraries/PLIB_USART.c: 36:     if (config & 0x10)
  1031   00084E  A822               	btfss	Open1USART@config^0,4,c
  1032   000850  EF2C  F004         	goto	u1621
  1033   000854  EF2E  F004         	goto	u1620
  1034   000858                     u1621:
  1035   000858  EF2F  F004         	goto	l1937
  1036   00085C                     u1620:
  1037   00085C                     
  1038                           ;../../Libraries/PLIB_USART.c: 37:         TXSTA1bits.BRGH = 1;
  1039   00085C  84AC               	bsf	172,2,c	;volatile
  1040   00085E                     l1937:
  1041                           
  1042                           ;../../Libraries/PLIB_USART.c: 39:     if (config & 0x20)
  1043   00085E  AA22               	btfss	Open1USART@config^0,5,c
  1044   000860  EF34  F004         	goto	u1631
  1045   000864  EF36  F004         	goto	u1630
  1046   000868                     u1631:
  1047   000868  EF37  F004         	goto	l1941
  1048   00086C                     u1630:
  1049   00086C                     
  1050                           ;../../Libraries/PLIB_USART.c: 40:         RCSTA1bits.ADDEN = 1;
  1051   00086C  86AB               	bsf	171,3,c	;volatile
  1052   00086E                     l1941:
  1053                           
  1054                           ;../../Libraries/PLIB_USART.c: 44:     if (config & 0x40)
  1055   00086E  AC22               	btfss	Open1USART@config^0,6,c
  1056   000870  EF3C  F004         	goto	u1641
  1057   000874  EF3E  F004         	goto	u1640
  1058   000878                     u1641:
  1059   000878  EF41  F004         	goto	l315
  1060   00087C                     u1640:
  1061   00087C                     
  1062                           ;../../Libraries/PLIB_USART.c: 45:         PIE1bits.RC1IE = 1;
  1063   00087C  8A9D               	bsf	157,5,c	;volatile
  1064   00087E  EF42  F004         	goto	l1945
  1065   000882                     l315:
  1066                           
  1067                           ;../../Libraries/PLIB_USART.c: 47:         PIE1bits.RC1IE = 0;
  1068   000882  9A9D               	bcf	157,5,c	;volatile
  1069   000884                     l1945:
  1070                           
  1071                           ;../../Libraries/PLIB_USART.c: 49:     if (config & 0x80)
  1072   000884  AE22               	btfss	Open1USART@config^0,7,c
  1073   000886  EF47  F004         	goto	u1651
  1074   00088A  EF49  F004         	goto	u1650
  1075   00088E                     u1651:
  1076   00088E  EF4C  F004         	goto	l317
  1077   000892                     u1650:
  1078   000892                     
  1079                           ;../../Libraries/PLIB_USART.c: 50:         PIE1bits.TX1IE = 1;
  1080   000892  889D               	bsf	157,4,c	;volatile
  1081   000894  EF4D  F004         	goto	l318
  1082   000898                     l317:
  1083                           
  1084                           ;../../Libraries/PLIB_USART.c: 52:         PIE1bits.TX1IE = 0;
  1085   000898  989D               	bcf	157,4,c	;volatile
  1086   00089A                     l318:
  1087                           
  1088                           ;../../Libraries/PLIB_USART.c: 54:     SPBRG1 = spbrg;
  1089   00089A  C020  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  1090   00089E                     
  1091                           ;../../Libraries/PLIB_USART.c: 55:     SPBRGH1 = spbrg >> 8;
  1092   00089E  5021               	movf	(Open1USART@spbrg+1)^0,w,c
  1093   0008A0  6EB0               	movwf	176,c	;volatile
  1094   0008A2                     
  1095                           ;../../Libraries/PLIB_USART.c: 57:     TXSTA1bits.TXEN = 1;
  1096   0008A2  8AAC               	bsf	172,5,c	;volatile
  1097   0008A4                     
  1098                           ;../../Libraries/PLIB_USART.c: 58:     RCSTA1bits.SPEN = 1;
  1099   0008A4  8EAB               	bsf	171,7,c	;volatile
  1100   0008A6  0012               	return		;funcret
  1101   0008A8                     __end_of_Open1USART:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _LCD_Init *****************
  1105 ;; Defined at:
  1106 ;;		line 30 in file "../../Libraries/LCD_library.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      void 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1120 ;;      Params:         0       0       0       0
  1121 ;;      Locals:         0       0       0       0
  1122 ;;      Temps:          1       0       0       0
  1123 ;;      Totals:         1       0       0       0
  1124 ;;Total ram usage:        1 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; Hardware stack levels required when called: 5
  1127 ;; This function calls:
  1128 ;;		_LCD_Busy
  1129 ;;		_LCD_Write
  1130 ;;		_LCD_Write_Nibble
  1131 ;; This function is called by:
  1132 ;;		___init
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text7
  1137   0005E2                     __ptext7:
  1138                           	callstack 0
  1139   0005E2                     _LCD_Init:
  1140                           	callstack 24
  1141   0005E2                     
  1142                           ;../../Libraries/LCD_library.c: 34:     LATCbits.LATC0 = 0; TRISCbits.TRISC0 = 0;
  1143   0005E2  908B               	bcf	139,0,c	;volatile
  1144   0005E4  9094               	bcf	148,0,c	;volatile
  1145                           
  1146                           ;../../Libraries/LCD_library.c: 35:     LATAbits.LATA5 = 0; TRISAbits.TRISA5 = 0;
  1147   0005E6  9A89               	bcf	137,5,c	;volatile
  1148   0005E8  9A92               	bcf	146,5,c	;volatile
  1149                           
  1150                           ;../../Libraries/LCD_library.c: 36:     LATCbits.LATC1 = 0; TRISCbits.TRISC1 = 0;
  1151   0005EA  928B               	bcf	139,1,c	;volatile
  1152   0005EC  9294               	bcf	148,1,c	;volatile
  1153                           
  1154                           ;../../Libraries/LCD_library.c: 39:     LATBbits.LATB2 = 0; TRISBbits.TRISB2 = 0;
  1155   0005EE  948A               	bcf	138,2,c	;volatile
  1156   0005F0  9493               	bcf	147,2,c	;volatile
  1157                           
  1158                           ;../../Libraries/LCD_library.c: 40:     LATBbits.LATB3 = 0; TRISBbits.TRISB3 = 0;
  1159   0005F2  968A               	bcf	138,3,c	;volatile
  1160   0005F4  9693               	bcf	147,3,c	;volatile
  1161                           
  1162                           ;../../Libraries/LCD_library.c: 41:     LATBbits.LATB4 = 0; TRISBbits.TRISB4 = 0;
  1163   0005F6  988A               	bcf	138,4,c	;volatile
  1164   0005F8  9893               	bcf	147,4,c	;volatile
  1165                           
  1166                           ;../../Libraries/LCD_library.c: 42:     LATBbits.LATB5 = 0; TRISBbits.TRISB5 = 0;
  1167   0005FA  9A8A               	bcf	138,5,c	;volatile
  1168   0005FC  9A93               	bcf	147,5,c	;volatile
  1169   0005FE                     
  1170                           ;../../Libraries/LCD_library.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));_d
      +                          elay((unsigned long)((5)*(4000000/4000.0)));_delay((unsigned long)((5)*(4000000/4000.0))
      +                          );
  1171   0005FE  0E07               	movlw	7
  1172   000600  6E21               	movwf	??_LCD_Init^0,c
  1173   000602  0E7D               	movlw	125
  1174   000604                     u1987:
  1175   000604  2EE8               	decfsz	wreg,f,c
  1176   000606  D7FE               	bra	u1987
  1177   000608  2E21               	decfsz	??_LCD_Init^0,f,c
  1178   00060A  D7FC               	bra	u1987
  1179   00060C  F000               	nop	
  1180   00060E  0E07               	movlw	7
  1181   000610  6E21               	movwf	??_LCD_Init^0,c
  1182   000612  0E7D               	movlw	125
  1183   000614                     u1997:
  1184   000614  2EE8               	decfsz	wreg,f,c
  1185   000616  D7FE               	bra	u1997
  1186   000618  2E21               	decfsz	??_LCD_Init^0,f,c
  1187   00061A  D7FC               	bra	u1997
  1188   00061C  F000               	nop	
  1189   00061E  0E07               	movlw	7
  1190   000620  6E21               	movwf	??_LCD_Init^0,c
  1191   000622  0E7D               	movlw	125
  1192   000624                     u2007:
  1193   000624  2EE8               	decfsz	wreg,f,c
  1194   000626  D7FE               	bra	u2007
  1195   000628  2E21               	decfsz	??_LCD_Init^0,f,c
  1196   00062A  D7FC               	bra	u2007
  1197   00062C  F000               	nop	
  1198   00062E                     
  1199                           ;../../Libraries/LCD_library.c: 46:     LCD_Write_Nibble(0x30); _delay((unsigned long)((
      +                          5)*(4000000/4000.0)));
  1200   00062E  0E30               	movlw	48
  1201   000630  EC36  F007         	call	_LCD_Write_Nibble
  1202   000634  0E07               	movlw	7
  1203   000636  6E21               	movwf	??_LCD_Init^0,c
  1204   000638  0E7D               	movlw	125
  1205   00063A                     u2017:
  1206   00063A  2EE8               	decfsz	wreg,f,c
  1207   00063C  D7FE               	bra	u2017
  1208   00063E  2E21               	decfsz	??_LCD_Init^0,f,c
  1209   000640  D7FC               	bra	u2017
  1210   000642  F000               	nop	
  1211                           
  1212                           ;../../Libraries/LCD_library.c: 47:     LCD_Write_Nibble(0x30); _delay((unsigned long)((
      +                          5)*(4000000/4000.0)));
  1213   000644  0E30               	movlw	48
  1214   000646  EC36  F007         	call	_LCD_Write_Nibble
  1215   00064A  0E07               	movlw	7
  1216   00064C  6E21               	movwf	??_LCD_Init^0,c
  1217   00064E  0E7D               	movlw	125
  1218   000650                     u2027:
  1219   000650  2EE8               	decfsz	wreg,f,c
  1220   000652  D7FE               	bra	u2027
  1221   000654  2E21               	decfsz	??_LCD_Init^0,f,c
  1222   000656  D7FC               	bra	u2027
  1223   000658  F000               	nop	
  1224   00065A                     
  1225                           ;../../Libraries/LCD_library.c: 48:     LCD_Write_Nibble(0x30); _delay((unsigned long)((
      +                          5)*(4000000/4000.0)));
  1226   00065A  0E30               	movlw	48
  1227   00065C  EC36  F007         	call	_LCD_Write_Nibble
  1228   000660  0E07               	movlw	7
  1229   000662  6E21               	movwf	??_LCD_Init^0,c
  1230   000664  0E7D               	movlw	125
  1231   000666                     u2037:
  1232   000666  2EE8               	decfsz	wreg,f,c
  1233   000668  D7FE               	bra	u2037
  1234   00066A  2E21               	decfsz	??_LCD_Init^0,f,c
  1235   00066C  D7FC               	bra	u2037
  1236   00066E  F000               	nop	
  1237   000670                     
  1238                           ;../../Libraries/LCD_library.c: 50:     LCD_Write_Nibble(0x20);
  1239   000670  0E20               	movlw	32
  1240   000672  EC36  F007         	call	_LCD_Write_Nibble
  1241   000676                     l1379:
  1242   000676  ECDB  F006         	call	_LCD_Busy	;wreg free
  1243   00067A  0900               	iorlw	0
  1244   00067C  A4D8               	btfss	status,2,c
  1245   00067E  EF43  F003         	goto	u701
  1246   000682  EF45  F003         	goto	u700
  1247   000686                     u701:
  1248   000686  EF3B  F003         	goto	l1379
  1249   00068A                     u700:
  1250   00068A                     l1381:
  1251   00068A  ECDB  F006         	call	_LCD_Busy	;wreg free
  1252   00068E  0900               	iorlw	0
  1253   000690  A4D8               	btfss	status,2,c
  1254   000692  EF4D  F003         	goto	u711
  1255   000696  EF4F  F003         	goto	u710
  1256   00069A                     u711:
  1257   00069A  EF45  F003         	goto	l1381
  1258   00069E                     u710:
  1259   00069E  9A89               	bcf	137,5,c	;volatile
  1260   0006A0  0E28               	movlw	40
  1261   0006A2  ECA2  F005         	call	_LCD_Write
  1262   0006A6                     l1385:
  1263   0006A6  ECDB  F006         	call	_LCD_Busy	;wreg free
  1264   0006AA  0900               	iorlw	0
  1265   0006AC  A4D8               	btfss	status,2,c
  1266   0006AE  EF5B  F003         	goto	u721
  1267   0006B2  EF5D  F003         	goto	u720
  1268   0006B6                     u721:
  1269   0006B6  EF53  F003         	goto	l1385
  1270   0006BA                     u720:
  1271   0006BA  9A89               	bcf	137,5,c	;volatile
  1272   0006BC  0E0C               	movlw	12
  1273   0006BE  ECA2  F005         	call	_LCD_Write
  1274   0006C2                     l1389:
  1275   0006C2  ECDB  F006         	call	_LCD_Busy	;wreg free
  1276   0006C6  0900               	iorlw	0
  1277   0006C8  A4D8               	btfss	status,2,c
  1278   0006CA  EF69  F003         	goto	u731
  1279   0006CE  EF6B  F003         	goto	u730
  1280   0006D2                     u731:
  1281   0006D2  EF61  F003         	goto	l1389
  1282   0006D6                     u730:
  1283   0006D6  9A89               	bcf	137,5,c	;volatile
  1284   0006D8  0E06               	movlw	6
  1285   0006DA  ECA2  F005         	call	_LCD_Write
  1286   0006DE                     l1393:
  1287   0006DE  ECDB  F006         	call	_LCD_Busy	;wreg free
  1288   0006E2  0900               	iorlw	0
  1289   0006E4  A4D8               	btfss	status,2,c
  1290   0006E6  EF77  F003         	goto	u741
  1291   0006EA  EF79  F003         	goto	u740
  1292   0006EE                     u741:
  1293   0006EE  EF6F  F003         	goto	l1393
  1294   0006F2                     u740:
  1295   0006F2  9A89               	bcf	137,5,c	;volatile
  1296   0006F4  0E01               	movlw	1
  1297   0006F6  ECA2  F005         	call	_LCD_Write
  1298   0006FA  0E07               	movlw	7
  1299   0006FC  6E21               	movwf	??_LCD_Init^0,c
  1300   0006FE  0E7D               	movlw	125
  1301   000700                     u2047:
  1302   000700  2EE8               	decfsz	wreg,f,c
  1303   000702  D7FE               	bra	u2047
  1304   000704  2E21               	decfsz	??_LCD_Init^0,f,c
  1305   000706  D7FC               	bra	u2047
  1306   000708  F000               	nop	
  1307   00070A                     l1399:
  1308   00070A  ECDB  F006         	call	_LCD_Busy	;wreg free
  1309   00070E  0900               	iorlw	0
  1310   000710  A4D8               	btfss	status,2,c
  1311   000712  EF8D  F003         	goto	u751
  1312   000716  EF8F  F003         	goto	u750
  1313   00071A                     u751:
  1314   00071A  EF85  F003         	goto	l1399
  1315   00071E                     u750:
  1316   00071E  9A89               	bcf	137,5,c	;volatile
  1317   000720  0E02               	movlw	2
  1318   000722  ECA2  F005         	call	_LCD_Write
  1319   000726  0E07               	movlw	7
  1320   000728  6E21               	movwf	??_LCD_Init^0,c
  1321   00072A  0E7D               	movlw	125
  1322   00072C                     u2057:
  1323   00072C  2EE8               	decfsz	wreg,f,c
  1324   00072E  D7FE               	bra	u2057
  1325   000730  2E21               	decfsz	??_LCD_Init^0,f,c
  1326   000732  D7FC               	bra	u2057
  1327   000734  F000               	nop	
  1328   000736  0012               	return		;funcret
  1329   000738                     __end_of_LCD_Init:
  1330                           	callstack 0
  1331                           
  1332 ;; *************** function _LCD_Write_Nibble *****************
  1333 ;; Defined at:
  1334 ;;		line 76 in file "../../Libraries/LCD_library.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  value           1    wreg     unsigned char 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  value           1   31[COMRAM] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1348 ;;      Params:         0       0       0       0
  1349 ;;      Locals:         1       0       0       0
  1350 ;;      Temps:          0       0       0       0
  1351 ;;      Totals:         1       0       0       0
  1352 ;;Total ram usage:        1 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 4
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_LCD_Init
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text8
  1363   000E6C                     __ptext8:
  1364                           	callstack 0
  1365   000E6C                     _LCD_Write_Nibble:
  1366                           	callstack 24
  1367                           
  1368                           ;incstack = 0
  1369                           ;LCD_Write_Nibble@value stored from wreg
  1370   000E6C  6E20               	movwf	LCD_Write_Nibble@value^0,c
  1371   000E6E                     
  1372                           ;../../Libraries/LCD_library.c: 76: void LCD_Write_Nibble(unsigned char value);../../Lib
      +                          raries/LCD_library.c: 77: {;../../Libraries/LCD_library.c: 78:     LCD_data.all = value;
  1373   000E6E  C020  F034         	movff	LCD_Write_Nibble@value,_LCD_data
  1374   000E72                     
  1375                           ;../../Libraries/LCD_library.c: 79:     LATAbits.LATA5 = 0;
  1376   000E72  9A89               	bcf	137,5,c	;volatile
  1377   000E74                     
  1378                           ;../../Libraries/LCD_library.c: 80:     LATCbits.LATC0 = 0;
  1379   000E74  908B               	bcf	139,0,c	;volatile
  1380   000E76                     
  1381                           ;../../Libraries/LCD_library.c: 82:     LATBbits.LATB2 = LCD_data.bit4;
  1382   000E76  A834               	btfss	_LCD_data^0,4,c
  1383   000E78  D002               	bra	u115
  1384   000E7A  848A               	bsf	138,2,c	;volatile
  1385   000E7C  D001               	bra	u117
  1386   000E7E                     u115:
  1387   000E7E  948A               	bcf	138,2,c	;volatile
  1388   000E80                     u117:
  1389   000E80                     
  1390                           ;../../Libraries/LCD_library.c: 83:     LATBbits.LATB3 = LCD_data.bit5;
  1391   000E80  AA34               	btfss	_LCD_data^0,5,c
  1392   000E82  D002               	bra	u125
  1393   000E84  868A               	bsf	138,3,c	;volatile
  1394   000E86  D001               	bra	u127
  1395   000E88                     u125:
  1396   000E88  968A               	bcf	138,3,c	;volatile
  1397   000E8A                     u127:
  1398   000E8A                     
  1399                           ;../../Libraries/LCD_library.c: 84:     LATBbits.LATB4 = LCD_data.bit6;
  1400   000E8A  AC34               	btfss	_LCD_data^0,6,c
  1401   000E8C  D002               	bra	u135
  1402   000E8E  888A               	bsf	138,4,c	;volatile
  1403   000E90  D001               	bra	u137
  1404   000E92                     u135:
  1405   000E92  988A               	bcf	138,4,c	;volatile
  1406   000E94                     u137:
  1407   000E94                     
  1408                           ;../../Libraries/LCD_library.c: 85:     LATBbits.LATB5 = LCD_data.bit7;
  1409   000E94  AE34               	btfss	_LCD_data^0,7,c
  1410   000E96  D002               	bra	u145
  1411   000E98  8A8A               	bsf	138,5,c	;volatile
  1412   000E9A  D001               	bra	u147
  1413   000E9C                     u145:
  1414   000E9C  9A8A               	bcf	138,5,c	;volatile
  1415   000E9E                     u147:
  1416   000E9E                     
  1417                           ;../../Libraries/LCD_library.c: 87:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*(
      +                          4000000/4000000.0))); LATCbits.LATC1 = 0;
  1418   000E9E  828B               	bsf	139,1,c	;volatile
  1419   000EA0  F000               	nop	
  1420   000EA2  928B               	bcf	139,1,c	;volatile
  1421   000EA4  0012               	return		;funcret
  1422   000EA6                     __end_of_LCD_Write_Nibble:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _LCD_Write *****************
  1426 ;; Defined at:
  1427 ;;		line 91 in file "../../Libraries/LCD_library.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  value           1    wreg     unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  value           1   31[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1441 ;;      Params:         0       0       0       0
  1442 ;;      Locals:         1       0       0       0
  1443 ;;      Temps:          0       0       0       0
  1444 ;;      Totals:         1       0       0       0
  1445 ;;Total ram usage:        1 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 4
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;;		_LCD_Init
  1453 ;;		_LCD_TextOut
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text9
  1458   000B44                     __ptext9:
  1459                           	callstack 0
  1460   000B44                     _LCD_Write:
  1461                           	callstack 24
  1462                           
  1463                           ;incstack = 0
  1464                           ;LCD_Write@value stored from wreg
  1465   000B44  6E20               	movwf	LCD_Write@value^0,c
  1466   000B46                     
  1467                           ;../../Libraries/LCD_library.c: 91: void LCD_Write(unsigned char value);../../Libraries/
      +                          LCD_library.c: 92: {;../../Libraries/LCD_library.c: 93:     LCD_data.all = value;
  1468   000B46  C020  F034         	movff	LCD_Write@value,_LCD_data
  1469   000B4A                     
  1470                           ;../../Libraries/LCD_library.c: 94:     LATCbits.LATC0 = 0;
  1471   000B4A  908B               	bcf	139,0,c	;volatile
  1472   000B4C                     
  1473                           ;../../Libraries/LCD_library.c: 96:     LATBbits.LATB5 = LCD_data.bit7;
  1474   000B4C  AE34               	btfss	_LCD_data^0,7,c
  1475   000B4E  D002               	bra	u35
  1476   000B50  8A8A               	bsf	138,5,c	;volatile
  1477   000B52  D001               	bra	u37
  1478   000B54                     u35:
  1479   000B54  9A8A               	bcf	138,5,c	;volatile
  1480   000B56                     u37:
  1481   000B56                     
  1482                           ;../../Libraries/LCD_library.c: 97:     LATBbits.LATB4 = LCD_data.bit6;
  1483   000B56  AC34               	btfss	_LCD_data^0,6,c
  1484   000B58  D002               	bra	u45
  1485   000B5A  888A               	bsf	138,4,c	;volatile
  1486   000B5C  D001               	bra	u47
  1487   000B5E                     u45:
  1488   000B5E  988A               	bcf	138,4,c	;volatile
  1489   000B60                     u47:
  1490   000B60                     
  1491                           ;../../Libraries/LCD_library.c: 98:     LATBbits.LATB3 = LCD_data.bit5;
  1492   000B60  AA34               	btfss	_LCD_data^0,5,c
  1493   000B62  D002               	bra	u55
  1494   000B64  868A               	bsf	138,3,c	;volatile
  1495   000B66  D001               	bra	u57
  1496   000B68                     u55:
  1497   000B68  968A               	bcf	138,3,c	;volatile
  1498   000B6A                     u57:
  1499   000B6A                     
  1500                           ;../../Libraries/LCD_library.c: 99:     LATBbits.LATB2 = LCD_data.bit4;
  1501   000B6A  A834               	btfss	_LCD_data^0,4,c
  1502   000B6C  D002               	bra	u65
  1503   000B6E  848A               	bsf	138,2,c	;volatile
  1504   000B70  D001               	bra	u67
  1505   000B72                     u65:
  1506   000B72  948A               	bcf	138,2,c	;volatile
  1507   000B74                     u67:
  1508   000B74                     
  1509                           ;../../Libraries/LCD_library.c: 100:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*
      +                          (4000000/4000000.0))); LATCbits.LATC1 = 0;
  1510   000B74  828B               	bsf	139,1,c	;volatile
  1511   000B76  F000               	nop	
  1512   000B78  928B               	bcf	139,1,c	;volatile
  1513   000B7A                     
  1514                           ;../../Libraries/LCD_library.c: 102:     LATBbits.LATB5 = LCD_data.bit3;
  1515   000B7A  A634               	btfss	_LCD_data^0,3,c
  1516   000B7C  D002               	bra	u75
  1517   000B7E  8A8A               	bsf	138,5,c	;volatile
  1518   000B80  D001               	bra	u77
  1519   000B82                     u75:
  1520   000B82  9A8A               	bcf	138,5,c	;volatile
  1521   000B84                     u77:
  1522   000B84                     
  1523                           ;../../Libraries/LCD_library.c: 103:     LATBbits.LATB4 = LCD_data.bit2;
  1524   000B84  A434               	btfss	_LCD_data^0,2,c
  1525   000B86  D002               	bra	u85
  1526   000B88  888A               	bsf	138,4,c	;volatile
  1527   000B8A  D001               	bra	u87
  1528   000B8C                     u85:
  1529   000B8C  988A               	bcf	138,4,c	;volatile
  1530   000B8E                     u87:
  1531   000B8E                     
  1532                           ;../../Libraries/LCD_library.c: 104:     LATBbits.LATB3 = LCD_data.bit1;
  1533   000B8E  A234               	btfss	_LCD_data^0,1,c
  1534   000B90  D002               	bra	u95
  1535   000B92  868A               	bsf	138,3,c	;volatile
  1536   000B94  D001               	bra	u97
  1537   000B96                     u95:
  1538   000B96  968A               	bcf	138,3,c	;volatile
  1539   000B98                     u97:
  1540   000B98                     
  1541                           ;../../Libraries/LCD_library.c: 105:     LATBbits.LATB2 = LCD_data.bit0;
  1542   000B98  A034               	btfss	_LCD_data^0,0,c
  1543   000B9A  D002               	bra	u105
  1544   000B9C  848A               	bsf	138,2,c	;volatile
  1545   000B9E  D001               	bra	u107
  1546   000BA0                     u105:
  1547   000BA0  948A               	bcf	138,2,c	;volatile
  1548   000BA2                     u107:
  1549   000BA2                     
  1550                           ;../../Libraries/LCD_library.c: 106:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*
      +                          (4000000/4000000.0))); LATCbits.LATC1 = 0;
  1551   000BA2  828B               	bsf	139,1,c	;volatile
  1552   000BA4  F000               	nop	
  1553   000BA6  928B               	bcf	139,1,c	;volatile
  1554   000BA8  0012               	return		;funcret
  1555   000BAA                     __end_of_LCD_Write:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function _LCD_Busy *****************
  1559 ;; Defined at:
  1560 ;;		line 184 in file "../../Libraries/LCD_library.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;		None
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      unsigned char 
  1567 ;; Registers used:
  1568 ;;		wreg
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1574 ;;      Params:         0       0       0       0
  1575 ;;      Locals:         0       0       0       0
  1576 ;;      Temps:          0       0       0       0
  1577 ;;      Totals:         0       0       0       0
  1578 ;;Total ram usage:        0 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 4
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;;		_LCD_Init
  1586 ;;		_LCD_TextOut
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text10
  1591   000DB6                     __ptext10:
  1592                           	callstack 0
  1593   000DB6                     _LCD_Busy:
  1594                           	callstack 24
  1595   000DB6                     
  1596                           ;../../Libraries/LCD_library.c: 187:     LATCbits.LATC0 = 1;
  1597   000DB6  808B               	bsf	139,0,c	;volatile
  1598                           
  1599                           ;../../Libraries/LCD_library.c: 188:     LATAbits.LATA5 = 0;
  1600   000DB8  9A89               	bcf	137,5,c	;volatile
  1601                           
  1602                           ;../../Libraries/LCD_library.c: 189:     TRISBbits.TRISB2 = 1; TRISBbits.TRISB3 = 1; TRI
      +                          SBbits.TRISB4 = 1; TRISBbits.TRISB5 = 1;
  1603   000DBA  8493               	bsf	147,2,c	;volatile
  1604   000DBC  8693               	bsf	147,3,c	;volatile
  1605   000DBE  8893               	bsf	147,4,c	;volatile
  1606   000DC0  8A93               	bsf	147,5,c	;volatile
  1607                           
  1608                           ;../../Libraries/LCD_library.c: 191:     LATCbits.LATC1 = 1;; _delay((unsigned long)((1)
      +                          *(4000000/4000000.0)));
  1609   000DC2  828B               	bsf	139,1,c	;volatile
  1610   000DC4  F000               	nop	
  1611                           
  1612                           ;../../Libraries/LCD_library.c: 192:     LCD_data.bit7 = PORTBbits.RB5;
  1613   000DC6  AA81               	btfss	129,5,c	;volatile
  1614   000DC8  D002               	bra	u15
  1615   000DCA  8E34               	bsf	_LCD_data^0,7,c
  1616   000DCC  D001               	bra	u17
  1617   000DCE                     u15:
  1618   000DCE  9E34               	bcf	_LCD_data^0,7,c
  1619   000DD0                     u17:
  1620                           
  1621                           ;../../Libraries/LCD_library.c: 193:     LATCbits.LATC1 = 0;;
  1622   000DD0  928B               	bcf	139,1,c	;volatile
  1623                           
  1624                           ;../../Libraries/LCD_library.c: 195:     TRISBbits.TRISB2 = 0; TRISBbits.TRISB3 = 0; TRI
      +                          SBbits.TRISB4 = 0; TRISBbits.TRISB5 = 0;
  1625   000DD2  9493               	bcf	147,2,c	;volatile
  1626   000DD4  9693               	bcf	147,3,c	;volatile
  1627   000DD6  9893               	bcf	147,4,c	;volatile
  1628   000DD8  9A93               	bcf	147,5,c	;volatile
  1629                           
  1630                           ;../../Libraries/LCD_library.c: 196:     LATCbits.LATC0 = 0;
  1631   000DDA  908B               	bcf	139,0,c	;volatile
  1632                           
  1633                           ;../../Libraries/LCD_library.c: 198:     if (LCD_data.bit7 == 1) {
  1634   000DDC  AE34               	btfss	_LCD_data^0,7,c
  1635   000DDE  EFF3  F006         	goto	u21
  1636   000DE2  EFF5  F006         	goto	u20
  1637   000DE6                     u21:
  1638   000DE6  EFF8  F006         	goto	l1033
  1639   000DEA                     u20:
  1640   000DEA                     
  1641                           ;../../Libraries/LCD_library.c: 199:         return 1;
  1642   000DEA  0E01               	movlw	1
  1643   000DEC  EFF9  F006         	goto	l284
  1644   000DF0                     l1033:
  1645                           
  1646                           ;../../Libraries/LCD_library.c: 201:         return 0;
  1647   000DF0  0E00               	movlw	0
  1648   000DF2                     l284:
  1649   000DF2  0012               	return		;funcret
  1650   000DF4                     __end_of_LCD_Busy:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _high_isr *****************
  1654 ;; Defined at:
  1655 ;;		line 58 in file "L07_main_serialCommunication.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  data            1   30[COMRAM] unsigned char 
  1660 ;;  val             2   28[COMRAM] unsigned int 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1670 ;;      Params:         0       0       0       0
  1671 ;;      Locals:         3       0       0       0
  1672 ;;      Temps:         10       0       0       0
  1673 ;;      Totals:        13       0       0       0
  1674 ;;Total ram usage:       13 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 3
  1677 ;; This function calls:
  1678 ;;		_Read1USART
  1679 ;;		___lwdiv
  1680 ;;		___wmul
  1681 ;;		_adc_to_LCD
  1682 ;;		_append_sign_to_LCD
  1683 ;;		_sendStatus
  1684 ;;		_writeValToUSART
  1685 ;;		i2_LCD_Busy
  1686 ;;		i2_LCD_Write
  1687 ;;		i2_Write1USART
  1688 ;; This function is called by:
  1689 ;;		Interrupt level 2
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	intcode
  1694   000008                     __pintcode:
  1695                           	callstack 0
  1696   000008                     _high_isr:
  1697                           	callstack 24
  1698                           
  1699                           ;incstack = 0
  1700   000008  823E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1701   00000A  CFD9 F015          	movff	fsr2l,??_high_isr+2
  1702   00000E  CFDA F016          	movff	fsr2h,??_high_isr+3
  1703   000012  CFF3 F017          	movff	prodl,??_high_isr+4
  1704   000016  CFF4 F018          	movff	prodh,??_high_isr+5
  1705   00001A  CFF6 F019          	movff	tblptrl,??_high_isr+6
  1706   00001E  CFF7 F01A          	movff	tblptrh,??_high_isr+7
  1707   000022  CFF8 F01B          	movff	tblptru,??_high_isr+8
  1708   000026  CFF5 F01C          	movff	tablat,??_high_isr+9
  1709   00002A                     
  1710                           ;L07_main_serialCommunication.c: 60:     if (INTCON3bits.INT1IE && INTCON3bits.INT1IF){
  1711   00002A  A6F0               	btfss	240,3,c	;volatile
  1712   00002C  EF1A  F000         	goto	i2u187_41
  1713   000030  EF1C  F000         	goto	i2u187_40
  1714   000034                     i2u187_41:
  1715   000034  EF2B  F000         	goto	i2l96
  1716   000038                     i2u187_40:
  1717   000038  A0F0               	btfss	240,0,c	;volatile
  1718   00003A  EF21  F000         	goto	i2u188_41
  1719   00003E  EF23  F000         	goto	i2u188_40
  1720   000042                     i2u188_41:
  1721   000042  EF2B  F000         	goto	i2l96
  1722   000046                     i2u188_40:
  1723   000046                     
  1724                           ;L07_main_serialCommunication.c: 61:         INTCON3bits.INT1IF = 0;
  1725   000046  90F0               	bcf	240,0,c	;volatile
  1726   000048                     
  1727                           ;L07_main_serialCommunication.c: 63:         Write1USART('*');
  1728   000048  0E2A               	movlw	42
  1729   00004A  EC7D  F007         	call	i2_Write1USART
  1730   00004E  EFE8  F000         	goto	i2l97
  1731   000052                     i2l2131:
  1732                           
  1733                           ;L07_main_serialCommunication.c: 64:         return;
  1734   000052  EFE8  F000         	goto	i2l97
  1735   000056                     i2l96:
  1736                           
  1737                           ;L07_main_serialCommunication.c: 68:     if(PIE1bits.ADIE && PIR1bits.ADIF){
  1738   000056  AC9D               	btfss	157,6,c	;volatile
  1739   000058  EF30  F000         	goto	i2u189_41
  1740   00005C  EF32  F000         	goto	i2u189_40
  1741   000060                     i2u189_41:
  1742   000060  EF5F  F000         	goto	i2l98
  1743   000064                     i2u189_40:
  1744   000064  AC9E               	btfss	158,6,c	;volatile
  1745   000066  EF37  F000         	goto	i2u190_41
  1746   00006A  EF39  F000         	goto	i2u190_40
  1747   00006E                     i2u190_41:
  1748   00006E  EF5F  F000         	goto	i2l98
  1749   000072                     i2u190_40:
  1750   000072                     
  1751                           ;L07_main_serialCommunication.c: 69:         PIR1bits.ADIF = 0;
  1752   000072  9C9E               	bcf	158,6,c	;volatile
  1753   000074                     
  1754                           ;L07_main_serialCommunication.c: 71:         unsigned int val = (unsigned int) ((unsigne
      +                          d long)ADRES * 4750) / 1023;
  1755   000074  CFC3 F001          	movff	4035,___wmul@multiplier
  1756   000078  CFC4 F002          	movff	4036,___wmul@multiplier+1
  1757   00007C  0E12               	movlw	18
  1758   00007E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1759   000080  0E8E               	movlw	142
  1760   000082  6E03               	movwf	___wmul@multiplicand^0,c
  1761   000084  ECA5  F007         	call	___wmul	;wreg free
  1762   000088  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1763   00008C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1764   000090  0E03               	movlw	3
  1765   000092  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1766   000094  6809               	setf	___lwdiv@divisor^0,c
  1767   000096  EC8E  F004         	call	___lwdiv	;wreg free
  1768   00009A  C007  F01D         	movff	?___lwdiv,high_isr@val
  1769   00009E  C008  F01E         	movff	?___lwdiv+1,high_isr@val+1
  1770   0000A2                     
  1771                           ;L07_main_serialCommunication.c: 73:         adc_to_LCD(val);
  1772   0000A2  C01D  F010         	movff	high_isr@val,adc_to_LCD@val
  1773   0000A6  C01E  F011         	movff	high_isr@val+1,adc_to_LCD@val+1
  1774   0000AA  EC6B  F006         	call	_adc_to_LCD	;wreg free
  1775   0000AE                     
  1776                           ;L07_main_serialCommunication.c: 75:         writeValToUSART(val);
  1777   0000AE  C01D  F00E         	movff	high_isr@val,writeValToUSART@val
  1778   0000B2  C01E  F00F         	movff	high_isr@val+1,writeValToUSART@val+1
  1779   0000B6  EC54  F004         	call	_writeValToUSART	;wreg free
  1780   0000BA  EFE8  F000         	goto	i2l97
  1781   0000BE                     i2l98:
  1782                           
  1783                           ;L07_main_serialCommunication.c: 80:     if(PIE1bits.RC1IE && PIR1bits.RCIF){
  1784   0000BE  AA9D               	btfss	157,5,c	;volatile
  1785   0000C0  EF64  F000         	goto	i2u191_41
  1786   0000C4  EF66  F000         	goto	i2u191_40
  1787   0000C8                     i2u191_41:
  1788   0000C8  EFE8  F000         	goto	i2l97
  1789   0000CC                     i2u191_40:
  1790   0000CC  AA9E               	btfss	158,5,c	;volatile
  1791   0000CE  EF6B  F000         	goto	i2u192_41
  1792   0000D2  EF6D  F000         	goto	i2u192_40
  1793   0000D6                     i2u192_41:
  1794   0000D6  EFE8  F000         	goto	i2l97
  1795   0000DA                     i2u192_40:
  1796   0000DA                     
  1797                           ;L07_main_serialCommunication.c: 82:         char data = Read1USART();
  1798   0000DA  EC96  F006         	call	_Read1USART	;wreg free
  1799   0000DE  6E1F               	movwf	high_isr@data^0,c
  1800   0000E0                     
  1801                           ;L07_main_serialCommunication.c: 84:         if(!state_text_mode){
  1802   0000E0  5036               	movf	_state_text_mode^0,w,c
  1803   0000E2  A4D8               	btfss	status,2,c
  1804   0000E4  EF76  F000         	goto	i2u193_41
  1805   0000E8  EF78  F000         	goto	i2u193_40
  1806   0000EC                     i2u193_41:
  1807   0000EC  EFC2  F000         	goto	i2l2175
  1808   0000F0                     i2u193_40:
  1809   0000F0  EFA5  F000         	goto	i2l2173
  1810   0000F4                     i2l2153:
  1811                           
  1812                           ;L07_main_serialCommunication.c: 88:                 sendStatus('A');
  1813   0000F4  0E41               	movlw	65
  1814   0000F6  EC53  F007         	call	_sendStatus
  1815   0000FA                     
  1816                           ;L07_main_serialCommunication.c: 90:                 LATBbits.LATB5 = 0;
  1817   0000FA  9A8A               	bcf	138,5,c	;volatile
  1818   0000FC                     
  1819                           ;L07_main_serialCommunication.c: 92:                 state_text_mode = 1;
  1820   0000FC  0E01               	movlw	1
  1821   0000FE  6E36               	movwf	_state_text_mode^0,c
  1822   000100                     
  1823                           ;L07_main_serialCommunication.c: 94:                 text_mode_column = 0;
  1824   000100  0E00               	movlw	0
  1825   000102  6E35               	movwf	_text_mode_column^0,c
  1826   000104                     i2l2161:
  1827   000104  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  1828   000108  0900               	iorlw	0
  1829   00010A  A4D8               	btfss	status,2,c
  1830   00010C  EF8A  F000         	goto	i2u194_41
  1831   000110  EF8C  F000         	goto	i2u194_40
  1832   000114                     i2u194_41:
  1833   000114  EF82  F000         	goto	i2l2161
  1834   000118                     i2u194_40:
  1835   000118  9A89               	bcf	137,5,c	;volatile
  1836   00011A  0E01               	movlw	1
  1837   00011C  ECD5  F005         	call	i2_LCD_Write
  1838   000120  0E07               	movlw	7
  1839   000122  6E13               	movwf	??_high_isr^0,c
  1840   000124  0E7D               	movlw	125
  1841   000126                     i2u206_47:
  1842   000126  2EE8               	decfsz	wreg,f,c
  1843   000128  D7FE               	bra	i2u206_47
  1844   00012A  2E13               	decfsz	??_high_isr^0,f,c
  1845   00012C  D7FC               	bra	i2u206_47
  1846   00012E  F000               	nop	
  1847                           
  1848                           ;L07_main_serialCommunication.c: 96:                 break;
  1849   000130  EFE8  F000         	goto	i2l97
  1850   000134                     i2l2167:
  1851                           
  1852                           ;L07_main_serialCommunication.c: 98:                 sendStatus('A');
  1853   000134  0E41               	movlw	65
  1854   000136  EC53  F007         	call	_sendStatus
  1855   00013A                     
  1856                           ;L07_main_serialCommunication.c: 100:                 ADCON0bits.GO = 1;
  1857   00013A  82C2               	bsf	194,1,c	;volatile
  1858                           
  1859                           ;L07_main_serialCommunication.c: 101:                 break;
  1860   00013C  EFE8  F000         	goto	i2l97
  1861   000140                     i2l2171:
  1862                           
  1863                           ;L07_main_serialCommunication.c: 107:                 sendStatus('X');
  1864   000140  0E58               	movlw	88
  1865   000142  EC53  F007         	call	_sendStatus
  1866                           
  1867                           ;L07_main_serialCommunication.c: 108:             }
  1868   000146  EFE8  F000         	goto	i2l97
  1869   00014A                     i2l2173:
  1870   00014A  501F               	movf	high_isr@data^0,w,c
  1871   00014C  6E13               	movwf	??_high_isr^0,c
  1872   00014E  6A14               	clrf	(??_high_isr+1)^0,c
  1873                           
  1874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1875                           ; Switch size 1, requested type "simple"
  1876                           ; Number of cases is 1, Range of values is 0 to 0
  1877                           ; switch strategies available:
  1878                           ; Name         Instructions Cycles
  1879                           ; simple_byte            4     3 (average)
  1880                           ;	Chosen strategy is simple_byte
  1881   000150  5014               	movf	(??_high_isr+1)^0,w,c
  1882   000152  0A00               	xorlw	0	; case 0
  1883   000154  B4D8               	btfsc	status,2,c
  1884   000156  EFAF  F000         	goto	i2l2213
  1885   00015A  EFA0  F000         	goto	i2l2171
  1886   00015E                     i2l2213:
  1887                           
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 4, Range of values is 10 to 116
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte           13     7 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894   00015E  5013               	movf	??_high_isr^0,w,c
  1895   000160  0A0A               	xorlw	10	; case 10
  1896   000162  B4D8               	btfsc	status,2,c
  1897   000164  EF29  F000         	goto	i2l2131
  1898   000168  0A07               	xorlw	7	; case 13
  1899   00016A  B4D8               	btfsc	status,2,c
  1900   00016C  EFE8  F000         	goto	i2l97
  1901   000170  0A6C               	xorlw	108	; case 97
  1902   000172  B4D8               	btfsc	status,2,c
  1903   000174  EF9A  F000         	goto	i2l2167
  1904   000178  0A15               	xorlw	21	; case 116
  1905   00017A  B4D8               	btfsc	status,2,c
  1906   00017C  EF7A  F000         	goto	i2l2153
  1907   000180  EFA0  F000         	goto	i2l2171
  1908   000184                     i2l2175:
  1909                           
  1910                           ;L07_main_serialCommunication.c: 112:             if(data != 0){
  1911   000184  501F               	movf	high_isr@data^0,w,c
  1912   000186  B4D8               	btfsc	status,2,c
  1913   000188  EFC8  F000         	goto	i2u195_41
  1914   00018C  EFCA  F000         	goto	i2u195_40
  1915   000190                     i2u195_41:
  1916   000190  EFCF  F000         	goto	i2l2179
  1917   000194                     i2u195_40:
  1918   000194                     
  1919                           ;L07_main_serialCommunication.c: 114:                 append_sign_to_LCD(data);
  1920   000194  501F               	movf	high_isr@data^0,w,c
  1921   000196  EC91  F007         	call	_append_sign_to_LCD
  1922                           
  1923                           ;L07_main_serialCommunication.c: 115:             }
  1924   00019A  EFE8  F000         	goto	i2l97
  1925   00019E                     i2l2179:
  1926                           
  1927                           ;L07_main_serialCommunication.c: 118:                 state_text_mode = 0;
  1928   00019E  0E00               	movlw	0
  1929   0001A0  6E36               	movwf	_state_text_mode^0,c
  1930   0001A2                     i2l2181:
  1931   0001A2  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  1932   0001A6  0900               	iorlw	0
  1933   0001A8  A4D8               	btfss	status,2,c
  1934   0001AA  EFD9  F000         	goto	i2u196_41
  1935   0001AE  EFDB  F000         	goto	i2u196_40
  1936   0001B2                     i2u196_41:
  1937   0001B2  EFD1  F000         	goto	i2l2181
  1938   0001B6                     i2u196_40:
  1939   0001B6  9A89               	bcf	137,5,c	;volatile
  1940   0001B8  0E01               	movlw	1
  1941   0001BA  ECD5  F005         	call	i2_LCD_Write
  1942   0001BE  0E07               	movlw	7
  1943   0001C0  6E13               	movwf	??_high_isr^0,c
  1944   0001C2  0E7D               	movlw	125
  1945   0001C4                     i2u207_47:
  1946   0001C4  2EE8               	decfsz	wreg,f,c
  1947   0001C6  D7FE               	bra	i2u207_47
  1948   0001C8  2E13               	decfsz	??_high_isr^0,f,c
  1949   0001CA  D7FC               	bra	i2u207_47
  1950   0001CC  F000               	nop	
  1951   0001CE                     
  1952                           ;L07_main_serialCommunication.c: 120:                 LATBbits.LATB5 = 1;
  1953   0001CE  8A8A               	bsf	138,5,c	;volatile
  1954   0001D0                     i2l97:
  1955   0001D0  C01C  FFF5         	movff	??_high_isr+9,tablat
  1956   0001D4  C01B  FFF8         	movff	??_high_isr+8,tblptru
  1957   0001D8  C01A  FFF7         	movff	??_high_isr+7,tblptrh
  1958   0001DC  C019  FFF6         	movff	??_high_isr+6,tblptrl
  1959   0001E0  C018  FFF4         	movff	??_high_isr+5,prodh
  1960   0001E4  C017  FFF3         	movff	??_high_isr+4,prodl
  1961   0001E8  C016  FFDA         	movff	??_high_isr+3,fsr2h
  1962   0001EC  C015  FFD9         	movff	??_high_isr+2,fsr2l
  1963   0001F0  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1964   0001F2  0011               	retfie		f
  1965   0001F4                     __end_of_high_isr:
  1966                           	callstack 0
  1967                           
  1968 ;; *************** function _writeValToUSART *****************
  1969 ;; Defined at:
  1970 ;;		line 170 in file "L07_main_serialCommunication.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  val             2   13[COMRAM] unsigned int 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  c               1   15[COMRAM] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1984 ;;      Params:         2       0       0       0
  1985 ;;      Locals:         1       0       0       0
  1986 ;;      Temps:          0       0       0       0
  1987 ;;      Totals:         3       0       0       0
  1988 ;;Total ram usage:        3 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 1
  1991 ;; This function calls:
  1992 ;;		___lwdiv
  1993 ;;		___lwmod
  1994 ;;		i2_Write1USART
  1995 ;; This function is called by:
  1996 ;;		_high_isr
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text12
  2001   0008A8                     __ptext12:
  2002                           	callstack 0
  2003   0008A8                     _writeValToUSART:
  2004                           	callstack 25
  2005   0008A8                     i2l2081:
  2006                           
  2007                           ;L07_main_serialCommunication.c: 173:         c = val % 10;
  2008   0008A8  C00E  F001         	movff	writeValToUSART@val,___lwmod@dividend
  2009   0008AC  C00F  F002         	movff	writeValToUSART@val+1,___lwmod@dividend+1
  2010   0008B0  0E00               	movlw	0
  2011   0008B2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2012   0008B4  0E0A               	movlw	10
  2013   0008B6  6E03               	movwf	___lwmod@divisor^0,c
  2014   0008B8  EC08  F006         	call	___lwmod	;wreg free
  2015   0008BC  5001               	movf	?___lwmod^0,w,c
  2016   0008BE  6E10               	movwf	writeValToUSART@c^0,c
  2017   0008C0                     
  2018                           ;L07_main_serialCommunication.c: 174:         val /= 10;
  2019   0008C0  C00E  F007         	movff	writeValToUSART@val,___lwdiv@dividend
  2020   0008C4  C00F  F008         	movff	writeValToUSART@val+1,___lwdiv@dividend+1
  2021   0008C8  0E00               	movlw	0
  2022   0008CA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2023   0008CC  0E0A               	movlw	10
  2024   0008CE  6E09               	movwf	___lwdiv@divisor^0,c
  2025   0008D0  EC8E  F004         	call	___lwdiv	;wreg free
  2026   0008D4  C007  F00E         	movff	?___lwdiv,writeValToUSART@val
  2027   0008D8  C008  F00F         	movff	?___lwdiv+1,writeValToUSART@val+1
  2028   0008DC                     
  2029                           ;L07_main_serialCommunication.c: 175:         c += '0';
  2030   0008DC  0E30               	movlw	48
  2031   0008DE  2610               	addwf	writeValToUSART@c^0,f,c
  2032   0008E0                     i2l143:
  2033   0008E0  A2AC               	btfss	172,1,c	;volatile
  2034   0008E2  EF75  F004         	goto	i2u180_41
  2035   0008E6  EF77  F004         	goto	i2u180_40
  2036   0008EA                     i2u180_41:
  2037   0008EA  EF70  F004         	goto	i2l143
  2038   0008EE                     i2u180_40:
  2039   0008EE                     
  2040                           ;L07_main_serialCommunication.c: 177:         Write1USART(c);
  2041   0008EE  5010               	movf	writeValToUSART@c^0,w,c
  2042   0008F0  EC7D  F007         	call	i2_Write1USART
  2043   0008F4                     
  2044                           ;L07_main_serialCommunication.c: 178:     } while (val!=0);
  2045   0008F4  500E               	movf	writeValToUSART@val^0,w,c
  2046   0008F6  100F               	iorwf	(writeValToUSART@val+1)^0,w,c
  2047   0008F8  A4D8               	btfss	status,2,c
  2048   0008FA  EF81  F004         	goto	i2u181_41
  2049   0008FE  EF83  F004         	goto	i2u181_40
  2050   000902                     i2u181_41:
  2051   000902  EF54  F004         	goto	i2l2081
  2052   000906                     i2u181_40:
  2053   000906                     i2l147:
  2054   000906  A2AC               	btfss	172,1,c	;volatile
  2055   000908  EF88  F004         	goto	i2u182_41
  2056   00090C  EF8A  F004         	goto	i2u182_40
  2057   000910                     i2u182_41:
  2058   000910  EF83  F004         	goto	i2l147
  2059   000914                     i2u182_40:
  2060   000914                     
  2061                           ;L07_main_serialCommunication.c: 180:     Write1USART('\r');
  2062   000914  0E0D               	movlw	13
  2063   000916  EC7D  F007         	call	i2_Write1USART
  2064   00091A  0012               	return		;funcret
  2065   00091C                     __end_of_writeValToUSART:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function ___lwmod *****************
  2069 ;; Defined at:
  2070 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  dividend        2    0[COMRAM] unsigned int 
  2073 ;;  divisor         2    2[COMRAM] unsigned int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  counter         1    4[COMRAM] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2    0[COMRAM] unsigned int 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2085 ;;      Params:         4       0       0       0
  2086 ;;      Locals:         1       0       0       0
  2087 ;;      Temps:          0       0       0       0
  2088 ;;      Totals:         5       0       0       0
  2089 ;;Total ram usage:        5 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_writeValToUSART
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text13
  2099   000C10                     __ptext13:
  2100                           	callstack 0
  2101   000C10                     ___lwmod:
  2102                           	callstack 25
  2103   000C10  5003               	movf	___lwmod@divisor^0,w,c
  2104   000C12  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2105   000C14  B4D8               	btfsc	status,2,c
  2106   000C16  EF0F  F006         	goto	i2u169_41
  2107   000C1A  EF11  F006         	goto	i2u169_40
  2108   000C1E                     i2u169_41:
  2109   000C1E  EF35  F006         	goto	i2l853
  2110   000C22                     i2u169_40:
  2111   000C22  0E01               	movlw	1
  2112   000C24  6E05               	movwf	___lwmod@counter^0,c
  2113   000C26  EF19  F006         	goto	i2l1983
  2114   000C2A                     i2l1981:
  2115   000C2A  90D8               	bcf	status,0,c
  2116   000C2C  3603               	rlcf	___lwmod@divisor^0,f,c
  2117   000C2E  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2118   000C30  2A05               	incf	___lwmod@counter^0,f,c
  2119   000C32                     i2l1983:
  2120   000C32  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2121   000C34  EF1E  F006         	goto	i2u170_41
  2122   000C38  EF20  F006         	goto	i2u170_40
  2123   000C3C                     i2u170_41:
  2124   000C3C  EF15  F006         	goto	i2l1981
  2125   000C40                     i2u170_40:
  2126   000C40                     i2l1985:
  2127   000C40  5003               	movf	___lwmod@divisor^0,w,c
  2128   000C42  5C01               	subwf	___lwmod@dividend^0,w,c
  2129   000C44  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2130   000C46  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2131   000C48  A0D8               	btfss	status,0,c
  2132   000C4A  EF29  F006         	goto	i2u171_41
  2133   000C4E  EF2B  F006         	goto	i2u171_40
  2134   000C52                     i2u171_41:
  2135   000C52  EF2F  F006         	goto	i2l1989
  2136   000C56                     i2u171_40:
  2137   000C56  5003               	movf	___lwmod@divisor^0,w,c
  2138   000C58  5E01               	subwf	___lwmod@dividend^0,f,c
  2139   000C5A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2140   000C5C  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2141   000C5E                     i2l1989:
  2142   000C5E  90D8               	bcf	status,0,c
  2143   000C60  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2144   000C62  3203               	rrcf	___lwmod@divisor^0,f,c
  2145   000C64  2E05               	decfsz	___lwmod@counter^0,f,c
  2146   000C66  EF20  F006         	goto	i2l1985
  2147   000C6A                     i2l853:
  2148   000C6A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2149   000C6E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2150   000C72  0012               	return		;funcret
  2151   000C74                     __end_of___lwmod:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function ___lwdiv *****************
  2155 ;; Defined at:
  2156 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  dividend        2    6[COMRAM] unsigned int 
  2159 ;;  divisor         2    8[COMRAM] unsigned int 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  quotient        2   10[COMRAM] unsigned int 
  2162 ;;  counter         1   12[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  2    6[COMRAM] unsigned int 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2172 ;;      Params:         4       0       0       0
  2173 ;;      Locals:         3       0       0       0
  2174 ;;      Temps:          0       0       0       0
  2175 ;;      Totals:         7       0       0       0
  2176 ;;Total ram usage:        7 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_high_isr
  2182 ;;		_writeValToUSART
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text14
  2187   00091C                     __ptext14:
  2188                           	callstack 0
  2189   00091C                     ___lwdiv:
  2190                           	callstack 25
  2191   00091C  0E00               	movlw	0
  2192   00091E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2193   000920  0E00               	movlw	0
  2194   000922  6E0B               	movwf	___lwdiv@quotient^0,c
  2195   000924  5009               	movf	___lwdiv@divisor^0,w,c
  2196   000926  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2197   000928  B4D8               	btfsc	status,2,c
  2198   00092A  EF99  F004         	goto	i2u166_41
  2199   00092E  EF9B  F004         	goto	i2u166_40
  2200   000932                     i2u166_41:
  2201   000932  EFC3  F004         	goto	i2l843
  2202   000936                     i2u166_40:
  2203   000936  0E01               	movlw	1
  2204   000938  6E0D               	movwf	___lwdiv@counter^0,c
  2205   00093A  EFA3  F004         	goto	i2l1963
  2206   00093E                     i2l1961:
  2207   00093E  90D8               	bcf	status,0,c
  2208   000940  3609               	rlcf	___lwdiv@divisor^0,f,c
  2209   000942  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2210   000944  2A0D               	incf	___lwdiv@counter^0,f,c
  2211   000946                     i2l1963:
  2212   000946  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2213   000948  EFA8  F004         	goto	i2u167_41
  2214   00094C  EFAA  F004         	goto	i2u167_40
  2215   000950                     i2u167_41:
  2216   000950  EF9F  F004         	goto	i2l1961
  2217   000954                     i2u167_40:
  2218   000954                     i2l1965:
  2219   000954  90D8               	bcf	status,0,c
  2220   000956  360B               	rlcf	___lwdiv@quotient^0,f,c
  2221   000958  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2222   00095A  5009               	movf	___lwdiv@divisor^0,w,c
  2223   00095C  5C07               	subwf	___lwdiv@dividend^0,w,c
  2224   00095E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2225   000960  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2226   000962  A0D8               	btfss	status,0,c
  2227   000964  EFB6  F004         	goto	i2u168_41
  2228   000968  EFB8  F004         	goto	i2u168_40
  2229   00096C                     i2u168_41:
  2230   00096C  EFBD  F004         	goto	i2l1973
  2231   000970                     i2u168_40:
  2232   000970  5009               	movf	___lwdiv@divisor^0,w,c
  2233   000972  5E07               	subwf	___lwdiv@dividend^0,f,c
  2234   000974  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2235   000976  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2236   000978  800B               	bsf	___lwdiv@quotient^0,0,c
  2237   00097A                     i2l1973:
  2238   00097A  90D8               	bcf	status,0,c
  2239   00097C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2240   00097E  3209               	rrcf	___lwdiv@divisor^0,f,c
  2241   000980  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2242   000982  EFAA  F004         	goto	i2l1965
  2243   000986                     i2l843:
  2244   000986  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2245   00098A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2246   00098E  0012               	return		;funcret
  2247   000990                     __end_of___lwdiv:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function _sendStatus *****************
  2251 ;; Defined at:
  2252 ;;		line 126 in file "L07_main_serialCommunication.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  status          1    wreg     unsigned char 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  status          1    1[COMRAM] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2266 ;;      Params:         0       0       0       0
  2267 ;;      Locals:         1       0       0       0
  2268 ;;      Temps:          0       0       0       0
  2269 ;;      Totals:         1       0       0       0
  2270 ;;Total ram usage:        1 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 1
  2273 ;; This function calls:
  2274 ;;		i2_Write1USART
  2275 ;; This function is called by:
  2276 ;;		_high_isr
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text15
  2281   000EA6                     __ptext15:
  2282                           	callstack 0
  2283   000EA6                     _sendStatus:
  2284                           	callstack 25
  2285                           
  2286                           ;incstack = 0
  2287                           ;sendStatus@status stored from wreg
  2288   000EA6  6E02               	movwf	sendStatus@status^0,c
  2289   000EA8                     i2l119:
  2290   000EA8  A2AC               	btfss	172,1,c	;volatile
  2291   000EAA  EF59  F007         	goto	i2u183_41
  2292   000EAE  EF5B  F007         	goto	i2u183_40
  2293   000EB2                     i2u183_41:
  2294   000EB2  EF54  F007         	goto	i2l119
  2295   000EB6                     i2u183_40:
  2296   000EB6                     
  2297                           ;L07_main_serialCommunication.c: 130:     Write1USART(status);
  2298   000EB6  5002               	movf	sendStatus@status^0,w,c
  2299   000EB8  EC7D  F007         	call	i2_Write1USART
  2300   000EBC                     i2l122:
  2301   000EBC  A2AC               	btfss	172,1,c	;volatile
  2302   000EBE  EF63  F007         	goto	i2u184_41
  2303   000EC2  EF65  F007         	goto	i2u184_40
  2304   000EC6                     i2u184_41:
  2305   000EC6  EF5E  F007         	goto	i2l122
  2306   000ECA                     i2u184_40:
  2307   000ECA                     
  2308                           ;L07_main_serialCommunication.c: 134:     Write1USART('\r');
  2309   000ECA  0E0D               	movlw	13
  2310   000ECC  EC7D  F007         	call	i2_Write1USART
  2311   000ED0  0012               	return		;funcret
  2312   000ED2                     __end_of_sendStatus:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function i2_Write1USART *****************
  2316 ;; Defined at:
  2317 ;;		line 84 in file "../../Libraries/PLIB_USART.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  data            1    wreg     unsigned char 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  data            1    0[COMRAM] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2331 ;;      Params:         0       0       0       0
  2332 ;;      Locals:         1       0       0       0
  2333 ;;      Temps:          0       0       0       0
  2334 ;;      Totals:         1       0       0       0
  2335 ;;Total ram usage:        1 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_high_isr
  2341 ;;		_sendStatus
  2342 ;;		_writeValToUSART
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text16
  2347   000EFA                     __ptext16:
  2348                           	callstack 0
  2349   000EFA                     i2_Write1USART:
  2350                           	callstack 26
  2351                           
  2352                           ;incstack = 0
  2353                           ;i2Write1USART@data stored from wreg
  2354   000EFA  6E01               	movwf	i2Write1USART@data^0,c
  2355   000EFC                     
  2356                           ;../../Libraries/PLIB_USART.c: 85:     if (TXSTA1bits.TX9)
  2357   000EFC  ACAC               	btfss	172,6,c	;volatile
  2358   000EFE  EF83  F007         	goto	i2u175_41
  2359   000F02  EF85  F007         	goto	i2u175_40
  2360   000F06                     i2u175_41:
  2361   000F06  EF8E  F007         	goto	i2l2013
  2362   000F0A                     i2u175_40:
  2363   000F0A                     
  2364                           ;../../Libraries/PLIB_USART.c: 86:     {;../../Libraries/PLIB_USART.c: 87:         TXSTA
      +                          1bits.TX9D = 0;
  2365   000F0A  90AC               	bcf	172,0,c	;volatile
  2366                           
  2367                           ;../../Libraries/PLIB_USART.c: 88:         if (USART1_Status.TX_NINE)
  2368   000F0C  A233               	btfss	_USART1_Status^0,1,c
  2369   000F0E  EF8B  F007         	goto	i2u176_41
  2370   000F12  EF8D  F007         	goto	i2u176_40
  2371   000F16                     i2u176_41:
  2372   000F16  EF8E  F007         	goto	i2l2013
  2373   000F1A                     i2u176_40:
  2374   000F1A                     
  2375                           ;../../Libraries/PLIB_USART.c: 89:             TXSTA1bits.TX9D = 1;
  2376   000F1A  80AC               	bsf	172,0,c	;volatile
  2377   000F1C                     i2l2013:
  2378                           
  2379                           ;../../Libraries/PLIB_USART.c: 92:     TXREG1 = data;
  2380   000F1C  C001  FFAD         	movff	i2Write1USART@data,4013	;volatile
  2381   000F20  0012               	return		;funcret
  2382   000F22                     __end_ofi2_Write1USART:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function _append_sign_to_LCD *****************
  2386 ;; Defined at:
  2387 ;;		line 147 in file "L07_main_serialCommunication.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  data            1    wreg     unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  data            1    5[COMRAM] unsigned char 
  2392 ;;  tempstr         2    6[COMRAM] unsigned char [2]
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2402 ;;      Params:         0       0       0       0
  2403 ;;      Locals:         3       0       0       0
  2404 ;;      Temps:          0       0       0       0
  2405 ;;      Totals:         3       0       0       0
  2406 ;;Total ram usage:        3 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 2
  2409 ;; This function calls:
  2410 ;;		i2_LCD_TextOut
  2411 ;; This function is called by:
  2412 ;;		_high_isr
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text17
  2417   000F22                     __ptext17:
  2418                           	callstack 0
  2419   000F22                     _append_sign_to_LCD:
  2420                           	callstack 24
  2421                           
  2422                           ;incstack = 0
  2423                           ;append_sign_to_LCD@data stored from wreg
  2424   000F22  6E06               	movwf	append_sign_to_LCD@data^0,c
  2425   000F24                     
  2426                           ;L07_main_serialCommunication.c: 149:         char tempstr[] = {data,'\0'};
  2427   000F24  C031  F007         	movff	append_sign_to_LCD@F5825,append_sign_to_LCD@tempstr
  2428   000F28  C032  F008         	movff	append_sign_to_LCD@F5825+1,append_sign_to_LCD@tempstr+1
  2429   000F2C  C006  F007         	movff	append_sign_to_LCD@data,append_sign_to_LCD@tempstr
  2430   000F30  0E00               	movlw	0
  2431   000F32  6E08               	movwf	(append_sign_to_LCD@tempstr+1)^0,c
  2432   000F34                     
  2433                           ;L07_main_serialCommunication.c: 150:         LCD_TextOut(1,text_mode_column,tempstr);
  2434   000F34  C035  F002         	movff	_text_mode_column,i2LCD_TextOut@col
  2435   000F38  0E07               	movlw	low append_sign_to_LCD@tempstr
  2436   000F3A  6E03               	movwf	i2LCD_TextOut@text^0,c
  2437   000F3C  0E00               	movlw	high append_sign_to_LCD@tempstr
  2438   000F3E  6E04               	movwf	(i2LCD_TextOut@text+1)^0,c
  2439   000F40  0E01               	movlw	1
  2440   000F42  EC37  F005         	call	i2_LCD_TextOut
  2441   000F46                     
  2442                           ;L07_main_serialCommunication.c: 151:         text_mode_column++;
  2443   000F46  2A35               	incf	_text_mode_column^0,f,c
  2444   000F48  0012               	return		;funcret
  2445   000F4A                     __end_of_append_sign_to_LCD:
  2446                           	callstack 0
  2447                           
  2448 ;; *************** function i2_LCD_TextOut *****************
  2449 ;; Defined at:
  2450 ;;		line 174 in file "../../Libraries/LCD_library.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  row             1    wreg     unsigned char 
  2453 ;;  col             1    1[COMRAM] unsigned char 
  2454 ;;  text            2    2[COMRAM] PTR unsigned char 
  2455 ;;		 -> append_sign_to_LCD@tempstr(2), main@text(7), 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  row             1    4[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2467 ;;      Params:         3       0       0       0
  2468 ;;      Locals:         1       0       0       0
  2469 ;;      Temps:          0       0       0       0
  2470 ;;      Totals:         4       0       0       0
  2471 ;;Total ram usage:        4 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 1
  2474 ;; This function calls:
  2475 ;;		i2_LCD_Busy
  2476 ;;		i2_LCD_Write
  2477 ;; This function is called by:
  2478 ;;		_append_sign_to_LCD
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text18
  2483   000A6E                     __ptext18:
  2484                           	callstack 0
  2485   000A6E                     i2_LCD_TextOut:
  2486                           	callstack 24
  2487                           
  2488                           ;incstack = 0
  2489                           ;i2LCD_TextOut@row stored from wreg
  2490   000A6E  6E05               	movwf	i2LCD_TextOut@row^0,c
  2491   000A70                     i2l1995:
  2492   000A70  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2493   000A74  0900               	iorlw	0
  2494   000A76  A4D8               	btfss	status,2,c
  2495   000A78  EF40  F005         	goto	i2u172_41
  2496   000A7C  EF42  F005         	goto	i2u172_40
  2497   000A80                     i2u172_41:
  2498   000A80  EF38  F005         	goto	i2l1995
  2499   000A84                     i2u172_40:
  2500   000A84  9A89               	bcf	137,5,c	;volatile
  2501   000A86  5005               	movf	i2LCD_TextOut@row^0,w,c
  2502   000A88  0D40               	mullw	64
  2503   000A8A  50F3               	movf	243,w,c
  2504   000A8C  2402               	addwf	i2LCD_TextOut@col^0,w,c
  2505   000A8E  0F80               	addlw	128
  2506   000A90  ECD5  F005         	call	i2_LCD_Write
  2507                           
  2508                           ;../../Libraries/LCD_library.c: 177:     while (*text) {
  2509   000A94  EF60  F005         	goto	i2l2005
  2510   000A98                     i2l1999:
  2511   000A98  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2512   000A9C  0900               	iorlw	0
  2513   000A9E  A4D8               	btfss	status,2,c
  2514   000AA0  EF54  F005         	goto	i2u173_41
  2515   000AA4  EF56  F005         	goto	i2u173_40
  2516   000AA8                     i2u173_41:
  2517   000AA8  EF4C  F005         	goto	i2l1999
  2518   000AAC                     i2u173_40:
  2519   000AAC  8A89               	bsf	137,5,c	;volatile
  2520   000AAE  C003  FFD9         	movff	i2LCD_TextOut@text,fsr2l
  2521   000AB2  C004  FFDA         	movff	i2LCD_TextOut@text+1,fsr2h
  2522   000AB6  50DF               	movf	indf2,w,c
  2523   000AB8  ECD5  F005         	call	i2_LCD_Write
  2524   000ABC                     
  2525                           ;../../Libraries/LCD_library.c: 179:         text++;
  2526   000ABC  4A03               	infsnz	i2LCD_TextOut@text^0,f,c
  2527   000ABE  2A04               	incf	(i2LCD_TextOut@text+1)^0,f,c
  2528   000AC0                     i2l2005:
  2529                           
  2530                           ;../../Libraries/LCD_library.c: 177:     while (*text) {
  2531   000AC0  C003  FFD9         	movff	i2LCD_TextOut@text,fsr2l
  2532   000AC4  C004  FFDA         	movff	i2LCD_TextOut@text+1,fsr2h
  2533   000AC8  50DF               	movf	indf2,w,c
  2534   000ACA  A4D8               	btfss	status,2,c
  2535   000ACC  EF6A  F005         	goto	i2u174_41
  2536   000AD0  EF6C  F005         	goto	i2u174_40
  2537   000AD4                     i2u174_41:
  2538   000AD4  EF4C  F005         	goto	i2l1999
  2539   000AD8                     i2u174_40:
  2540   000AD8  0012               	return		;funcret
  2541   000ADA                     __end_ofi2_LCD_TextOut:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _adc_to_LCD *****************
  2545 ;; Defined at:
  2546 ;;		line 158 in file "L07_main_serialCommunication.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  val             2   15[COMRAM] unsigned int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2560 ;;      Params:         2       0       0       0
  2561 ;;      Locals:         0       0       0       0
  2562 ;;      Temps:          1       0       0       0
  2563 ;;      Totals:         3       0       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 2
  2567 ;; This function calls:
  2568 ;;		_LCD_ConstTextOut
  2569 ;;		_LCD_ValueOut_00
  2570 ;;		i2_LCD_Busy
  2571 ;;		i2_LCD_Write
  2572 ;; This function is called by:
  2573 ;;		_high_isr
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text19
  2578   000CD6                     __ptext19:
  2579                           	callstack 0
  2580   000CD6                     _adc_to_LCD:
  2581                           	callstack 24
  2582   000CD6                     i2l2069:
  2583   000CD6  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2584   000CDA  0900               	iorlw	0
  2585   000CDC  A4D8               	btfss	status,2,c
  2586   000CDE  EF73  F006         	goto	i2u179_41
  2587   000CE2  EF75  F006         	goto	i2u179_40
  2588   000CE6                     i2u179_41:
  2589   000CE6  EF6B  F006         	goto	i2l2069
  2590   000CEA                     i2u179_40:
  2591   000CEA  9A89               	bcf	137,5,c	;volatile
  2592   000CEC  0E01               	movlw	1
  2593   000CEE  ECD5  F005         	call	i2_LCD_Write
  2594   000CF2  0E07               	movlw	7
  2595   000CF4  6E12               	movwf	??_adc_to_LCD^0,c
  2596   000CF6  0E7D               	movlw	125
  2597   000CF8                     i2u208_47:
  2598   000CF8  2EE8               	decfsz	wreg,f,c
  2599   000CFA  D7FE               	bra	i2u208_47
  2600   000CFC  2E12               	decfsz	??_adc_to_LCD^0,f,c
  2601   000CFE  D7FC               	bra	i2u208_47
  2602   000D00  F000               	nop	
  2603   000D02                     
  2604                           ;L07_main_serialCommunication.c: 161:         LCD_ValueOut_00(0, 0, val, 4);
  2605   000D02  0E00               	movlw	0
  2606   000D04  6E09               	movwf	LCD_ValueOut_00@col^0,c
  2607   000D06  C010  F00A         	movff	adc_to_LCD@val,LCD_ValueOut_00@value
  2608   000D0A  C011  F00B         	movff	adc_to_LCD@val+1,LCD_ValueOut_00@value+1
  2609   000D0E  0E04               	movlw	4
  2610   000D10  6E0C               	movwf	LCD_ValueOut_00@min_dig^0,c
  2611   000D12  0E00               	movlw	0
  2612   000D14  EC83  F001         	call	_LCD_ValueOut_00
  2613   000D18                     
  2614                           ;L07_main_serialCommunication.c: 162:         LCD_ConstTextOut(0, 4, " mV");
  2615   000D18  0E04               	movlw	4
  2616   000D1A  6E02               	movwf	LCD_ConstTextOut@col^0,c
  2617   000D1C  0E01               	movlw	low STR_1
  2618   000D1E  6E03               	movwf	LCD_ConstTextOut@text^0,c
  2619   000D20  0E03               	movlw	high STR_1
  2620   000D22  6E04               	movwf	(LCD_ConstTextOut@text+1)^0,c
  2621   000D24  0E00               	movlw	0
  2622   000D26  ECC8  F004         	call	_LCD_ConstTextOut
  2623   000D2A  0012               	return		;funcret
  2624   000D2C                     __end_of_adc_to_LCD:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _LCD_ValueOut_00 *****************
  2628 ;; Defined at:
  2629 ;;		line 110 in file "../../Libraries/LCD_library.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  row             1    wreg     unsigned char 
  2632 ;;  col             1    8[COMRAM] unsigned char 
  2633 ;;  value           2    9[COMRAM] short 
  2634 ;;  min_dig         1   11[COMRAM] unsigned char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  row             1   12[COMRAM] unsigned char 
  2637 ;;  chBuffer        1   14[COMRAM] unsigned char 
  2638 ;;  leading_0       1   13[COMRAM] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2648 ;;      Params:         4       0       0       0
  2649 ;;      Locals:         3       0       0       0
  2650 ;;      Temps:          0       0       0       0
  2651 ;;      Totals:         7       0       0       0
  2652 ;;Total ram usage:        7 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 1
  2655 ;; This function calls:
  2656 ;;		___awdiv
  2657 ;;		___wmul
  2658 ;;		i2_LCD_Busy
  2659 ;;		i2_LCD_Write
  2660 ;; This function is called by:
  2661 ;;		_adc_to_LCD
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text20
  2666   000306                     __ptext20:
  2667                           	callstack 0
  2668   000306                     _LCD_ValueOut_00:
  2669                           	callstack 24
  2670                           
  2671                           ;incstack = 0
  2672                           ;LCD_ValueOut_00@row stored from wreg
  2673   000306  6E0D               	movwf	LCD_ValueOut_00@row^0,c
  2674   000308                     i2l1797:
  2675   000308  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2676   00030C  0900               	iorlw	0
  2677   00030E  A4D8               	btfss	status,2,c
  2678   000310  EF8C  F001         	goto	i2u132_41
  2679   000314  EF8E  F001         	goto	i2u132_40
  2680   000318                     i2u132_41:
  2681   000318  EF84  F001         	goto	i2l1797
  2682   00031C                     i2u132_40:
  2683   00031C  9A89               	bcf	137,5,c	;volatile
  2684   00031E  500D               	movf	LCD_ValueOut_00@row^0,w,c
  2685   000320  0D40               	mullw	64
  2686   000322  50F3               	movf	243,w,c
  2687   000324  2409               	addwf	LCD_ValueOut_00@col^0,w,c
  2688   000326  0F80               	addlw	128
  2689   000328  ECD5  F005         	call	i2_LCD_Write
  2690   00032C                     
  2691                           ;../../Libraries/LCD_library.c: 116:     leading_0 = 1;
  2692   00032C  0E01               	movlw	1
  2693   00032E  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2694   000330                     
  2695                           ;../../Libraries/LCD_library.c: 118:     if (value < 0){
  2696   000330  BE0B               	btfsc	(LCD_ValueOut_00@value+1)^0,7,c
  2697   000332  EF9F  F001         	goto	i2u133_40
  2698   000336  EF9D  F001         	goto	i2u133_41
  2699   00033A                     i2u133_41:
  2700   00033A  EFB3  F001         	goto	i2l1813
  2701   00033E                     i2u133_40:
  2702   00033E                     i2l1807:
  2703   00033E  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2704   000342  0900               	iorlw	0
  2705   000344  A4D8               	btfss	status,2,c
  2706   000346  EFA7  F001         	goto	i2u134_41
  2707   00034A  EFA9  F001         	goto	i2u134_40
  2708   00034E                     i2u134_41:
  2709   00034E  EF9F  F001         	goto	i2l1807
  2710   000352                     i2u134_40:
  2711   000352  8A89               	bsf	137,5,c	;volatile
  2712   000354  0E2D               	movlw	45
  2713   000356  ECD5  F005         	call	i2_LCD_Write
  2714   00035A                     
  2715                           ;../../Libraries/LCD_library.c: 121:         value = -value;
  2716   00035A  6C0A               	negf	LCD_ValueOut_00@value^0,c
  2717   00035C  1E0B               	comf	(LCD_ValueOut_00@value+1)^0,f,c
  2718   00035E  B0D8               	btfsc	status,0,c
  2719   000360  2A0B               	incf	(LCD_ValueOut_00@value+1)^0,f,c
  2720                           
  2721                           ;../../Libraries/LCD_library.c: 122:     }
  2722   000362  EFB3  F001         	goto	i2l1823
  2723   000366                     i2l1813:
  2724   000366                     i2l1823:
  2725                           
  2726                           ;../../Libraries/LCD_library.c: 127:     chBuffer = value / 10000;
  2727   000366  C00A  F001         	movff	LCD_ValueOut_00@value,___awdiv@dividend
  2728   00036A  C00B  F002         	movff	LCD_ValueOut_00@value+1,___awdiv@dividend+1
  2729   00036E  0E27               	movlw	39
  2730   000370  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2731   000372  0E10               	movlw	16
  2732   000374  6E03               	movwf	___awdiv@divisor^0,c
  2733   000376  EC9C  F003         	call	___awdiv	;wreg free
  2734   00037A  5001               	movf	?___awdiv^0,w,c
  2735   00037C  6E0F               	movwf	LCD_ValueOut_00@chBuffer^0,c
  2736   00037E                     
  2737                           ;../../Libraries/LCD_library.c: 129:         if((chBuffer != 0)||(min_dig == 5)) leading
      +                          _0 = 0;
  2738   00037E  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2739   000380  A4D8               	btfss	status,2,c
  2740   000382  EFC5  F001         	goto	i2u135_41
  2741   000386  EFC7  F001         	goto	i2u135_40
  2742   00038A                     i2u135_41:
  2743   00038A  EFD0  F001         	goto	i2l1831
  2744   00038E                     i2u135_40:
  2745   00038E  0E05               	movlw	5
  2746   000390  180C               	xorwf	LCD_ValueOut_00@min_dig^0,w,c
  2747   000392  A4D8               	btfss	status,2,c
  2748   000394  EFCE  F001         	goto	i2u136_41
  2749   000398  EFD0  F001         	goto	i2u136_40
  2750   00039C                     i2u136_41:
  2751   00039C  EFD2  F001         	goto	i2l221
  2752   0003A0                     i2u136_40:
  2753   0003A0                     i2l1831:
  2754   0003A0  0E00               	movlw	0
  2755   0003A2  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2756   0003A4                     i2l221:
  2757                           
  2758                           ;../../Libraries/LCD_library.c: 131:     if(!leading_0){
  2759   0003A4  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2760   0003A6  A4D8               	btfss	status,2,c
  2761   0003A8  EFD8  F001         	goto	i2u137_41
  2762   0003AC  EFDA  F001         	goto	i2u137_40
  2763   0003B0                     i2u137_41:
  2764   0003B0  EFE9  F001         	goto	i2l1839
  2765   0003B4                     i2u137_40:
  2766   0003B4                     i2l1835:
  2767   0003B4  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2768   0003B8  0900               	iorlw	0
  2769   0003BA  A4D8               	btfss	status,2,c
  2770   0003BC  EFE2  F001         	goto	i2u138_41
  2771   0003C0  EFE4  F001         	goto	i2u138_40
  2772   0003C4                     i2u138_41:
  2773   0003C4  EFDA  F001         	goto	i2l1835
  2774   0003C8                     i2u138_40:
  2775   0003C8  8A89               	bsf	137,5,c	;volatile
  2776   0003CA  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2777   0003CC  0F30               	addlw	48
  2778   0003CE  ECD5  F005         	call	i2_LCD_Write
  2779   0003D2                     i2l1839:
  2780                           
  2781                           ;../../Libraries/LCD_library.c: 134:     value = value - (10000 * chBuffer);
  2782   0003D2  C00F  F001         	movff	LCD_ValueOut_00@chBuffer,___wmul@multiplier
  2783   0003D6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2784   0003D8  0ED8               	movlw	216
  2785   0003DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2786   0003DC  0EF0               	movlw	240
  2787   0003DE  6E03               	movwf	___wmul@multiplicand^0,c
  2788   0003E0  ECA5  F007         	call	___wmul	;wreg free
  2789   0003E4  500A               	movf	LCD_ValueOut_00@value^0,w,c
  2790   0003E6  2401               	addwf	?___wmul^0,w,c
  2791   0003E8  6E0A               	movwf	LCD_ValueOut_00@value^0,c
  2792   0003EA  500B               	movf	(LCD_ValueOut_00@value+1)^0,w,c
  2793   0003EC  2002               	addwfc	(?___wmul+1)^0,w,c
  2794   0003EE  6E0B               	movwf	(LCD_ValueOut_00@value+1)^0,c
  2795   0003F0                     
  2796                           ;../../Libraries/LCD_library.c: 135:     chBuffer = value / 1000;
  2797   0003F0  C00A  F001         	movff	LCD_ValueOut_00@value,___awdiv@dividend
  2798   0003F4  C00B  F002         	movff	LCD_ValueOut_00@value+1,___awdiv@dividend+1
  2799   0003F8  0E03               	movlw	3
  2800   0003FA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2801   0003FC  0EE8               	movlw	232
  2802   0003FE  6E03               	movwf	___awdiv@divisor^0,c
  2803   000400  EC9C  F003         	call	___awdiv	;wreg free
  2804   000404  5001               	movf	?___awdiv^0,w,c
  2805   000406  6E0F               	movwf	LCD_ValueOut_00@chBuffer^0,c
  2806   000408                     
  2807                           ;../../Libraries/LCD_library.c: 136:     if(leading_0){
  2808   000408  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2809   00040A  B4D8               	btfsc	status,2,c
  2810   00040C  EF0A  F002         	goto	i2u139_41
  2811   000410  EF0C  F002         	goto	i2u139_40
  2812   000414                     i2u139_41:
  2813   000414  EF1F  F002         	goto	i2l229
  2814   000418                     i2u139_40:
  2815   000418                     
  2816                           ;../../Libraries/LCD_library.c: 137:         if((chBuffer != 0)||(min_dig == 4)) leading
      +                          _0 = 0;
  2817   000418  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2818   00041A  A4D8               	btfss	status,2,c
  2819   00041C  EF12  F002         	goto	i2u140_41
  2820   000420  EF14  F002         	goto	i2u140_40
  2821   000424                     i2u140_41:
  2822   000424  EF1D  F002         	goto	i2l1849
  2823   000428                     i2u140_40:
  2824   000428  0E04               	movlw	4
  2825   00042A  180C               	xorwf	LCD_ValueOut_00@min_dig^0,w,c
  2826   00042C  A4D8               	btfss	status,2,c
  2827   00042E  EF1B  F002         	goto	i2u141_41
  2828   000432  EF1D  F002         	goto	i2u141_40
  2829   000436                     i2u141_41:
  2830   000436  EF1F  F002         	goto	i2l229
  2831   00043A                     i2u141_40:
  2832   00043A                     i2l1849:
  2833   00043A  0E00               	movlw	0
  2834   00043C  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2835   00043E                     i2l229:
  2836                           
  2837                           ;../../Libraries/LCD_library.c: 139:     if(!leading_0){
  2838   00043E  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2839   000440  A4D8               	btfss	status,2,c
  2840   000442  EF25  F002         	goto	i2u142_41
  2841   000446  EF27  F002         	goto	i2u142_40
  2842   00044A                     i2u142_41:
  2843   00044A  EF36  F002         	goto	i2l1857
  2844   00044E                     i2u142_40:
  2845   00044E                     i2l1853:
  2846   00044E  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2847   000452  0900               	iorlw	0
  2848   000454  A4D8               	btfss	status,2,c
  2849   000456  EF2F  F002         	goto	i2u143_41
  2850   00045A  EF31  F002         	goto	i2u143_40
  2851   00045E                     i2u143_41:
  2852   00045E  EF27  F002         	goto	i2l1853
  2853   000462                     i2u143_40:
  2854   000462  8A89               	bsf	137,5,c	;volatile
  2855   000464  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2856   000466  0F30               	addlw	48
  2857   000468  ECD5  F005         	call	i2_LCD_Write
  2858   00046C                     i2l1857:
  2859                           
  2860                           ;../../Libraries/LCD_library.c: 142:     value = value - (1000 * chBuffer);
  2861   00046C  C00F  F001         	movff	LCD_ValueOut_00@chBuffer,___wmul@multiplier
  2862   000470  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2863   000472  0EFC               	movlw	252
  2864   000474  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2865   000476  0E18               	movlw	24
  2866   000478  6E03               	movwf	___wmul@multiplicand^0,c
  2867   00047A  ECA5  F007         	call	___wmul	;wreg free
  2868   00047E  500A               	movf	LCD_ValueOut_00@value^0,w,c
  2869   000480  2401               	addwf	?___wmul^0,w,c
  2870   000482  6E0A               	movwf	LCD_ValueOut_00@value^0,c
  2871   000484  500B               	movf	(LCD_ValueOut_00@value+1)^0,w,c
  2872   000486  2002               	addwfc	(?___wmul+1)^0,w,c
  2873   000488  6E0B               	movwf	(LCD_ValueOut_00@value+1)^0,c
  2874   00048A                     
  2875                           ;../../Libraries/LCD_library.c: 143:     chBuffer = value / 100;
  2876   00048A  C00A  F001         	movff	LCD_ValueOut_00@value,___awdiv@dividend
  2877   00048E  C00B  F002         	movff	LCD_ValueOut_00@value+1,___awdiv@dividend+1
  2878   000492  0E00               	movlw	0
  2879   000494  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2880   000496  0E64               	movlw	100
  2881   000498  6E03               	movwf	___awdiv@divisor^0,c
  2882   00049A  EC9C  F003         	call	___awdiv	;wreg free
  2883   00049E  5001               	movf	?___awdiv^0,w,c
  2884   0004A0  6E0F               	movwf	LCD_ValueOut_00@chBuffer^0,c
  2885   0004A2                     
  2886                           ;../../Libraries/LCD_library.c: 144:     if(leading_0){
  2887   0004A2  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2888   0004A4  B4D8               	btfsc	status,2,c
  2889   0004A6  EF57  F002         	goto	i2u144_41
  2890   0004AA  EF59  F002         	goto	i2u144_40
  2891   0004AE                     i2u144_41:
  2892   0004AE  EF6C  F002         	goto	i2l237
  2893   0004B2                     i2u144_40:
  2894   0004B2                     
  2895                           ;../../Libraries/LCD_library.c: 145:         if((chBuffer != 0)||(min_dig == 3)) leading
      +                          _0 = 0;
  2896   0004B2  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2897   0004B4  A4D8               	btfss	status,2,c
  2898   0004B6  EF5F  F002         	goto	i2u145_41
  2899   0004BA  EF61  F002         	goto	i2u145_40
  2900   0004BE                     i2u145_41:
  2901   0004BE  EF6A  F002         	goto	i2l1867
  2902   0004C2                     i2u145_40:
  2903   0004C2  0E03               	movlw	3
  2904   0004C4  180C               	xorwf	LCD_ValueOut_00@min_dig^0,w,c
  2905   0004C6  A4D8               	btfss	status,2,c
  2906   0004C8  EF68  F002         	goto	i2u146_41
  2907   0004CC  EF6A  F002         	goto	i2u146_40
  2908   0004D0                     i2u146_41:
  2909   0004D0  EF6C  F002         	goto	i2l237
  2910   0004D4                     i2u146_40:
  2911   0004D4                     i2l1867:
  2912   0004D4  0E00               	movlw	0
  2913   0004D6  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2914   0004D8                     i2l237:
  2915                           
  2916                           ;../../Libraries/LCD_library.c: 147:     if(!leading_0){
  2917   0004D8  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2918   0004DA  A4D8               	btfss	status,2,c
  2919   0004DC  EF72  F002         	goto	i2u147_41
  2920   0004E0  EF74  F002         	goto	i2u147_40
  2921   0004E4                     i2u147_41:
  2922   0004E4  EF83  F002         	goto	i2l1875
  2923   0004E8                     i2u147_40:
  2924   0004E8                     i2l1871:
  2925   0004E8  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2926   0004EC  0900               	iorlw	0
  2927   0004EE  A4D8               	btfss	status,2,c
  2928   0004F0  EF7C  F002         	goto	i2u148_41
  2929   0004F4  EF7E  F002         	goto	i2u148_40
  2930   0004F8                     i2u148_41:
  2931   0004F8  EF74  F002         	goto	i2l1871
  2932   0004FC                     i2u148_40:
  2933   0004FC  8A89               	bsf	137,5,c	;volatile
  2934   0004FE  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2935   000500  0F30               	addlw	48
  2936   000502  ECD5  F005         	call	i2_LCD_Write
  2937   000506                     i2l1875:
  2938                           
  2939                           ;../../Libraries/LCD_library.c: 150:     value = value - ((short)100 * chBuffer);
  2940   000506  C00F  F001         	movff	LCD_ValueOut_00@chBuffer,___wmul@multiplier
  2941   00050A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2942   00050C  0EFF               	movlw	255
  2943   00050E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2944   000510  0E9C               	movlw	156
  2945   000512  6E03               	movwf	___wmul@multiplicand^0,c
  2946   000514  ECA5  F007         	call	___wmul	;wreg free
  2947   000518  500A               	movf	LCD_ValueOut_00@value^0,w,c
  2948   00051A  2401               	addwf	?___wmul^0,w,c
  2949   00051C  6E0A               	movwf	LCD_ValueOut_00@value^0,c
  2950   00051E  500B               	movf	(LCD_ValueOut_00@value+1)^0,w,c
  2951   000520  2002               	addwfc	(?___wmul+1)^0,w,c
  2952   000522  6E0B               	movwf	(LCD_ValueOut_00@value+1)^0,c
  2953   000524                     
  2954                           ;../../Libraries/LCD_library.c: 151:     chBuffer = value / 10;
  2955   000524  C00A  F001         	movff	LCD_ValueOut_00@value,___awdiv@dividend
  2956   000528  C00B  F002         	movff	LCD_ValueOut_00@value+1,___awdiv@dividend+1
  2957   00052C  0E00               	movlw	0
  2958   00052E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2959   000530  0E0A               	movlw	10
  2960   000532  6E03               	movwf	___awdiv@divisor^0,c
  2961   000534  EC9C  F003         	call	___awdiv	;wreg free
  2962   000538  5001               	movf	?___awdiv^0,w,c
  2963   00053A  6E0F               	movwf	LCD_ValueOut_00@chBuffer^0,c
  2964   00053C                     
  2965                           ;../../Libraries/LCD_library.c: 152:     if(leading_0){
  2966   00053C  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2967   00053E  B4D8               	btfsc	status,2,c
  2968   000540  EFA4  F002         	goto	i2u149_41
  2969   000544  EFA6  F002         	goto	i2u149_40
  2970   000548                     i2u149_41:
  2971   000548  EFB9  F002         	goto	i2l245
  2972   00054C                     i2u149_40:
  2973   00054C                     
  2974                           ;../../Libraries/LCD_library.c: 153:         if((chBuffer != 0)||(min_dig == 2)) leading
      +                          _0 = 0;
  2975   00054C  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2976   00054E  A4D8               	btfss	status,2,c
  2977   000550  EFAC  F002         	goto	i2u150_41
  2978   000554  EFAE  F002         	goto	i2u150_40
  2979   000558                     i2u150_41:
  2980   000558  EFB7  F002         	goto	i2l1885
  2981   00055C                     i2u150_40:
  2982   00055C  0E02               	movlw	2
  2983   00055E  180C               	xorwf	LCD_ValueOut_00@min_dig^0,w,c
  2984   000560  A4D8               	btfss	status,2,c
  2985   000562  EFB5  F002         	goto	i2u151_41
  2986   000566  EFB7  F002         	goto	i2u151_40
  2987   00056A                     i2u151_41:
  2988   00056A  EFB9  F002         	goto	i2l245
  2989   00056E                     i2u151_40:
  2990   00056E                     i2l1885:
  2991   00056E  0E00               	movlw	0
  2992   000570  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2993   000572                     i2l245:
  2994                           
  2995                           ;../../Libraries/LCD_library.c: 155:     if(!leading_0){
  2996   000572  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2997   000574  A4D8               	btfss	status,2,c
  2998   000576  EFBF  F002         	goto	i2u152_41
  2999   00057A  EFC1  F002         	goto	i2u152_40
  3000   00057E                     i2u152_41:
  3001   00057E  EFD0  F002         	goto	i2l1893
  3002   000582                     i2u152_40:
  3003   000582                     i2l1889:
  3004   000582  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  3005   000586  0900               	iorlw	0
  3006   000588  A4D8               	btfss	status,2,c
  3007   00058A  EFC9  F002         	goto	i2u153_41
  3008   00058E  EFCB  F002         	goto	i2u153_40
  3009   000592                     i2u153_41:
  3010   000592  EFC1  F002         	goto	i2l1889
  3011   000596                     i2u153_40:
  3012   000596  8A89               	bsf	137,5,c	;volatile
  3013   000598  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  3014   00059A  0F30               	addlw	48
  3015   00059C  ECD5  F005         	call	i2_LCD_Write
  3016   0005A0                     i2l1893:
  3017                           
  3018                           ;../../Libraries/LCD_library.c: 158:     value = value - ((short)10 * chBuffer);
  3019   0005A0  C00F  F001         	movff	LCD_ValueOut_00@chBuffer,___wmul@multiplier
  3020   0005A4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3021   0005A6  0EFF               	movlw	255
  3022   0005A8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3023   0005AA  0EF6               	movlw	246
  3024   0005AC  6E03               	movwf	___wmul@multiplicand^0,c
  3025   0005AE  ECA5  F007         	call	___wmul	;wreg free
  3026   0005B2  500A               	movf	LCD_ValueOut_00@value^0,w,c
  3027   0005B4  2401               	addwf	?___wmul^0,w,c
  3028   0005B6  6E0A               	movwf	LCD_ValueOut_00@value^0,c
  3029   0005B8  500B               	movf	(LCD_ValueOut_00@value+1)^0,w,c
  3030   0005BA  2002               	addwfc	(?___wmul+1)^0,w,c
  3031   0005BC  6E0B               	movwf	(LCD_ValueOut_00@value+1)^0,c
  3032   0005BE                     
  3033                           ;../../Libraries/LCD_library.c: 159:     chBuffer = value;
  3034   0005BE  C00A  F00F         	movff	LCD_ValueOut_00@value,LCD_ValueOut_00@chBuffer
  3035   0005C2                     i2l1897:
  3036   0005C2  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  3037   0005C6  0900               	iorlw	0
  3038   0005C8  A4D8               	btfss	status,2,c
  3039   0005CA  EFE9  F002         	goto	i2u154_41
  3040   0005CE  EFEB  F002         	goto	i2u154_40
  3041   0005D2                     i2u154_41:
  3042   0005D2  EFE1  F002         	goto	i2l1897
  3043   0005D6                     i2u154_40:
  3044   0005D6  8A89               	bsf	137,5,c	;volatile
  3045   0005D8  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  3046   0005DA  0F30               	addlw	48
  3047   0005DC  ECD5  F005         	call	i2_LCD_Write
  3048   0005E0  0012               	return		;funcret
  3049   0005E2                     __end_of_LCD_ValueOut_00:
  3050                           	callstack 0
  3051                           
  3052 ;; *************** function ___wmul *****************
  3053 ;; Defined at:
  3054 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  multiplier      2    0[COMRAM] unsigned int 
  3057 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  product         2    4[COMRAM] unsigned int 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  2    0[COMRAM] unsigned int 
  3062 ;; Registers used:
  3063 ;;		wreg, status,2, status,0, prodl, prodh
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3069 ;;      Params:         4       0       0       0
  3070 ;;      Locals:         2       0       0       0
  3071 ;;      Temps:          0       0       0       0
  3072 ;;      Totals:         6       0       0       0
  3073 ;;Total ram usage:        6 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_high_isr
  3079 ;;		_LCD_ValueOut_00
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text21
  3084   000F4A                     __ptext21:
  3085                           	callstack 0
  3086   000F4A                     ___wmul:
  3087                           	callstack 24
  3088   000F4A  5001               	movf	___wmul@multiplier^0,w,c
  3089   000F4C  0203               	mulwf	___wmul@multiplicand^0,c
  3090   000F4E  CFF3 F005          	movff	prodl,___wmul@product
  3091   000F52  CFF4 F006          	movff	prodh,___wmul@product+1
  3092   000F56  5001               	movf	___wmul@multiplier^0,w,c
  3093   000F58  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3094   000F5A  50F3               	movf	243,w,c
  3095   000F5C  2606               	addwf	(___wmul@product+1)^0,f,c
  3096   000F5E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3097   000F60  0203               	mulwf	___wmul@multiplicand^0,c
  3098   000F62  50F3               	movf	243,w,c
  3099   000F64  2606               	addwf	(___wmul@product+1)^0,f,c
  3100   000F66  C005  F001         	movff	___wmul@product,?___wmul
  3101   000F6A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3102   000F6E  0012               	return		;funcret
  3103   000F70                     __end_of___wmul:
  3104                           	callstack 0
  3105                           
  3106 ;; *************** function ___awdiv *****************
  3107 ;; Defined at:
  3108 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  dividend        2    0[COMRAM] int 
  3111 ;;  divisor         2    2[COMRAM] int 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  quotient        2    6[COMRAM] int 
  3114 ;;  sign            1    5[COMRAM] unsigned char 
  3115 ;;  counter         1    4[COMRAM] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  2    0[COMRAM] int 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3125 ;;      Params:         4       0       0       0
  3126 ;;      Locals:         4       0       0       0
  3127 ;;      Temps:          0       0       0       0
  3128 ;;      Totals:         8       0       0       0
  3129 ;;Total ram usage:        8 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_LCD_ValueOut_00
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text22
  3139   000738                     __ptext22:
  3140                           	callstack 0
  3141   000738                     ___awdiv:
  3142                           	callstack 24
  3143   000738  0E00               	movlw	0
  3144   00073A  6E06               	movwf	___awdiv@sign^0,c
  3145   00073C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3146   00073E  EFA5  F003         	goto	i2u113_40
  3147   000742  EFA3  F003         	goto	i2u113_41
  3148   000746                     i2u113_41:
  3149   000746  EFAB  F003         	goto	i2l1701
  3150   00074A                     i2u113_40:
  3151   00074A  6C03               	negf	___awdiv@divisor^0,c
  3152   00074C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3153   00074E  B0D8               	btfsc	status,0,c
  3154   000750  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3155   000752  0E01               	movlw	1
  3156   000754  6E06               	movwf	___awdiv@sign^0,c
  3157   000756                     i2l1701:
  3158   000756  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3159   000758  EFB2  F003         	goto	i2u114_40
  3160   00075C  EFB0  F003         	goto	i2u114_41
  3161   000760                     i2u114_41:
  3162   000760  EFB8  F003         	goto	i2l1707
  3163   000764                     i2u114_40:
  3164   000764  6C01               	negf	___awdiv@dividend^0,c
  3165   000766  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3166   000768  B0D8               	btfsc	status,0,c
  3167   00076A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3168   00076C  0E01               	movlw	1
  3169   00076E  1A06               	xorwf	___awdiv@sign^0,f,c
  3170   000770                     i2l1707:
  3171   000770  0E00               	movlw	0
  3172   000772  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3173   000774  0E00               	movlw	0
  3174   000776  6E07               	movwf	___awdiv@quotient^0,c
  3175   000778  5003               	movf	___awdiv@divisor^0,w,c
  3176   00077A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3177   00077C  B4D8               	btfsc	status,2,c
  3178   00077E  EFC3  F003         	goto	i2u115_41
  3179   000782  EFC5  F003         	goto	i2u115_40
  3180   000786                     i2u115_41:
  3181   000786  EFED  F003         	goto	i2l1729
  3182   00078A                     i2u115_40:
  3183   00078A  0E01               	movlw	1
  3184   00078C  6E05               	movwf	___awdiv@counter^0,c
  3185   00078E  EFCD  F003         	goto	i2l1715
  3186   000792                     i2l1713:
  3187   000792  90D8               	bcf	status,0,c
  3188   000794  3603               	rlcf	___awdiv@divisor^0,f,c
  3189   000796  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3190   000798  2A05               	incf	___awdiv@counter^0,f,c
  3191   00079A                     i2l1715:
  3192   00079A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3193   00079C  EFD2  F003         	goto	i2u116_41
  3194   0007A0  EFD4  F003         	goto	i2u116_40
  3195   0007A4                     i2u116_41:
  3196   0007A4  EFC9  F003         	goto	i2l1713
  3197   0007A8                     i2u116_40:
  3198   0007A8                     i2l1717:
  3199   0007A8  90D8               	bcf	status,0,c
  3200   0007AA  3607               	rlcf	___awdiv@quotient^0,f,c
  3201   0007AC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3202   0007AE  5003               	movf	___awdiv@divisor^0,w,c
  3203   0007B0  5C01               	subwf	___awdiv@dividend^0,w,c
  3204   0007B2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3205   0007B4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3206   0007B6  A0D8               	btfss	status,0,c
  3207   0007B8  EFE0  F003         	goto	i2u117_41
  3208   0007BC  EFE2  F003         	goto	i2u117_40
  3209   0007C0                     i2u117_41:
  3210   0007C0  EFE7  F003         	goto	i2l1725
  3211   0007C4                     i2u117_40:
  3212   0007C4  5003               	movf	___awdiv@divisor^0,w,c
  3213   0007C6  5E01               	subwf	___awdiv@dividend^0,f,c
  3214   0007C8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3215   0007CA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3216   0007CC  8007               	bsf	___awdiv@quotient^0,0,c
  3217   0007CE                     i2l1725:
  3218   0007CE  90D8               	bcf	status,0,c
  3219   0007D0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3220   0007D2  3203               	rrcf	___awdiv@divisor^0,f,c
  3221   0007D4  2E05               	decfsz	___awdiv@counter^0,f,c
  3222   0007D6  EFD4  F003         	goto	i2l1717
  3223   0007DA                     i2l1729:
  3224   0007DA  5006               	movf	___awdiv@sign^0,w,c
  3225   0007DC  B4D8               	btfsc	status,2,c
  3226   0007DE  EFF3  F003         	goto	i2u118_41
  3227   0007E2  EFF5  F003         	goto	i2u118_40
  3228   0007E6                     i2u118_41:
  3229   0007E6  EFF9  F003         	goto	i2l1733
  3230   0007EA                     i2u118_40:
  3231   0007EA  6C07               	negf	___awdiv@quotient^0,c
  3232   0007EC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3233   0007EE  B0D8               	btfsc	status,0,c
  3234   0007F0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3235   0007F2                     i2l1733:
  3236   0007F2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3237   0007F6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3238   0007FA  0012               	return		;funcret
  3239   0007FC                     __end_of___awdiv:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _LCD_ConstTextOut *****************
  3243 ;; Defined at:
  3244 ;;		line 164 in file "../../Libraries/LCD_library.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  row             1    wreg     unsigned char 
  3247 ;;  col             1    1[COMRAM] unsigned char 
  3248 ;;  text            2    2[COMRAM] PTR const unsigned char 
  3249 ;;		 -> STR_1(4), 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  row             1    4[COMRAM] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3261 ;;      Params:         3       0       0       0
  3262 ;;      Locals:         1       0       0       0
  3263 ;;      Temps:          0       0       0       0
  3264 ;;      Totals:         4       0       0       0
  3265 ;;Total ram usage:        4 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 1
  3268 ;; This function calls:
  3269 ;;		i2_LCD_Busy
  3270 ;;		i2_LCD_Write
  3271 ;; This function is called by:
  3272 ;;		_adc_to_LCD
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text23
  3277   000990                     __ptext23:
  3278                           	callstack 0
  3279   000990                     _LCD_ConstTextOut:
  3280                           	callstack 24
  3281                           
  3282                           ;incstack = 0
  3283                           ;LCD_ConstTextOut@row stored from wreg
  3284   000990  6E05               	movwf	LCD_ConstTextOut@row^0,c
  3285   000992                     i2l1903:
  3286   000992  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  3287   000996  0900               	iorlw	0
  3288   000998  A4D8               	btfss	status,2,c
  3289   00099A  EFD1  F004         	goto	i2u155_41
  3290   00099E  EFD3  F004         	goto	i2u155_40
  3291   0009A2                     i2u155_41:
  3292   0009A2  EFC9  F004         	goto	i2l1903
  3293   0009A6                     i2u155_40:
  3294   0009A6  9A89               	bcf	137,5,c	;volatile
  3295   0009A8  5005               	movf	LCD_ConstTextOut@row^0,w,c
  3296   0009AA  0D40               	mullw	64
  3297   0009AC  50F3               	movf	243,w,c
  3298   0009AE  2402               	addwf	LCD_ConstTextOut@col^0,w,c
  3299   0009B0  0F80               	addlw	128
  3300   0009B2  ECD5  F005         	call	i2_LCD_Write
  3301                           
  3302                           ;../../Libraries/LCD_library.c: 167:     while (*text) {
  3303   0009B6  EFF2  F004         	goto	i2l1913
  3304   0009BA                     i2l1907:
  3305   0009BA  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  3306   0009BE  0900               	iorlw	0
  3307   0009C0  A4D8               	btfss	status,2,c
  3308   0009C2  EFE5  F004         	goto	i2u156_41
  3309   0009C6  EFE7  F004         	goto	i2u156_40
  3310   0009CA                     i2u156_41:
  3311   0009CA  EFDD  F004         	goto	i2l1907
  3312   0009CE                     i2u156_40:
  3313   0009CE  8A89               	bsf	137,5,c	;volatile
  3314   0009D0  C003  FFF6         	movff	LCD_ConstTextOut@text,tblptrl
  3315   0009D4  C004  FFF7         	movff	LCD_ConstTextOut@text+1,tblptrh
  3316   0009D8                     	if	0	;tblptru may be non-zero
  3317   0009D8                     	endif
  3318   0009D8                     	if	0	;tblptru may be non-zero
  3319   0009D8                     	endif
  3320   0009D8  0008               	tblrd		*
  3321   0009DA  50F5               	movf	tablat,w,c
  3322   0009DC  ECD5  F005         	call	i2_LCD_Write
  3323   0009E0                     
  3324                           ;../../Libraries/LCD_library.c: 169:         text++;
  3325   0009E0  4A03               	infsnz	LCD_ConstTextOut@text^0,f,c
  3326   0009E2  2A04               	incf	(LCD_ConstTextOut@text+1)^0,f,c
  3327   0009E4                     i2l1913:
  3328                           
  3329                           ;../../Libraries/LCD_library.c: 167:     while (*text) {
  3330   0009E4  C003  FFF6         	movff	LCD_ConstTextOut@text,tblptrl
  3331   0009E8  C004  FFF7         	movff	LCD_ConstTextOut@text+1,tblptrh
  3332   0009EC                     	if	0	;tblptru may be non-zero
  3333   0009EC                     	endif
  3334   0009EC                     	if	0	;tblptru may be non-zero
  3335   0009EC                     	endif
  3336   0009EC  0008               	tblrd		*
  3337   0009EE  50F5               	movf	tablat,w,c
  3338   0009F0  0900               	iorlw	0
  3339   0009F2  A4D8               	btfss	status,2,c
  3340   0009F4  EFFE  F004         	goto	i2u157_41
  3341   0009F8  EF00  F005         	goto	i2u157_40
  3342   0009FC                     i2u157_41:
  3343   0009FC  EFDD  F004         	goto	i2l1907
  3344   000A00                     i2u157_40:
  3345   000A00  0012               	return		;funcret
  3346   000A02                     __end_of_LCD_ConstTextOut:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function i2_LCD_Write *****************
  3350 ;; Defined at:
  3351 ;;		line 91 in file "../../Libraries/LCD_library.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  value           1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  value           1    0[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3365 ;;      Params:         0       0       0       0
  3366 ;;      Locals:         1       0       0       0
  3367 ;;      Temps:          0       0       0       0
  3368 ;;      Totals:         1       0       0       0
  3369 ;;Total ram usage:        1 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_high_isr
  3375 ;;		_adc_to_LCD
  3376 ;;		_LCD_ValueOut_00
  3377 ;;		_LCD_ConstTextOut
  3378 ;;		i2_LCD_TextOut
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text24
  3383   000BAA                     __ptext24:
  3384                           	callstack 0
  3385   000BAA                     i2_LCD_Write:
  3386                           	callstack 26
  3387                           
  3388                           ;incstack = 0
  3389                           ;i2LCD_Write@value stored from wreg
  3390   000BAA  6E01               	movwf	i2LCD_Write@value^0,c
  3391   000BAC                     
  3392                           ;../../Libraries/LCD_library.c: 91: void LCD_Write(unsigned char value);../../Libraries/
      +                          LCD_library.c: 92: {;../../Libraries/LCD_library.c: 93:     LCD_data.all = value;
  3393   000BAC  C001  F034         	movff	i2LCD_Write@value,_LCD_data
  3394   000BB0                     
  3395                           ;../../Libraries/LCD_library.c: 94:     LATCbits.LATC0 = 0;
  3396   000BB0  908B               	bcf	139,0,c	;volatile
  3397   000BB2                     
  3398                           ;../../Libraries/LCD_library.c: 96:     LATBbits.LATB5 = LCD_data.bit7;
  3399   000BB2  AE34               	btfss	_LCD_data^0,7,c
  3400   000BB4  D002               	bra	i2u119_45
  3401   000BB6  8A8A               	bsf	138,5,c	;volatile
  3402   000BB8  D001               	bra	i2u119_47
  3403   000BBA                     i2u119_45:
  3404   000BBA  9A8A               	bcf	138,5,c	;volatile
  3405   000BBC                     i2u119_47:
  3406   000BBC                     
  3407                           ;../../Libraries/LCD_library.c: 97:     LATBbits.LATB4 = LCD_data.bit6;
  3408   000BBC  AC34               	btfss	_LCD_data^0,6,c
  3409   000BBE  D002               	bra	i2u120_45
  3410   000BC0  888A               	bsf	138,4,c	;volatile
  3411   000BC2  D001               	bra	i2u120_47
  3412   000BC4                     i2u120_45:
  3413   000BC4  988A               	bcf	138,4,c	;volatile
  3414   000BC6                     i2u120_47:
  3415   000BC6                     
  3416                           ;../../Libraries/LCD_library.c: 98:     LATBbits.LATB3 = LCD_data.bit5;
  3417   000BC6  AA34               	btfss	_LCD_data^0,5,c
  3418   000BC8  D002               	bra	i2u121_45
  3419   000BCA  868A               	bsf	138,3,c	;volatile
  3420   000BCC  D001               	bra	i2u121_47
  3421   000BCE                     i2u121_45:
  3422   000BCE  968A               	bcf	138,3,c	;volatile
  3423   000BD0                     i2u121_47:
  3424   000BD0                     
  3425                           ;../../Libraries/LCD_library.c: 99:     LATBbits.LATB2 = LCD_data.bit4;
  3426   000BD0  A834               	btfss	_LCD_data^0,4,c
  3427   000BD2  D002               	bra	i2u122_45
  3428   000BD4  848A               	bsf	138,2,c	;volatile
  3429   000BD6  D001               	bra	i2u122_47
  3430   000BD8                     i2u122_45:
  3431   000BD8  948A               	bcf	138,2,c	;volatile
  3432   000BDA                     i2u122_47:
  3433   000BDA                     
  3434                           ;../../Libraries/LCD_library.c: 100:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*
      +                          (4000000/4000000.0))); LATCbits.LATC1 = 0;
  3435   000BDA  828B               	bsf	139,1,c	;volatile
  3436   000BDC  F000               	nop	
  3437   000BDE  928B               	bcf	139,1,c	;volatile
  3438   000BE0                     
  3439                           ;../../Libraries/LCD_library.c: 102:     LATBbits.LATB5 = LCD_data.bit3;
  3440   000BE0  A634               	btfss	_LCD_data^0,3,c
  3441   000BE2  D002               	bra	i2u123_45
  3442   000BE4  8A8A               	bsf	138,5,c	;volatile
  3443   000BE6  D001               	bra	i2u123_47
  3444   000BE8                     i2u123_45:
  3445   000BE8  9A8A               	bcf	138,5,c	;volatile
  3446   000BEA                     i2u123_47:
  3447   000BEA                     
  3448                           ;../../Libraries/LCD_library.c: 103:     LATBbits.LATB4 = LCD_data.bit2;
  3449   000BEA  A434               	btfss	_LCD_data^0,2,c
  3450   000BEC  D002               	bra	i2u124_45
  3451   000BEE  888A               	bsf	138,4,c	;volatile
  3452   000BF0  D001               	bra	i2u124_47
  3453   000BF2                     i2u124_45:
  3454   000BF2  988A               	bcf	138,4,c	;volatile
  3455   000BF4                     i2u124_47:
  3456   000BF4                     
  3457                           ;../../Libraries/LCD_library.c: 104:     LATBbits.LATB3 = LCD_data.bit1;
  3458   000BF4  A234               	btfss	_LCD_data^0,1,c
  3459   000BF6  D002               	bra	i2u125_45
  3460   000BF8  868A               	bsf	138,3,c	;volatile
  3461   000BFA  D001               	bra	i2u125_47
  3462   000BFC                     i2u125_45:
  3463   000BFC  968A               	bcf	138,3,c	;volatile
  3464   000BFE                     i2u125_47:
  3465   000BFE                     
  3466                           ;../../Libraries/LCD_library.c: 105:     LATBbits.LATB2 = LCD_data.bit0;
  3467   000BFE  A034               	btfss	_LCD_data^0,0,c
  3468   000C00  D002               	bra	i2u126_45
  3469   000C02  848A               	bsf	138,2,c	;volatile
  3470   000C04  D001               	bra	i2u126_47
  3471   000C06                     i2u126_45:
  3472   000C06  948A               	bcf	138,2,c	;volatile
  3473   000C08                     i2u126_47:
  3474   000C08                     
  3475                           ;../../Libraries/LCD_library.c: 106:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*
      +                          (4000000/4000000.0))); LATCbits.LATC1 = 0;
  3476   000C08  828B               	bsf	139,1,c	;volatile
  3477   000C0A  F000               	nop	
  3478   000C0C  928B               	bcf	139,1,c	;volatile
  3479   000C0E  0012               	return		;funcret
  3480   000C10                     __end_ofi2_LCD_Write:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function i2_LCD_Busy *****************
  3484 ;; Defined at:
  3485 ;;		line 184 in file "../../Libraries/LCD_library.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      unsigned char 
  3492 ;; Registers used:
  3493 ;;		wreg
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3499 ;;      Params:         0       0       0       0
  3500 ;;      Locals:         0       0       0       0
  3501 ;;      Temps:          0       0       0       0
  3502 ;;      Totals:         0       0       0       0
  3503 ;;Total ram usage:        0 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_high_isr
  3509 ;;		_adc_to_LCD
  3510 ;;		_LCD_ValueOut_00
  3511 ;;		_LCD_ConstTextOut
  3512 ;;		i2_LCD_TextOut
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text25
  3517   000DF4                     __ptext25:
  3518                           	callstack 0
  3519   000DF4                     i2_LCD_Busy:
  3520                           	callstack 26
  3521   000DF4                     
  3522                           ;../../Libraries/LCD_library.c: 187:     LATCbits.LATC0 = 1;
  3523   000DF4  808B               	bsf	139,0,c	;volatile
  3524                           
  3525                           ;../../Libraries/LCD_library.c: 188:     LATAbits.LATA5 = 0;
  3526   000DF6  9A89               	bcf	137,5,c	;volatile
  3527                           
  3528                           ;../../Libraries/LCD_library.c: 189:     TRISBbits.TRISB2 = 1; TRISBbits.TRISB3 = 1; TRI
      +                          SBbits.TRISB4 = 1; TRISBbits.TRISB5 = 1;
  3529   000DF8  8493               	bsf	147,2,c	;volatile
  3530   000DFA  8693               	bsf	147,3,c	;volatile
  3531   000DFC  8893               	bsf	147,4,c	;volatile
  3532   000DFE  8A93               	bsf	147,5,c	;volatile
  3533                           
  3534                           ;../../Libraries/LCD_library.c: 191:     LATCbits.LATC1 = 1;; _delay((unsigned long)((1)
      +                          *(4000000/4000000.0)));
  3535   000E00  828B               	bsf	139,1,c	;volatile
  3536   000E02  F000               	nop	
  3537                           
  3538                           ;../../Libraries/LCD_library.c: 192:     LCD_data.bit7 = PORTBbits.RB5;
  3539   000E04  AA81               	btfss	129,5,c	;volatile
  3540   000E06  D002               	bra	i2u127_45
  3541   000E08  8E34               	bsf	_LCD_data^0,7,c
  3542   000E0A  D001               	bra	i2u127_47
  3543   000E0C                     i2u127_45:
  3544   000E0C  9E34               	bcf	_LCD_data^0,7,c
  3545   000E0E                     i2u127_47:
  3546                           
  3547                           ;../../Libraries/LCD_library.c: 193:     LATCbits.LATC1 = 0;;
  3548   000E0E  928B               	bcf	139,1,c	;volatile
  3549                           
  3550                           ;../../Libraries/LCD_library.c: 195:     TRISBbits.TRISB2 = 0; TRISBbits.TRISB3 = 0; TRI
      +                          SBbits.TRISB4 = 0; TRISBbits.TRISB5 = 0;
  3551   000E10  9493               	bcf	147,2,c	;volatile
  3552   000E12  9693               	bcf	147,3,c	;volatile
  3553   000E14  9893               	bcf	147,4,c	;volatile
  3554   000E16  9A93               	bcf	147,5,c	;volatile
  3555                           
  3556                           ;../../Libraries/LCD_library.c: 196:     LATCbits.LATC0 = 0;
  3557   000E18  908B               	bcf	139,0,c	;volatile
  3558                           
  3559                           ;../../Libraries/LCD_library.c: 198:     if (LCD_data.bit7 == 1) {
  3560   000E1A  AE34               	btfss	_LCD_data^0,7,c
  3561   000E1C  EF12  F007         	goto	i2u128_41
  3562   000E20  EF14  F007         	goto	i2u128_40
  3563   000E24                     i2u128_41:
  3564   000E24  EF17  F007         	goto	i2l1777
  3565   000E28                     i2u128_40:
  3566   000E28                     
  3567                           ;../../Libraries/LCD_library.c: 199:         return 1;
  3568   000E28  0E01               	movlw	1
  3569   000E2A  EF18  F007         	goto	i2l284
  3570   000E2E                     i2l1777:
  3571                           
  3572                           ;../../Libraries/LCD_library.c: 201:         return 0;
  3573   000E2E  0E00               	movlw	0
  3574   000E30                     i2l284:
  3575   000E30  0012               	return		;funcret
  3576   000E32                     __end_ofi2_LCD_Busy:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _Read1USART *****************
  3580 ;; Defined at:
  3581 ;;		line 61 in file "../../Libraries/PLIB_USART.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  data            1    0[COMRAM] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      unsigned char 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3595 ;;      Params:         0       0       0       0
  3596 ;;      Locals:         1       0       0       0
  3597 ;;      Temps:          0       0       0       0
  3598 ;;      Totals:         1       0       0       0
  3599 ;;Total ram usage:        1 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_high_isr
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text26
  3609   000D2C                     __ptext26:
  3610                           	callstack 0
  3611   000D2C                     _Read1USART:
  3612                           	callstack 26
  3613   000D2C                     
  3614                           ;../../Libraries/PLIB_USART.c: 62:     char data;;../../Libraries/PLIB_USART.c: 64:     
      +                          USART1_Status.val &= 0xf2;
  3615   000D2C  0EF2               	movlw	242
  3616   000D2E  1633               	andwf	_USART1_Status^0,f,c
  3617   000D30                     
  3618                           ;../../Libraries/PLIB_USART.c: 66:     if (RCSTA1bits.RX9)
  3619   000D30  ACAB               	btfss	171,6,c	;volatile
  3620   000D32  EF9D  F006         	goto	i2u93_41
  3621   000D36  EF9F  F006         	goto	i2u93_40
  3622   000D3A                     i2u93_41:
  3623   000D3A  EFA8  F006         	goto	i2l322
  3624   000D3E                     i2u93_40:
  3625   000D3E                     
  3626                           ;../../Libraries/PLIB_USART.c: 67:     {;../../Libraries/PLIB_USART.c: 68:         USART
      +                          1_Status.RX_NINE = 0;
  3627   000D3E  9033               	bcf	_USART1_Status^0,0,c
  3628                           
  3629                           ;../../Libraries/PLIB_USART.c: 69:         if (RCSTA1bits.RX9D)
  3630   000D40  A0AB               	btfss	171,0,c	;volatile
  3631   000D42  EFA5  F006         	goto	i2u94_41
  3632   000D46  EFA7  F006         	goto	i2u94_40
  3633   000D4A                     i2u94_41:
  3634   000D4A  EFA8  F006         	goto	i2l322
  3635   000D4E                     i2u94_40:
  3636   000D4E                     
  3637                           ;../../Libraries/PLIB_USART.c: 70:             USART1_Status.RX_NINE = 1;
  3638   000D4E  8033               	bsf	_USART1_Status^0,0,c
  3639   000D50                     i2l322:
  3640                           
  3641                           ;../../Libraries/PLIB_USART.c: 73:     if (RCSTA1bits.FERR)
  3642   000D50  A4AB               	btfss	171,2,c	;volatile
  3643   000D52  EFAD  F006         	goto	i2u95_41
  3644   000D56  EFAF  F006         	goto	i2u95_40
  3645   000D5A                     i2u95_41:
  3646   000D5A  EFB0  F006         	goto	i2l324
  3647   000D5E                     i2u95_40:
  3648   000D5E                     
  3649                           ;../../Libraries/PLIB_USART.c: 74:         USART1_Status.FRAME_ERROR = 1;
  3650   000D5E  8433               	bsf	_USART1_Status^0,2,c
  3651   000D60                     i2l324:
  3652                           
  3653                           ;../../Libraries/PLIB_USART.c: 76:     if (RCSTA1bits.OERR)
  3654   000D60  A2AB               	btfss	171,1,c	;volatile
  3655   000D62  EFB5  F006         	goto	i2u96_41
  3656   000D66  EFB7  F006         	goto	i2u96_40
  3657   000D6A                     i2u96_41:
  3658   000D6A  EFB8  F006         	goto	i2l325
  3659   000D6E                     i2u96_40:
  3660   000D6E                     
  3661                           ;../../Libraries/PLIB_USART.c: 77:         USART1_Status.OVERRUN_ERROR = 1;
  3662   000D6E  8633               	bsf	_USART1_Status^0,3,c
  3663   000D70                     i2l325:
  3664                           
  3665                           ;../../Libraries/PLIB_USART.c: 79:     data = RCREG1;
  3666   000D70  CFAE F001          	movff	4014,Read1USART@data	;volatile
  3667   000D74                     
  3668                           ;../../Libraries/PLIB_USART.c: 81:     return (data);
  3669   000D74  5001               	movf	Read1USART@data^0,w,c
  3670   000D76  0012               	return		;funcret
  3671   000D78                     __end_of_Read1USART:
  3672                           	callstack 0
  3673                           
  3674                           	psect	rparam
  3675   000000                     
  3676                           	psect	temp
  3677   00003E                     btemp:
  3678                           	callstack 0
  3679   00003E                     	ds	1
  3680   000000                     int$flags	set	btemp
  3681   000000                     wtemp8	set	btemp+1
  3682   000000                     ttemp5	set	btemp+1
  3683   000000                     ttemp6	set	btemp+4
  3684   000000                     ttemp7	set	btemp+8
  3685                           
  3686                           	psect	idloc
  3687                           
  3688                           ;Config register IDLOC0 @ 0x200000
  3689                           ;	unspecified, using default values
  3690   200000                     	org	2097152
  3691   200000  FF                 	db	255
  3692                           
  3693                           ;Config register IDLOC1 @ 0x200001
  3694                           ;	unspecified, using default values
  3695   200001                     	org	2097153
  3696   200001  FF                 	db	255
  3697                           
  3698                           ;Config register IDLOC2 @ 0x200002
  3699                           ;	unspecified, using default values
  3700   200002                     	org	2097154
  3701   200002  FF                 	db	255
  3702                           
  3703                           ;Config register IDLOC3 @ 0x200003
  3704                           ;	unspecified, using default values
  3705   200003                     	org	2097155
  3706   200003  FF                 	db	255
  3707                           
  3708                           ;Config register IDLOC4 @ 0x200004
  3709                           ;	unspecified, using default values
  3710   200004                     	org	2097156
  3711   200004  FF                 	db	255
  3712                           
  3713                           ;Config register IDLOC5 @ 0x200005
  3714                           ;	unspecified, using default values
  3715   200005                     	org	2097157
  3716   200005  FF                 	db	255
  3717                           
  3718                           ;Config register IDLOC6 @ 0x200006
  3719                           ;	unspecified, using default values
  3720   200006                     	org	2097158
  3721   200006  FF                 	db	255
  3722                           
  3723                           ;Config register IDLOC7 @ 0x200007
  3724                           ;	unspecified, using default values
  3725   200007                     	org	2097159
  3726   200007  FF                 	db	255
  3727                           
  3728                           	psect	config
  3729                           
  3730                           ; Padding undefined space
  3731   300000                     	org	3145728
  3732   300000  FF                 	db	255
  3733                           
  3734                           ;Config register CONFIG1H @ 0x300001
  3735                           ;	Oscillator Selection bits
  3736                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
  3737                           ;	4X PLL Enable
  3738                           ;	PLLCFG = OFF, Oscillator used directly
  3739                           ;	Primary clock enable bit
  3740                           ;	PRICLKEN = ON, Primary clock enabled
  3741                           ;	Fail-Safe Clock Monitor Enable bit
  3742                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3743                           ;	Internal/External Oscillator Switchover bit
  3744                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3745   300001                     	org	3145729
  3746   300001  29                 	db	41
  3747                           
  3748                           ;Config register CONFIG2L @ 0x300002
  3749                           ;	Power-up Timer Enable bit
  3750                           ;	PWRTEN = ON, Power up timer enabled
  3751                           ;	Brown-out Reset Enable bits
  3752                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3753                           ;	Brown Out Reset Voltage bits
  3754                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3755   300002                     	org	3145730
  3756   300002  18                 	db	24
  3757                           
  3758                           ;Config register CONFIG2H @ 0x300003
  3759                           ;	Watchdog Timer Enable bits
  3760                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3761                           ;	Watchdog Timer Postscale Select bits
  3762                           ;	WDTPS = 32768, 1:32768
  3763   300003                     	org	3145731
  3764   300003  3C                 	db	60
  3765                           
  3766                           ; Padding undefined space
  3767   300004                     	org	3145732
  3768   300004  FF                 	db	255
  3769                           
  3770                           ;Config register CONFIG3H @ 0x300005
  3771                           ;	CCP2 MUX bit
  3772                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3773                           ;	PORTB A/D Enable bit
  3774                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  3775                           ;	P3A/CCP3 Mux bit
  3776                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3777                           ;	HFINTOSC Fast Start-up
  3778                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3779                           ;	Timer3 Clock input mux bit
  3780                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3781                           ;	ECCP2 B output mux bit
  3782                           ;	P2BMX = PORTB5, P2B is on RB5
  3783                           ;	MCLR Pin Enable bit
  3784                           ;	MCLRE = INTMCLR, RE3 input pin enabled; MCLR disabled
  3785   300005                     	org	3145733
  3786   300005  3D                 	db	61
  3787                           
  3788                           ;Config register CONFIG4L @ 0x300006
  3789                           ;	Stack Full/Underflow Reset Enable bit
  3790                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3791                           ;	Single-Supply ICSP Enable bit
  3792                           ;	LVP = OFF, Single-Supply ICSP disabled
  3793                           ;	Extended Instruction Set Enable bit
  3794                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3795                           ;	Background Debug
  3796                           ;	DEBUG = 0x1, unprogrammed default
  3797   300006                     	org	3145734
  3798   300006  81                 	db	129
  3799                           
  3800                           ; Padding undefined space
  3801   300007                     	org	3145735
  3802   300007  FF                 	db	255
  3803                           
  3804                           ;Config register CONFIG5L @ 0x300008
  3805                           ;	Code Protection Block 0
  3806                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3807                           ;	Code Protection Block 1
  3808                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3809   300008                     	org	3145736
  3810   300008  03                 	db	3
  3811                           
  3812                           ;Config register CONFIG5H @ 0x300009
  3813                           ;	Boot Block Code Protection bit
  3814                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3815                           ;	Data EEPROM Code Protection bit
  3816                           ;	CPD = OFF, Data EEPROM not code-protected
  3817   300009                     	org	3145737
  3818   300009  C0                 	db	192
  3819                           
  3820                           ;Config register CONFIG6L @ 0x30000A
  3821                           ;	Write Protection Block 0
  3822                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3823                           ;	Write Protection Block 1
  3824                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3825   30000A                     	org	3145738
  3826   30000A  03                 	db	3
  3827                           
  3828                           ;Config register CONFIG6H @ 0x30000B
  3829                           ;	Configuration Register Write Protection bit
  3830                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3831                           ;	Boot Block Write Protection bit
  3832                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3833                           ;	Data EEPROM Write Protection bit
  3834                           ;	WRTD = OFF, Data EEPROM not write-protected
  3835   30000B                     	org	3145739
  3836   30000B  E0                 	db	224
  3837                           
  3838                           ;Config register CONFIG7L @ 0x30000C
  3839                           ;	Table Read Protection Block 0
  3840                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3841                           ;	Table Read Protection Block 1
  3842                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3843   30000C                     	org	3145740
  3844   30000C  03                 	db	3
  3845                           
  3846                           ;Config register CONFIG7H @ 0x30000D
  3847                           ;	Boot Block Table Read Protection bit
  3848                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3849   30000D                     	org	3145741
  3850   30000D  40                 	db	64
  3851                           tosu	equ	0xFFF
  3852                           tosh	equ	0xFFE
  3853                           tosl	equ	0xFFD
  3854                           stkptr	equ	0xFFC
  3855                           pclatu	equ	0xFFB
  3856                           pclath	equ	0xFFA
  3857                           pcl	equ	0xFF9
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           indf0	equ	0xFEF
  3865                           postinc0	equ	0xFEE
  3866                           postdec0	equ	0xFED
  3867                           preinc0	equ	0xFEC
  3868                           plusw0	equ	0xFEB
  3869                           fsr0h	equ	0xFEA
  3870                           fsr0l	equ	0xFE9
  3871                           wreg	equ	0xFE8
  3872                           indf1	equ	0xFE7
  3873                           postinc1	equ	0xFE6
  3874                           postdec1	equ	0xFE5
  3875                           preinc1	equ	0xFE4
  3876                           plusw1	equ	0xFE3
  3877                           fsr1h	equ	0xFE2
  3878                           fsr1l	equ	0xFE1
  3879                           bsr	equ	0xFE0
  3880                           indf2	equ	0xFDF
  3881                           postinc2	equ	0xFDE
  3882                           postdec2	equ	0xFDD
  3883                           preinc2	equ	0xFDC
  3884                           plusw2	equ	0xFDB
  3885                           fsr2h	equ	0xFDA
  3886                           fsr2l	equ	0xFD9
  3887                           status	equ	0xFD8

Data Sizes:
    Strings     4
    Constant    0
    Data        7
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    puts1USART@data	PTR unsigned char  size(2) Largest target is 7
		 -> main@text(COMRAM[7]), 

    LCD_TextOut@text	PTR unsigned char  size(2) Largest target is 7
		 -> append_sign_to_LCD@tempstr(COMRAM[2]), main@text(COMRAM[7]), 

    LCD_ConstTextOut@text	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    write_to_LCD@data	PTR unsigned char  size(2) Largest target is 7
		 -> main@text(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_write_to_LCD
    _write_to_LCD->_LCD_TextOut
    _LCD_TextOut->_LCD_Write
    _puts1USART->_Write1USART
    ___init->_Open1USART
    _LCD_Init->_LCD_Write
    _LCD_Init->_LCD_Write_Nibble

Critical Paths under _high_isr in COMRAM

    _high_isr->_adc_to_LCD
    _writeValToUSART->___lwdiv
    ___lwdiv->___wmul
    _sendStatus->i2_Write1USART
    _append_sign_to_LCD->i2_LCD_TextOut
    i2_LCD_TextOut->i2_LCD_Write
    _adc_to_LCD->_LCD_ValueOut_00
    _LCD_ValueOut_00->___awdiv
    _LCD_ConstTextOut->i2_LCD_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1028
                                             38 COMRAM     8     8      0
                           _LCD_Busy
                          _LCD_Write
                             ___init
                         _puts1USART
                       _write_to_LCD
 ---------------------------------------------------------------------------------
 (1) _write_to_LCD                                         2     0      2     454
                                             36 COMRAM     2     0      2
                        _LCD_TextOut
 ---------------------------------------------------------------------------------
 (2) _LCD_TextOut                                          4     1      3     356
                                             32 COMRAM     4     1      3
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _puts1USART                                           2     0      2     136
                                             32 COMRAM     2     0      2
                        _Write1USART
 ---------------------------------------------------------------------------------
 (2) _Write1USART                                          1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___init                                               3     3      0     372
                                             34 COMRAM     2     2      0
                           _LCD_Init
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     296
                                             31 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      30
                                             32 COMRAM     1     1      0
                           _LCD_Busy
                          _LCD_Write
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write                                            1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            13    13      0    6205
                                             18 COMRAM    13    13      0
                         _Read1USART
                            ___lwdiv
                             ___wmul
                         _adc_to_LCD
                 _append_sign_to_LCD
                         _sendStatus
                    _writeValToUSART
                         i2_LCD_Busy
                        i2_LCD_Write
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (5) _writeValToUSART                                      3     1      2     967
                                             13 COMRAM     3     1      2
                            ___lwdiv
                            ___lwmod
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     466
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _sendStatus                                           1     1      0      44
                                              1 COMRAM     1     1      0
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (5) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _append_sign_to_LCD                                   3     3      0     237
                                              5 COMRAM     3     3      0
                      i2_LCD_TextOut
 ---------------------------------------------------------------------------------
 (6) i2_LCD_TextOut                                        4     1      3     163
                                              1 COMRAM     4     1      3
                         i2_LCD_Busy
                        i2_LCD_Write
 ---------------------------------------------------------------------------------
 (5) _adc_to_LCD                                           3     1      2    3401
                                             15 COMRAM     3     1      2
                   _LCD_ConstTextOut
                    _LCD_ValueOut_00
                         i2_LCD_Busy
                        i2_LCD_Write
 ---------------------------------------------------------------------------------
 (6) _LCD_ValueOut_00                                      7     3      4    3018
                                              8 COMRAM     7     3      4
                            ___awdiv
                             ___wmul
                         i2_LCD_Busy
                        i2_LCD_Write
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     919
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _LCD_ConstTextOut                                     4     1      3     263
                                              1 COMRAM     4     1      3
                         i2_LCD_Busy
                        i2_LCD_Write
 ---------------------------------------------------------------------------------
 (5) i2_LCD_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i2_LCD_Busy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Read1USART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Busy
   _LCD_Write
   ___init
     _LCD_Init
       _LCD_Busy
       _LCD_Write
       _LCD_Write_Nibble
     _Open1USART
   _puts1USART
     _Write1USART
   _write_to_LCD
     _LCD_TextOut
       _LCD_Busy
       _LCD_Write

 _high_isr (ROOT)
   _Read1USART
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _adc_to_LCD
     _LCD_ConstTextOut
       i2_LCD_Busy
       i2_LCD_Write
     _LCD_ValueOut_00
       ___awdiv
       ___wmul
       i2_LCD_Busy
       i2_LCD_Write
     i2_LCD_Busy
     i2_LCD_Write
   _append_sign_to_LCD
     i2_LCD_TextOut
       i2_LCD_Busy
       i2_LCD_Write
   _sendStatus
     i2_Write1USART
   _writeValToUSART
     ___lwdiv
     ___lwmod
     i2_Write1USART
   i2_LCD_Busy
   i2_LCD_Write
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      3D       1       64.9%
BITBIGSFRll         46      0       0      20        0.0%
BITBIGSFRhlhhh      1C      0       0      12        0.0%
BITBIGSFRhlhhl       E      0       0      13        0.0%
BITBIGSFRhhh         D      0       0      10        0.0%
BITBIGSFRhlhll       C      0       0      16        0.0%
BITBIGSFRhllh        8      0       0      17        0.0%
BITBIGSFRhlhlhl      7      0       0      15        0.0%
BITBIGSFRlh          7      0       0      19        0.0%
BITBIGSFRhlhlhh      7      0       0      14        0.0%
BITBIGSFRhlll        6      0       0      18        0.0%
BITBIGSFRhhl         1      0       0      11        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      21        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 23:00:22 2022

                        l85 0C8C                          l88 0CCE                          l89 0CCE  
                        u20 0DEA                          u21 0DE6                          u15 0DCE  
                        u17 0DD0                          u35 0B54                          u45 0B5E  
                        u37 0B56                          u55 0B68                          u47 0B60  
                        u65 0B72                          u57 0B6A                          u75 0B82  
                        u67 0B74                          u85 0B8C                          u77 0B84  
                        u95 0B96                          u87 0B8E                          u97 0B98  
              ___awdiv@sign 0006         ___wmul@multiplicand 0003                         l200 0736  
                       l203 0EA4                         l206 0BA8                         l311 084C  
                       l128 0F82                         l153 0B42                         l315 0882  
                       l331 0EF8                         l340 0DB4                         l317 0898  
                       l190 06BA                         l318 089A                         l319 08A6  
                       l336 0D7C                         l280 0A6C                         l193 06D6  
                       l273 0A18                         l187 069E                         l284 0DF2  
                       l196 06F2                         l278 0A40                         l199 071E  
                       u105 0BA0                         u107 0BA2                         u115 0E7E  
                       u125 0E88                         u117 0E80                         u310 0EE2  
                       u135 0E92                         u127 0E8A                         u311 0EDE  
                       u320 0EF2                         u145 0E9C                         u137 0E94  
                       u321 0EEE                         u147 0E9E                         u700 068A  
                       u701 0686                         u710 069E                         u711 069A  
                       u720 06BA                         u721 06B6                         u730 06D6  
                       u731 06D2                         u740 06F2                         u741 06EE  
                       u750 071E                         u751 071A                ?_LCD_TextOut 0021  
                       wreg 000FE8                  _TXSTA1bits 000FAC                 high_isr@val 001D  
                      l1033 0DF0                        l1025 0DB6                        l1041 0B4C  
                      l1027 0DEA                        l1051 0B76                        l1043 0B56  
                      l1061 0B98                        l1053 0B78                        l1045 0B60  
                      l1037 0B46                        l2021 0AF4                        l1063 0BA2  
                      l1055 0B7A                        l1047 0B6A                        l1039 0B4A  
                      l1071 0E72                        l2031 0B14                        l2023 0AF6  
                      l2015 0ADA                        l2111 0C78                        l1065 0BA4  
                      l1057 0B84                        l1049 0B74                        l1081 0E94  
                      l1073 0E74                        l1401 0720                        l2041 0B30  
                      l2033 0B18                        l2025 0AF8                        l2017 0ADE  
                      l2121 0CC2                        l2113 0C8E                        l1067 0BA6  
                      l1059 0B8E                        l1083 0E9E                        l1075 0E76  
                      l1403 0726                        l2051 0B3C                        l2043 0B32  
                      l2035 0B1C                        l2027 0B02                        l2019 0AE0  
                      l2115 0C94                        l1085 0EA0                        l1077 0E80  
                      l1069 0E6E                        l2053 0B3E                        l2045 0B34  
                      l2037 0B20                        l2029 0B10                        l2061 0D8A  
                      l2117 0CA4                        l2109 0C74                        l1087 0EA2  
                      l1079 0E8A                        l2055 0B40                        l2047 0B36  
                      l2039 0B28                        l1183 0ED4                        l2063 0D98  
                      l2119 0CB6                        l2049 0B38                        l1185 0EE2  
                      l2065 0D9C                        l2057 0F70                        l1371 0634  
                      l1187 0EF2                        l2059 0D78                        l1381 068A  
                      l1373 064A                        l1365 05E2                        l1189 0EF4  
                      l1391 06D8                        l1383 06A0                        l1375 065A  
                      l1367 05FE                        l1393 06DE                        l1385 06A6  
                      l1377 0670                        l1369 062E                        l1395 06F4  
                      l1387 06BC                        l1379 0676                        l1397 06FA  
                      l1389 06C2                        l1399 070A                        l1921 0816  
                      l1931 0846                        l1923 0824                        l1915 07FE  
                      l1941 086E                        l1933 084E                        l1925 0828  
                      l1917 0806                        l1781 0A04                        l1951 08A2  
                      l1943 087C                        l1935 085C                        l1927 0836  
                      l1919 0814                        l1791 0A50                        l1783 0A04  
                      l1953 08A4                        l1945 0884                        l1937 085E  
                      l1929 0838                        l1793 0A54                        l1785 0A1A  
                      l1947 0892                        l1939 086C                        l1787 0A2C  
                      l1949 089E                        l1789 0A42           ?_LCD_Write_Nibble 0001  
                      STR_1 0301                        u1300 0A40                        u1301 0A3C  
                      u1310 0A6C                        u2007 0624                        u1311 0A68  
                      u2017 063A                        u2027 0650                        u2037 0666  
                      _LATB 000F8A                        u2047 0700                        u1600 0836  
                      u2057 072C                        u1601 0832                        u1610 0846  
                      u1290 0A18                        u1611 0842                        u1291 0A14  
                      u1620 085C                        u1621 0858                        u1630 086C  
                      u1631 0868                        u1640 087C                        u1641 0878  
                      u1650 0892                        u1651 088E                        u1580 0814  
                      u1581 0810                        u1590 0824                        u1591 0820  
                      u1770 0D8A                        u1850 0C8C                        u1771 0D86  
                      u1851 0C88                        u1780 0DB4                        u1781 0DB0  
                      u1861 0CAE                        u1977 0C9A                        u1987 0604  
                      u1997 0614                        i2l96 0056                        i2l97 01D0  
                      i2l98 00BE                ___init@spbrg 0023          ??_LCD_Write_Nibble 0020  
               ?i2_LCD_Busy 0001              Read1USART@data 0001                        _main 0C74  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 003E                        prodh 000FF4  
                      prodl 000FF3                        start 01F4            _text_mode_column 0035  
              ___param_bank 000000                high_isr@data 001F            __end_of_LCD_Busy 0DF4  
          __end_of_LCD_Init 0738                       ?_main 0001             __end_of___awdiv 07FC  
                     _ADRES 000FC3             ___awdiv@divisor 0003           i2LCD_TextOut@text 0003  
           __end_of___lwdiv 0990             __end_of___lwmod 0C74                       i2l105 0118  
                     i2l122 0EBC                       i2l211 031C                       i2l116 01B6  
                     i2l221 03A4                       i2l133 0F48                       i2l125 0ED0  
                     i2l206 0C0E                       i2l150 091A                       i2l215 0352  
                     i2l119 0EA8                       i2l143 08E0                       i2l322 0D50  
                     i2l138 0CEA                       i2l139 0D2A                       i2l331 0F20  
                     i2l147 0906                       i2l324 0D60                       i2l252 0596  
                     i2l244 04FC                       i2l236 0462                       i2l228 03C8  
                     i2l325 0D70                       i2l261 09A6                       i2l245 0572  
                     i2l237 04D8                       i2l229 043E                       i2l326 0D76  
                     i2l255 05D6                       i2l352 0F6E                       i2l256 05E0  
                     i2l280 0AD8                       i2l273 0A84                       i2l266 09CE  
                     i2l284 0E30                       i2l268 0A00                       i2l278 0AAC  
                     i2l583 07FA                       i2l850 098E                       i2l843 0986  
                     i2l860 0C72                       i2l853 0C6A             ___awdiv@counter 0005  
                     _TRISB 000F93                ?i2_LCD_Write 0001                  _Read1USART 0D2C  
                     tablat 000FF5                       plusw1 000FE3                       plusw2 000FDB  
                     ttemp5 003F                       ttemp6 0042                       ttemp7 0046  
                     status 000FD8                       wtemp8 003F    __end_of_LCD_ConstTextOut 0A02  
           _LCD_ValueOut_00 0306               i2_Write1USART 0EFA             __initialization 0E32  
              __end_of_main 0CD6              puts1USART@data 0021                  _Open1USART 07FC  
                    ??_main 0027               __activetblptr 000002           __end_of_LCD_Write 0BAA  
          ___awdiv@dividend 0001                      _ANSELA 000F38                      _ANSELB 000F39  
                    _ANSELC 000F3A                      i2l2001 0AAE                      i2l2003 0ABC  
                    i2l2011 0F1A                      i2l2005 0AC0                      i2l2101 0F2C  
                    i2l2013 0F1C                      i2l2103 0F30                      i2l2007 0EFC  
                    i2l2105 0F34                      i2l2009 0F0A                      i2l2107 0F46  
                    i2l2131 0052                      i2l2123 002A                      i2l2213 015E  
                    i2l2141 00AE                      i2l2133 0064                      i2l2125 0038  
                    i2l2071 0CEC                      i2l2135 0072                      i2l2127 0046  
                    i2l2073 0CF2                      i2l2081 08A8                      i2l2161 0104  
                    i2l2153 00F4                      i2l2145 00CC                      i2l2137 0074  
                    i2l2129 0048                      i2l2075 0D02                      i2l2067 0CD6  
                    i2l2091 0914                      i2l2083 08C0                      i2l2171 0140  
                    i2l2163 011A                      i2l2155 00FA                      i2l2147 00DA  
                    i2l2139 00A2                      i2l1701 0756                      i2l2077 0D18  
                    i2l2069 0CD6                      i2l2093 0EA8                      i2l2085 08DC  
                    i2l2181 01A2                      i2l2165 0120                      i2l2157 00FC  
                    i2l2173 014A                      i2l2149 00E0                      i2l1551 0D5E  
                    i2l1543 0D2C                      i2l1711 078A                      i2l1703 0764  
                    i2l2095 0EB6                      i2l2087 08EE                      i2l2079 08A8  
                    i2l2183 01B8                      i2l2167 0134                      i2l2159 0100  
                    i2l2175 0184                      i2l1553 0D6E                      i2l1545 0D30  
                    i2l1721 07C4                      i2l1713 0792                      i2l1705 076C  
                    i2l1801 032C                      i2l2097 0ECA                      i2l2089 08F4  
                    i2l2185 01BE                      i2l2177 0194                      i2l2169 013A  
                    i2l1555 0D74                      i2l1547 0D3E                      i2l1731 07EA  
                    i2l1723 07CC                      i2l1715 079A                      i2l1707 0770  
                    i2l1811 035A                      i2l1803 0330                      i2l2099 0F24  
                    i2l2187 01CE                      i2l2179 019E                      i2l1549 0D4E  
                    i2l1741 0BB2                      i2l1901 0992                      i2l1733 07F2  
                    i2l1725 07CE                      i2l1717 07A8                      i2l1709 0778  
                    i2l1805 033E                      i2l1813 0366                      i2l1751 0BDC  
                    i2l1743 0BBC                      i2l1911 09E0                      i2l1903 0992  
                    i2l1727 07D4                      i2l1719 07AE                      i2l1831 03A0  
                    i2l1823 0366                      i2l1807 033E                      i2l1761 0BFE  
                    i2l1753 0BDE                      i2l1745 0BC6                      i2l1737 0BAC  
                    i2l1913 09E4                      i2l1905 09A8                      i2l1729 07DA  
                    i2l1841 03F0                      i2l1825 037E                      i2l1809 0354  
                    i2l1771 0E28                      i2l1763 0C08                      i2l1755 0BE0  
                    i2l1747 0BD0                      i2l1739 0BB0                      i2l1907 09BA  
                    i2l1843 0408                      i2l1835 03B4                      i2l1827 037E  
                    i2l1765 0C0A                      i2l1757 0BEA                      i2l1749 0BDA  
                    i2l1909 09D0                      i2l1693 0738                      i2l1861 04A2  
                    i2l1853 044E                      i2l1845 0418                      i2l1837 03CA  
                    i2l1829 038E                      i2l1767 0C0C                      i2l1759 0BF4  
                    i2l1695 073C                      i2l1687 0F4A                      i2l1871 04E8  
                    i2l1863 04B2                      i2l1855 0464                      i2l1847 0428  
                    i2l1839 03D2                      i2l1777 0E2E                      i2l1769 0DF4  
                    i2l1697 074A                      i2l1689 0F66                      i2l1881 054C  
                    i2l1873 04FE                      i2l1865 04C2                      i2l1857 046C  
                    i2l1849 043A                      i2l1961 093E                      i2l1699 0752  
                    i2l1891 0598                      i2l1883 055C                      i2l1875 0506  
                    i2l1867 04D4                      i2l1859 048A                      i2l1795 0308  
                    i2l1971 0978                      i2l1963 0946                      i2l1955 091C  
                    i2l1893 05A0                      i2l1885 056E                      i2l1877 0524  
                    i2l1797 0308                      i2l1973 097A                      i2l1965 0954  
                    i2l1957 0924                      i2l1981 0C2A                      i2l1895 05BE  
                    i2l1879 053C                      i2l1799 031E                      i2l1975 0980  
                    i2l1967 095A                      i2l1959 0936                      i2l1991 0C64  
                    i2l1983 0C32                      i2l1897 05C2                      i2l1889 0582  
                    i2l1993 0A70                      i2l1969 0970                      i2l1985 0C40  
                    i2l1977 0C10                      i2l1899 05D8                      i2l1995 0A70  
                    i2l1987 0C56                      i2l1979 0C22                      i2l1997 0A86  
                    i2l1989 0C5E                      i2l1999 0A98                      _RCREG1 000FAE  
                    _RCSTA1 000FAB                      _OSCCON 000FD3                      _SPBRG1 000FAF  
            ?i2_Write1USART 0001           ??_writeValToUSART 0010                      _TXREG1 000FAD  
                    _TXSTA1 000FAC                _write_to_LCD 0F70            __end_of_high_isr 01F4  
                    ___init 0ADA                      ___wmul 0F4A                   ??___awdiv 0005  
                 ??___lwdiv 000B                   ??___lwmod 0005                      clear_0 0E58  
          ___awdiv@quotient 0007                      isa$std 000001                __pdataCOMRAM 0037  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8     __end_of_LCD_ValueOut_00 05E2                 ?_Read1USART 0001  
                __accesstop 0060     __end_of__initialization 0E5E                   ?_LCD_Busy 0001  
                 ?_LCD_Init 0001               ___rparam_used 000001              __pcstackCOMRAM 0001  
           _state_text_mode 0036                  _adc_to_LCD 0CD6                 ?_Open1USART 0020  
    append_sign_to_LCD@data 0006             ??i2_Write1USART 0001               ??_Write1USART 0020  
              ??i2_LCD_Busy 0001                  ??_LCD_Busy 0020                  ??_LCD_Init 0021  
                   ?___init 0001                     ?___wmul 0001            Open1USART@config 0022  
        __end_ofi2_LCD_Busy 0E32               i2_LCD_TextOut 0A6E                     _SPBRGH1 000FB0  
                   i2u93_40 0D3E                     i2u93_41 0D3A                     i2u94_40 0D4E  
                   i2u94_41 0D4A                     i2u95_40 0D5E                     i2u95_41 0D5A  
                   i2u96_40 0D6E                     i2u96_41 0D6A                   ?_high_isr 0001  
          ?_LCD_ValueOut_00 0009           i2Write1USART@data 0001           ?_LCD_ConstTextOut 0002  
                   __Hparam 0000                     __Lparam 0000          ??_LCD_ConstTextOut 0005  
       __end_of_Write1USART 0EFA                     ___awdiv 0738                 ?_adc_to_LCD 0010  
                   ___lwdiv 091C                     ___lwmod 0C10                __psmallconst 0300  
           LCD_TextOut@text 0022                     __pcinit 0E32                     __ramtop 0300  
                   __ptext0 0C74                     __ptext1 0F70                     __ptext2 0A02  
                   __ptext3 0D78                     __ptext4 0ED2                     __ptext5 0ADA  
                   __ptext6 07FC                     __ptext7 05E2                     __ptext8 0E6C  
                   __ptext9 0B44              ?i2_LCD_TextOut 0002             _writeValToUSART 08A8  
                ??_high_isr 0013                   _LCD_Write 0B44        end_of_initialization 0E5E  
                _sendStatus 0EA6               __Lmediumconst 0000                     postdec1 000FE5  
                   postinc0 000FEE         LCD_ConstTextOut@col 0002         LCD_ConstTextOut@row 0005  
                 _PORTBbits 000F81                  _puts1USART 0D78            write_to_LCD@data 0025  
                 _TRISAbits 000F92                   _TRISBbits 000F93                   _TRISCbits 000F94  
      LCD_ValueOut_00@value 000A                  ?_LCD_Write 0001                ??_Read1USART 0001  
               _Write1USART 0ED2  __end_of_append_sign_to_LCD 0F4A            _LCD_Write_Nibble 0E6C  
          i2LCD_TextOut@col 0002              __end_of___init 0B44            i2LCD_TextOut@row 0005  
            __end_of___wmul 0F70               __pidataCOMRAM 0F84                ??_Open1USART 0022  
   __end_of_writeValToUSART 091C          __end_of_Read1USART 0D78             ??i2_LCD_TextOut 0005  
        writeValToUSART@val 000E               ??_LCD_TextOut 0024         start_initialization 0E32  
   append_sign_to_LCD@F5825 0031                _LCD_busy_cnt 002F                 ?_sendStatus 0001  
        __end_of_Open1USART 08A8                    ??___init 0023                    ??___wmul 0005  
               ?_puts1USART 0021          LCD_ValueOut_00@col 0009          LCD_ValueOut_00@row 000D  
               __pbssCOMRAM 002F               ??i2_LCD_Write 0001                 ??_LCD_Write 0020  
          i2LCD_Write@value 0001         __end_of_LCD_TextOut 0A6E       LCD_Write_Nibble@value 0020  
     __end_ofi2_Write1USART 0F22            ___lwdiv@dividend 0007                   __pintcode 0008  
                  ?___awdiv 0001                ??_adc_to_LCD 0012               adc_to_LCD@val 0010  
                  ?___lwdiv 0007                    ?___lwmod 0001             Open1USART@spbrg 0020  
          ?_writeValToUSART 000E                 __smallconst 0300                    _BAUDCON1 000FB8  
          ___lwdiv@quotient 000B              LCD_TextOut@col 0021              LCD_TextOut@row 0024  
           Write1USART@data 0020          __end_of_adc_to_LCD 0D2C                    _LCD_Busy 0DB6  
                  _LCD_Init 05E2              ___wmul@product 0005                    _LATAbits 000F89  
                  _LATBbits 000F8A                    _LATCbits 000F8B                    _LCD_data 0034  
                  _PIE1bits 000F9D         __end_ofi2_LCD_Write 0C10            sendStatus@status 0002  
             ?_write_to_LCD 0025                    i2u120_45 0BC4                    i2u120_47 0BC6  
                  i2u113_40 074A                    i2u113_41 0746                    i2u121_45 0BCE  
                  i2u121_47 0BD0                    i2u114_40 0764                    i2u114_41 0760  
                  i2u122_45 0BD8                    i2u122_47 0BDA                    i2u115_40 078A  
                  i2u115_41 0786                    i2u123_45 0BE8                    i2u123_47 0BEA  
                  i2u116_40 07A8                    i2u140_40 0428                    i2u132_40 031C  
                  i2u116_41 07A4                    i2u140_41 0424                    i2u132_41 0318  
                  i2u124_45 0BF2                    i2u124_47 0BF4                    i2u117_40 07C4  
                  i2u141_40 043A                    i2u133_40 033E                    i2u117_41 07C0  
                  i2u141_41 0436                    i2u133_41 033A                    i2u125_45 0BFC  
                  i2u125_47 0BFE                    i2u118_40 07EA                    i2u150_40 055C  
                  i2u142_40 044E                    i2u134_40 0352                    i2u118_41 07E6  
                  i2u150_41 0558                    i2u142_41 044A                    i2u134_41 034E  
                  i2u126_45 0C06                    i2u126_47 0C08                    i2u206_47 0126  
                  i2u151_40 056E                    i2u143_40 0462                    i2u135_40 038E  
                  i2u151_41 056A                    i2u143_41 045E                    i2u135_41 038A  
                  i2u127_45 0E0C                    i2u119_45 0BBA                    i2u127_47 0E0E  
                  i2u119_47 0BBC                    i2u207_47 01C4                    i2u128_40 0E28  
                  i2u152_40 0582                    i2u144_40 04B2                    i2u136_40 03A0  
                  i2u128_41 0E24                    i2u152_41 057E                    i2u144_41 04AE  
                  i2u136_41 039C                    i2u208_47 0CF8                    i2u153_40 0596  
                  i2u145_40 04C2                    i2u137_40 03B4                    i2u153_41 0592  
                  i2u145_41 04BE                    i2u137_41 03B0                    i2u154_40 05D6  
                  i2u146_40 04D4                    i2u138_40 03C8                    i2u170_40 0C40  
                  i2u154_41 05D2                    i2u146_41 04D0                    i2u138_41 03C4  
                  i2u170_41 0C3C                    i2u155_40 09A6                    i2u147_40 04E8  
                  i2u139_40 0418                    i2u171_40 0C56                    i2u155_41 09A2  
                  i2u147_41 04E4                    i2u139_41 0414                    i2u171_41 0C52  
                  i2u156_40 09CE                    i2u148_40 04FC                    i2u172_40 0A84  
                  i2u180_40 08EE                    i2u156_41 09CA                    i2u148_41 04F8  
                  i2u172_41 0A80                    i2u180_41 08EA                    i2u157_40 0A00  
                  i2u149_40 054C                    i2u173_40 0AAC                    i2u181_40 0906  
                  i2u157_41 09FC                    i2u149_41 0548                    i2u173_41 0AA8  
                  i2u181_41 0902                    i2u174_40 0AD8                    i2u166_40 0936  
                  i2u182_40 0914                    i2u190_40 0072                    i2u174_41 0AD4  
                  i2u166_41 0932                    i2u182_41 0910                    i2u190_41 006E  
                  i2u175_40 0F0A                    i2u183_40 0EB6                    i2u167_40 0954  
                  i2u191_40 00CC                    i2u175_41 0F06                    i2u183_41 0EB2  
                  i2u167_41 0950                    i2u191_41 00C8                    i2u176_40 0F1A  
                  i2u184_40 0ECA                    i2u168_40 0970                    i2u192_40 00DA  
                  i2u176_41 0F16                    i2u184_41 0EC6                    i2u168_41 096C  
                  i2u192_41 00D6                    i2u169_40 0C22                    i2u193_40 00F0  
                  i2u169_41 0C1E                    i2u193_41 00EC                    _PIR1bits 000F9E  
                  i2u194_40 0118                    i2u194_41 0114                    i2u179_40 0CEA  
                  i2u195_40 0194                    i2u187_40 0038                    i2u179_41 0CE6  
                  i2u195_41 0190                    i2u187_41 0034                    i2u196_40 01B6  
                  i2u188_40 0046                    i2u196_41 01B2                    i2u188_41 0042  
                  i2u189_40 0064                    i2u189_41 0060                   main@F5814 0037  
                _ADCON0bits 000FC2                  _ADCON1bits 000FC1                  _ADCON2bits 000FC0  
         ___wmul@multiplier 0001                 _LCD_TextOut 0A02    __end_of_LCD_Write_Nibble 0EA6  
               _INTCON3bits 000FF0                   copy_data0 0E46                ?_Write1USART 0001  
            ??_write_to_LCD 0027                    __Hrparam 0000                    __Lrparam 0000  
            LCD_Write@value 0020          _append_sign_to_LCD 0F22         ?_append_sign_to_LCD 0001  
           ___lwdiv@divisor 0009             ___lwdiv@counter 000D                    __ptext10 0DB6  
                  __ptext20 0306                    __ptext12 08A8                    __ptext21 0F4A  
                  __ptext13 0C10                    __ptext22 0738                    __ptext14 091C  
                  __ptext23 0990                    __ptext15 0EA6                    __ptext24 0BAA  
                  __ptext16 0EFA                    __ptext25 0DF4                    __ptext17 0F22  
                  __ptext26 0D2C                    __ptext18 0A6E                    __ptext19 0CD6  
                  _high_isr 0008                 i2_LCD_Write 0BAA                ??_sendStatus 0002  
      ??_append_sign_to_LCD 0006                    isa$xinst 000000                    int$flags 003E  
         ??_LCD_ValueOut_00 000D                    main@text 0028                ??_puts1USART 0023  
             _USART1_Status 0033            _LCD_ConstTextOut 0990            writeValToUSART@c 0010  
        __end_of_sendStatus 0ED2                  _INTCONbits 000FF2       __end_ofi2_LCD_TextOut 0ADA  
                  intlevel2 0000            ___lwmod@dividend 0001                  i2_LCD_Busy 0DF4  
                _RCSTA1bits 000FAB          __end_of_puts1USART 0DB6     LCD_ValueOut_00@chBuffer 000F  
  LCD_ValueOut_00@leading_0 000E   append_sign_to_LCD@tempstr 0007             ___lwmod@divisor 0003  
      LCD_ConstTextOut@text 0003        __end_of_write_to_LCD 0F84             ___lwmod@counter 0005  
    LCD_ValueOut_00@min_dig 000C  
