

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 23:29:26 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F24K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 06/04/2022 GMT
    45                           ; 
    46                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F24K22 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataCOMRAM
    80   000F84                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for main@F5814
    84   000F84  48                 	db	72
    85   000F85  45                 	db	69
    86   000F86  4C                 	db	76
    87   000F87  4C                 	db	76
    88   000F88  4F                 	db	79
    89   000F89  0D                 	db	13
    90   000F8A  00                 	db	0
    91   000000                     _TXREG1	set	4013
    92   000000                     _RCREG1	set	4014
    93   000000                     _SPBRG1	set	4015
    94   000000                     _BAUDCON1	set	4024
    95   000000                     _RCSTA1bits	set	4011
    96   000000                     _TXSTA1	set	4012
    97   000000                     _TRISBbits	set	3987
    98   000000                     _LATB	set	3978
    99   000000                     _LATB3	set	31827
   100   000000                     _PORTBbits	set	3969
   101   000000                     _ANSELC	set	3898
   102   000000                     _ANSELB	set	3897
   103   000000                     _ANSELA	set	3896
   104   000000                     _LATAbits	set	3977
   105   000000                     _LATCbits	set	3979
   106   000000                     _TRISAbits	set	3986
   107   000000                     _LATBbits	set	3978
   108   000000                     _PIE1bits	set	3997
   109   000000                     _INTCON3bits	set	4080
   110   000000                     _INTCONbits	set	4082
   111   000000                     _RCSTA1	set	4011
   112   000000                     _TXSTA1bits	set	4012
   113   000000                     _ADCON0bits	set	4034
   114   000000                     _PIR1bits	set	3998
   115   000000                     _ADRES	set	4035
   116   000000                     _OSCCON	set	4051
   117   000000                     _TRISCbits	set	3988
   118   000000                     _TRISB	set	3987
   119   000000                     _ADCON2bits	set	4032
   120   000000                     _ADCON1bits	set	4033
   121   000000                     _SPBRGH1	set	4016
   122                           
   123                           	psect	smallconst
   124   000300                     __psmallconst:
   125                           	callstack 0
   126   000300  00                 	db	0
   127   000301                     STR_1:
   128   000301  20                 	db	32
   129   000302  6D                 	db	109	;'m'
   130   000303  56                 	db	86	;'V'
   131   000304  00                 	db	0
   132   000305  00                 	db	0	; dummy byte at the end
   133   000000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137   000E32                     __pcinit:
   138                           	callstack 0
   139   000E32                     start_initialization:
   140                           	callstack 0
   141   000E32                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (7 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146   000E32  0E84               	movlw	low __pidataCOMRAM
   147   000E34  6EF6               	movwf	tblptrl,c
   148   000E36  0E0F               	movlw	high __pidataCOMRAM
   149   000E38  6EF7               	movwf	tblptrh,c
   150   000E3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151   000E3C  6EF8               	movwf	tblptru,c
   152   000E3E  EE00  F037         	lfsr	0,__pdataCOMRAM
   153   000E42  EE10 F007          	lfsr	1,7
   154   000E46                     copy_data0:
   155   000E46  0009               	tblrd		*+
   156   000E48  CFF5 FFEE          	movff	tablat,postinc0
   157   000E4C  50E5               	movf	postdec1,w,c
   158   000E4E  50E1               	movf	fsr1l,w,c
   159   000E50  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to COMRAM (8 bytes)
   162   000E52  EE00  F02F         	lfsr	0,__pbssCOMRAM
   163   000E56  0E08               	movlw	8
   164   000E58                     clear_0:
   165   000E58  6AEE               	clrf	postinc0,c
   166   000E5A  06E8               	decf	wreg,f,c
   167   000E5C  E1FD               	bnz	clear_0
   168   000E5E                     end_of_initialization:
   169                           	callstack 0
   170   000E5E                     __end_of__initialization:
   171                           	callstack 0
   172   000E5E  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   173   000E60  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   174   000E62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175   000E64  6EF8               	movwf	tblptru,c
   176   000E66  0100               	movlb	0
   177   000E68  EF3A  F006         	goto	_main	;jump to C main() function
   178                           
   179                           	psect	bssCOMRAM
   180   00002F                     __pbssCOMRAM:
   181                           	callstack 0
   182   00002F                     _LCD_busy_cnt:
   183                           	callstack 0
   184   00002F                     	ds	2
   185   000031                     append_sign_to_LCD@F5825:
   186                           	callstack 0
   187   000031                     	ds	2
   188   000033                     _USART1_Status:
   189                           	callstack 0
   190   000033                     	ds	1
   191   000034                     _LCD_data:
   192                           	callstack 0
   193   000034                     	ds	1
   194   000035                     _text_mode_column:
   195                           	callstack 0
   196   000035                     	ds	1
   197   000036                     _state_text_mode:
   198                           	callstack 0
   199   000036                     	ds	1
   200                           
   201                           	psect	dataCOMRAM
   202   000037                     __pdataCOMRAM:
   203                           	callstack 0
   204   000037                     main@F5814:
   205                           	callstack 0
   206   000037                     	ds	7
   207                           
   208                           	psect	cstackCOMRAM
   209   000001                     __pcstackCOMRAM:
   210                           	callstack 0
   211   000001                     ?___wmul:
   212                           	callstack 0
   213   000001                     ?___awdiv:
   214                           	callstack 0
   215   000001                     ?___lwmod:
   216                           	callstack 0
   217   000001                     Read1USART@data:
   218                           	callstack 0
   219   000001                     i2LCD_Write@value:
   220                           	callstack 0
   221   000001                     i2Write1USART@data:
   222                           	callstack 0
   223   000001                     ___wmul@multiplier:
   224                           	callstack 0
   225   000001                     ___awdiv@dividend:
   226                           	callstack 0
   227   000001                     ___lwmod@dividend:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x0
   231   000001                     	ds	1
   232   000002                     sendStatus@status:
   233                           	callstack 0
   234   000002                     LCD_ConstTextOut@col:
   235                           	callstack 0
   236   000002                     i2LCD_TextOut@col:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0x1
   240   000002                     	ds	1
   241   000003                     LCD_ConstTextOut@text:
   242                           	callstack 0
   243   000003                     ___wmul@multiplicand:
   244                           	callstack 0
   245   000003                     ___awdiv@divisor:
   246                           	callstack 0
   247   000003                     ___lwmod@divisor:
   248                           	callstack 0
   249   000003                     i2LCD_TextOut@text:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253   000003                     	ds	2
   254   000005                     LCD_ConstTextOut@row:
   255                           	callstack 0
   256   000005                     ___awdiv@counter:
   257                           	callstack 0
   258   000005                     ___lwmod@counter:
   259                           	callstack 0
   260   000005                     i2LCD_TextOut@row:
   261                           	callstack 0
   262   000005                     ___wmul@product:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x4
   266   000005                     	ds	1
   267   000006                     append_sign_to_LCD@data:
   268                           	callstack 0
   269   000006                     ___awdiv@sign:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x5
   273   000006                     	ds	1
   274   000007                     ?___lwdiv:
   275                           	callstack 0
   276   000007                     append_sign_to_LCD@tempstr:
   277                           	callstack 0
   278   000007                     ___awdiv@quotient:
   279                           	callstack 0
   280   000007                     ___lwdiv@dividend:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x6
   284   000007                     	ds	2
   285   000009                     LCD_ValueOut_00@col:
   286                           	callstack 0
   287   000009                     ___lwdiv@divisor:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x8
   291   000009                     	ds	1
   292   00000A                     LCD_ValueOut_00@value:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x9
   296   00000A                     	ds	1
   297   00000B                     ___lwdiv@quotient:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0xA
   301   00000B                     	ds	1
   302   00000C                     LCD_ValueOut_00@min_dig:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0xB
   306   00000C                     	ds	1
   307   00000D                     LCD_ValueOut_00@row:
   308                           	callstack 0
   309   00000D                     ___lwdiv@counter:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xC
   313   00000D                     	ds	1
   314   00000E                     LCD_ValueOut_00@leading_0:
   315                           	callstack 0
   316   00000E                     writeValToUSART@val:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xD
   320   00000E                     	ds	1
   321   00000F                     LCD_ValueOut_00@chBuffer:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0xE
   325   00000F                     	ds	1
   326   000010                     writeValToUSART@c:
   327                           	callstack 0
   328   000010                     adc_to_LCD@val:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0xF
   332   000010                     	ds	2
   333   000012                     ??_adc_to_LCD:
   334                           
   335                           ; 1 bytes @ 0x11
   336   000012                     	ds	1
   337   000013                     ??_high_isr:
   338                           
   339                           ; 1 bytes @ 0x12
   340   000013                     	ds	10
   341   00001D                     high_isr@val:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x1C
   345   00001D                     	ds	2
   346   00001F                     high_isr@data:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x1E
   350   00001F                     	ds	1
   351   000020                     LCD_Write_Nibble@value:
   352                           	callstack 0
   353   000020                     LCD_Write@value:
   354                           	callstack 0
   355   000020                     Write1USART@data:
   356                           	callstack 0
   357   000020                     Open1USART@spbrg:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x1F
   361   000020                     	ds	1
   362   000021                     ??_LCD_Init:
   363   000021                     LCD_TextOut@col:
   364                           	callstack 0
   365   000021                     puts1USART@data:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x20
   369   000021                     	ds	1
   370   000022                     Open1USART@config:
   371                           	callstack 0
   372   000022                     LCD_TextOut@text:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x21
   376   000022                     	ds	1
   377   000023                     ___init@spbrg:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x22
   381   000023                     	ds	1
   382   000024                     LCD_TextOut@row:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x23
   386   000024                     	ds	1
   387   000025                     write_to_LCD@data:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x24
   391   000025                     	ds	2
   392   000027                     ??_main:
   393                           
   394                           ; 1 bytes @ 0x26
   395   000027                     	ds	1
   396   000028                     main@text:
   397                           	callstack 0
   398                           
   399                           ; 7 bytes @ 0x27
   400   000028                     	ds	7
   401                           
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 44 in file "L07_main_serialCommunication.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  text            7   39[COMRAM] unsigned char [7]
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   421 ;;      Params:         0       0       0       0
   422 ;;      Locals:         7       0       0       0
   423 ;;      Temps:          1       0       0       0
   424 ;;      Totals:         8       0       0       0
   425 ;;Total ram usage:        8 bytes
   426 ;; Hardware stack levels required when called: 7
   427 ;; This function calls:
   428 ;;		_LCD_Busy
   429 ;;		_LCD_Write
   430 ;;		___init
   431 ;;		_puts1USART
   432 ;;		_write_to_LCD
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text0
   439   000C74                     __ptext0:
   440                           	callstack 0
   441   000C74                     _main:
   442                           	callstack 24
   443   000C74                     
   444                           ;L07_main_serialCommunication.c: 45:     __init();
   445   000C74  EC6D  F005         	call	___init	;wreg free
   446   000C78                     l2120:
   447   000C78  ECDB  F006         	call	_LCD_Busy	;wreg free
   448   000C7C  0900               	iorlw	0
   449   000C7E  A4D8               	btfss	status,2,c
   450   000C80  EF44  F006         	goto	u1861
   451   000C84  EF46  F006         	goto	u1860
   452   000C88                     u1861:
   453   000C88  EF3C  F006         	goto	l2120
   454   000C8C                     u1860:
   455   000C8C  9A89               	bcf	137,5,c	;volatile
   456   000C8E  0E01               	movlw	1
   457   000C90  ECA2  F005         	call	_LCD_Write
   458   000C94  0E07               	movlw	7
   459   000C96  6E27               	movwf	??_main^0,c
   460   000C98  0E7D               	movlw	125
   461   000C9A                     u1997:
   462   000C9A  2EE8               	decfsz	wreg,f,c
   463   000C9C  D7FE               	bra	u1997
   464   000C9E  2E27               	decfsz	??_main^0,f,c
   465   000CA0  D7FC               	bra	u1997
   466   000CA2  F000               	nop	
   467   000CA4                     
   468                           ;L07_main_serialCommunication.c: 48:     char text[] = "HELLO\r";
   469   000CA4  EE20  F037         	lfsr	2,main@F5814
   470   000CA8  EE10  F028         	lfsr	1,main@text
   471   000CAC  0E06               	movlw	6
   472   000CAE                     u1871:
   473   000CAE  CFDB FFE3          	movff	plusw2,plusw1
   474   000CB2  06E8               	decf	wreg,f,c
   475   000CB4  E2FC               	bc	u1871
   476   000CB6                     
   477                           ;L07_main_serialCommunication.c: 49:     write_to_LCD(text);
   478   000CB6  0E28               	movlw	low main@text
   479   000CB8  6E25               	movwf	write_to_LCD@data^0,c
   480   000CBA  0E00               	movlw	high main@text
   481   000CBC  6E26               	movwf	(write_to_LCD@data+1)^0,c
   482   000CBE  ECB8  F007         	call	_write_to_LCD	;wreg free
   483   000CC2                     
   484                           ;L07_main_serialCommunication.c: 50:     puts1USART(text);
   485   000CC2  0E28               	movlw	low main@text
   486   000CC4  6E21               	movwf	puts1USART@data^0,c
   487   000CC6  0E00               	movlw	high main@text
   488   000CC8  6E22               	movwf	(puts1USART@data+1)^0,c
   489   000CCA  ECBC  F006         	call	_puts1USART	;wreg free
   490   000CCE                     l90:
   491   000CCE  EF67  F006         	goto	l90
   492   000CD2  EF0A  F001         	goto	start
   493   000CD6                     __end_of_main:
   494                           	callstack 0
   495                           
   496 ;; *************** function _write_to_LCD *****************
   497 ;; Defined at:
   498 ;;		line 144 in file "L07_main_serialCommunication.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;  data            2   36[COMRAM] PTR unsigned char 
   501 ;;		 -> main@text(7), 
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   513 ;;      Params:         2       0       0       0
   514 ;;      Locals:         0       0       0       0
   515 ;;      Temps:          0       0       0       0
   516 ;;      Totals:         2       0       0       0
   517 ;;Total ram usage:        2 bytes
   518 ;; Hardware stack levels used: 1
   519 ;; Hardware stack levels required when called: 6
   520 ;; This function calls:
   521 ;;		_LCD_TextOut
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text1
   528   000F70                     __ptext1:
   529                           	callstack 0
   530   000F70                     _write_to_LCD:
   531                           	callstack 24
   532   000F70                     
   533                           ;L07_main_serialCommunication.c: 146:         LCD_TextOut(0,0,data);
   534   000F70  0E00               	movlw	0
   535   000F72  6E21               	movwf	LCD_TextOut@col^0,c
   536   000F74  C025  F022         	movff	write_to_LCD@data,LCD_TextOut@text
   537   000F78  C026  F023         	movff	write_to_LCD@data+1,LCD_TextOut@text+1
   538   000F7C  0E00               	movlw	0
   539   000F7E  EC01  F005         	call	_LCD_TextOut
   540   000F82  0012               	return		;funcret
   541   000F84                     __end_of_write_to_LCD:
   542                           	callstack 0
   543                           
   544 ;; *************** function _LCD_TextOut *****************
   545 ;; Defined at:
   546 ;;		line 174 in file "../../Libraries/LCD_library.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  row             1    wreg     unsigned char 
   549 ;;  col             1   32[COMRAM] unsigned char 
   550 ;;  text            2   33[COMRAM] PTR unsigned char 
   551 ;;		 -> append_sign_to_LCD@tempstr(2), main@text(7), 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;  row             1   35[COMRAM] unsigned char 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   563 ;;      Params:         3       0       0       0
   564 ;;      Locals:         1       0       0       0
   565 ;;      Temps:          0       0       0       0
   566 ;;      Totals:         4       0       0       0
   567 ;;Total ram usage:        4 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 5
   570 ;; This function calls:
   571 ;;		_LCD_Busy
   572 ;;		_LCD_Write
   573 ;; This function is called by:
   574 ;;		_write_to_LCD
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text2
   579   000A02                     __ptext2:
   580                           	callstack 0
   581   000A02                     _LCD_TextOut:
   582                           	callstack 24
   583                           
   584                           ;incstack = 0
   585                           ;LCD_TextOut@row stored from wreg
   586   000A02  6E24               	movwf	LCD_TextOut@row^0,c
   587   000A04                     l1792:
   588   000A04  ECDB  F006         	call	_LCD_Busy	;wreg free
   589   000A08  0900               	iorlw	0
   590   000A0A  A4D8               	btfss	status,2,c
   591   000A0C  EF0A  F005         	goto	u1301
   592   000A10  EF0C  F005         	goto	u1300
   593   000A14                     u1301:
   594   000A14  EF02  F005         	goto	l1792
   595   000A18                     u1300:
   596   000A18  9A89               	bcf	137,5,c	;volatile
   597   000A1A  5024               	movf	LCD_TextOut@row^0,w,c
   598   000A1C  0D40               	mullw	64
   599   000A1E  50F3               	movf	243,w,c
   600   000A20  2421               	addwf	LCD_TextOut@col^0,w,c
   601   000A22  0F80               	addlw	128
   602   000A24  ECA2  F005         	call	_LCD_Write
   603                           
   604                           ;../../Libraries/LCD_library.c: 177:     while (*text) {
   605   000A28  EF2A  F005         	goto	l1802
   606   000A2C                     l1796:
   607   000A2C  ECDB  F006         	call	_LCD_Busy	;wreg free
   608   000A30  0900               	iorlw	0
   609   000A32  A4D8               	btfss	status,2,c
   610   000A34  EF1E  F005         	goto	u1311
   611   000A38  EF20  F005         	goto	u1310
   612   000A3C                     u1311:
   613   000A3C  EF16  F005         	goto	l1796
   614   000A40                     u1310:
   615   000A40  8A89               	bsf	137,5,c	;volatile
   616   000A42  C022  FFD9         	movff	LCD_TextOut@text,fsr2l
   617   000A46  C023  FFDA         	movff	LCD_TextOut@text+1,fsr2h
   618   000A4A  50DF               	movf	indf2,w,c
   619   000A4C  ECA2  F005         	call	_LCD_Write
   620   000A50                     
   621                           ;../../Libraries/LCD_library.c: 179:         text++;
   622   000A50  4A22               	infsnz	LCD_TextOut@text^0,f,c
   623   000A52  2A23               	incf	(LCD_TextOut@text+1)^0,f,c
   624   000A54                     l1802:
   625                           
   626                           ;../../Libraries/LCD_library.c: 177:     while (*text) {
   627   000A54  C022  FFD9         	movff	LCD_TextOut@text,fsr2l
   628   000A58  C023  FFDA         	movff	LCD_TextOut@text+1,fsr2h
   629   000A5C  50DF               	movf	indf2,w,c
   630   000A5E  A4D8               	btfss	status,2,c
   631   000A60  EF34  F005         	goto	u1321
   632   000A64  EF36  F005         	goto	u1320
   633   000A68                     u1321:
   634   000A68  EF16  F005         	goto	l1796
   635   000A6C                     u1320:
   636   000A6C  0012               	return		;funcret
   637   000A6E                     __end_of_LCD_TextOut:
   638                           	callstack 0
   639                           
   640 ;; *************** function _puts1USART *****************
   641 ;; Defined at:
   642 ;;		line 95 in file "../../Libraries/PLIB_USART.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  data            2   32[COMRAM] PTR unsigned char 
   645 ;;		 -> main@text(7), 
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   657 ;;      Params:         2       0       0       0
   658 ;;      Locals:         0       0       0       0
   659 ;;      Temps:          0       0       0       0
   660 ;;      Totals:         2       0       0       0
   661 ;;Total ram usage:        2 bytes
   662 ;; Hardware stack levels used: 1
   663 ;; Hardware stack levels required when called: 5
   664 ;; This function calls:
   665 ;;		_Write1USART
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text3
   672   000D78                     __ptext3:
   673                           	callstack 0
   674   000D78                     _puts1USART:
   675                           	callstack 25
   676   000D78                     
   677                           ;../../Libraries/PLIB_USART.c: 96:     while (*data) {
   678   000D78  EFCE  F006         	goto	l2074
   679   000D7C                     l339:
   680   000D7C  A2AC               	btfss	172,1,c	;volatile
   681   000D7E  EFC3  F006         	goto	u1781
   682   000D82  EFC5  F006         	goto	u1780
   683   000D86                     u1781:
   684   000D86  EFBE  F006         	goto	l339
   685   000D8A                     u1780:
   686   000D8A                     
   687                           ;../../Libraries/PLIB_USART.c: 98:         Write1USART(*data);
   688   000D8A  C021  FFD9         	movff	puts1USART@data,fsr2l
   689   000D8E  C022  FFDA         	movff	puts1USART@data+1,fsr2h
   690   000D92  50DF               	movf	indf2,w,c
   691   000D94  EC69  F007         	call	_Write1USART
   692   000D98                     
   693                           ;../../Libraries/PLIB_USART.c: 99:         data++;
   694   000D98  4A21               	infsnz	puts1USART@data^0,f,c
   695   000D9A  2A22               	incf	(puts1USART@data+1)^0,f,c
   696   000D9C                     l2074:
   697                           
   698                           ;../../Libraries/PLIB_USART.c: 96:     while (*data) {
   699   000D9C  C021  FFD9         	movff	puts1USART@data,fsr2l
   700   000DA0  C022  FFDA         	movff	puts1USART@data+1,fsr2h
   701   000DA4  50DF               	movf	indf2,w,c
   702   000DA6  A4D8               	btfss	status,2,c
   703   000DA8  EFD8  F006         	goto	u1791
   704   000DAC  EFDA  F006         	goto	u1790
   705   000DB0                     u1791:
   706   000DB0  EFBE  F006         	goto	l339
   707   000DB4                     u1790:
   708   000DB4  0012               	return		;funcret
   709   000DB6                     __end_of_puts1USART:
   710                           	callstack 0
   711                           
   712 ;; *************** function _Write1USART *****************
   713 ;; Defined at:
   714 ;;		line 84 in file "../../Libraries/PLIB_USART.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  data            1    wreg     unsigned char 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  data            1   31[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   728 ;;      Params:         0       0       0       0
   729 ;;      Locals:         1       0       0       0
   730 ;;      Temps:          0       0       0       0
   731 ;;      Totals:         1       0       0       0
   732 ;;Total ram usage:        1 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 4
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_puts1USART
   739 ;;		_putrs1USART
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text4
   744   000ED2                     __ptext4:
   745                           	callstack 0
   746   000ED2                     _Write1USART:
   747                           	callstack 25
   748                           
   749                           ;incstack = 0
   750                           ;Write1USART@data stored from wreg
   751   000ED2  6E20               	movwf	Write1USART@data^0,c
   752   000ED4                     
   753                           ;../../Libraries/PLIB_USART.c: 85:     if (TXSTA1bits.TX9)
   754   000ED4  ACAC               	btfss	172,6,c	;volatile
   755   000ED6  EF6F  F007         	goto	u311
   756   000EDA  EF71  F007         	goto	u310
   757   000EDE                     u311:
   758   000EDE  EF7A  F007         	goto	l1192
   759   000EE2                     u310:
   760   000EE2                     
   761                           ;../../Libraries/PLIB_USART.c: 86:     {;../../Libraries/PLIB_USART.c: 87:         TXSTA
      +                          1bits.TX9D = 0;
   762   000EE2  90AC               	bcf	172,0,c	;volatile
   763                           
   764                           ;../../Libraries/PLIB_USART.c: 88:         if (USART1_Status.TX_NINE)
   765   000EE4  A233               	btfss	_USART1_Status^0,1,c
   766   000EE6  EF77  F007         	goto	u321
   767   000EEA  EF79  F007         	goto	u320
   768   000EEE                     u321:
   769   000EEE  EF7A  F007         	goto	l1192
   770   000EF2                     u320:
   771   000EF2                     
   772                           ;../../Libraries/PLIB_USART.c: 89:             TXSTA1bits.TX9D = 1;
   773   000EF2  80AC               	bsf	172,0,c	;volatile
   774   000EF4                     l1192:
   775                           
   776                           ;../../Libraries/PLIB_USART.c: 92:     TXREG1 = data;
   777   000EF4  C020  FFAD         	movff	Write1USART@data,4013	;volatile
   778   000EF8  0012               	return		;funcret
   779   000EFA                     __end_of_Write1USART:
   780                           	callstack 0
   781                           
   782 ;; *************** function ___init *****************
   783 ;; Defined at:
   784 ;;		line 190 in file "L07_main_serialCommunication.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  spbrg           2   34[COMRAM] unsigned int 
   789 ;;  config          1    0        unsigned char 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   799 ;;      Params:         0       0       0       0
   800 ;;      Locals:         2       0       0       0
   801 ;;      Temps:          0       0       0       0
   802 ;;      Totals:         2       0       0       0
   803 ;;Total ram usage:        2 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 6
   806 ;; This function calls:
   807 ;;		_LCD_Init
   808 ;;		_Open1USART
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           	psect	text5
   815   000ADA                     __ptext5:
   816                           	callstack 0
   817   000ADA                     ___init:
   818                           	callstack 24
   819   000ADA                     
   820                           ;L07_main_serialCommunication.c: 191:     OSCCON = 0x50;
   821   000ADA  0E50               	movlw	80
   822   000ADC  6ED3               	movwf	211,c	;volatile
   823   000ADE                     
   824                           ;L07_main_serialCommunication.c: 196:     LATB = 255;
   825   000ADE  688A               	setf	138,c	;volatile
   826   000AE0                     
   827                           ;L07_main_serialCommunication.c: 197:     TRISAbits.TRISA0 = 1;
   828   000AE0  8092               	bsf	146,0,c	;volatile
   829                           
   830                           ;L07_main_serialCommunication.c: 198:     ANSELA = 0b00000001;
   831   000AE2  0E01               	movlw	1
   832   000AE4  010F               	movlb	15	; () banked
   833   000AE6  6F38               	movwf	56,b	;volatile
   834                           
   835                           ;L07_main_serialCommunication.c: 199:     ANSELB = ANSELC = 0x00;
   836   000AE8  0E00               	movlw	0
   837   000AEA  6F3A               	movwf	58,b	;volatile
   838   000AEC  CF3A FF39          	movff	3898,3897	;volatile
   839                           
   840                           ;L07_main_serialCommunication.c: 200:     TRISB = 0b0000010;
   841   000AF0  0E02               	movlw	2
   842   000AF2  6E93               	movwf	147,c	;volatile
   843   000AF4                     
   844                           ; BSR set to: 15
   845                           ;L07_main_serialCommunication.c: 206:     TRISCbits.TRISC6 = 1 ;
   846   000AF4  8C94               	bsf	148,6,c	;volatile
   847   000AF6                     
   848                           ; BSR set to: 15
   849                           ;L07_main_serialCommunication.c: 207:     TRISCbits.TRISC7 = 1 ;
   850   000AF6  8E94               	bsf	148,7,c	;volatile
   851   000AF8                     
   852                           ; BSR set to: 15
   853                           ;L07_main_serialCommunication.c: 217:     TXSTA1bits.SENDB = 0;
   854   000AF8  96AC               	bcf	172,3,c	;volatile
   855                           
   856                           ;L07_main_serialCommunication.c: 222:     unsigned int spbrg = 51;
   857   000AFA  0E00               	movlw	0
   858   000AFC  6E24               	movwf	(___init@spbrg+1)^0,c
   859   000AFE  0E33               	movlw	51
   860   000B00  6E23               	movwf	___init@spbrg^0,c
   861   000B02                     
   862                           ; BSR set to: 15
   863                           ;L07_main_serialCommunication.c: 223:     Open1USART(config, spbrg);
   864   000B02  0E00               	movlw	0
   865   000B04  6E21               	movwf	(Open1USART@spbrg+1)^0,c
   866   000B06  0E33               	movlw	51
   867   000B08  6E20               	movwf	Open1USART@spbrg^0,c
   868   000B0A  0E7C               	movlw	124
   869   000B0C  ECFE  F003         	call	_Open1USART
   870   000B10                     
   871                           ;L07_main_serialCommunication.c: 224:     BAUDCON1 = 0b11111111 & 0b11011111 & 0b1110111
      +                          1 & 0b11111110 & 0b11111101;
   872   000B10  0ECC               	movlw	204
   873   000B12  6EB8               	movwf	184,c	;volatile
   874   000B14                     
   875                           ;L07_main_serialCommunication.c: 230:     ADCON0bits.CHS = 0b00000;
   876   000B14  0E83               	movlw	-125
   877   000B16  16C2               	andwf	194,f,c	;volatile
   878   000B18                     
   879                           ;L07_main_serialCommunication.c: 231:     ADCON1bits.PVCFG = 0b00;
   880   000B18  0EF3               	movlw	-13
   881   000B1A  16C1               	andwf	193,f,c	;volatile
   882   000B1C                     
   883                           ;L07_main_serialCommunication.c: 232:     ADCON1bits.NVCFG = 0b00;
   884   000B1C  0EFC               	movlw	-4
   885   000B1E  16C1               	andwf	193,f,c	;volatile
   886   000B20                     
   887                           ;L07_main_serialCommunication.c: 233:     ADCON2bits.ACQT = 0b101;
   888   000B20  50C0               	movf	192,w,c	;volatile
   889   000B22  0BC7               	andlw	-57
   890   000B24  0928               	iorlw	40
   891   000B26  6EC0               	movwf	192,c	;volatile
   892   000B28                     
   893                           ;L07_main_serialCommunication.c: 234:     ADCON2bits.ADCS = 0b010;
   894   000B28  50C0               	movf	192,w,c	;volatile
   895   000B2A  0BF8               	andlw	-8
   896   000B2C  0902               	iorlw	2
   897   000B2E  6EC0               	movwf	192,c	;volatile
   898   000B30                     
   899                           ;L07_main_serialCommunication.c: 235:     ADCON2bits.ADFM = 0b1;
   900   000B30  8EC0               	bsf	192,7,c	;volatile
   901   000B32                     
   902                           ;L07_main_serialCommunication.c: 236:     ADCON0bits.ADON = 1;
   903   000B32  80C2               	bsf	194,0,c	;volatile
   904   000B34                     
   905                           ;L07_main_serialCommunication.c: 237:     PIR1bits.ADIF = 0;
   906   000B34  9C9E               	bcf	158,6,c	;volatile
   907   000B36                     
   908                           ;L07_main_serialCommunication.c: 238:     PIE1bits.ADIE = 1;
   909   000B36  8C9D               	bsf	157,6,c	;volatile
   910   000B38                     
   911                           ;L07_main_serialCommunication.c: 240:     LCD_Init();
   912   000B38  ECF1  F002         	call	_LCD_Init	;wreg free
   913   000B3C                     
   914                           ;L07_main_serialCommunication.c: 243:     INTCON3bits.INT1IE = 1;
   915   000B3C  86F0               	bsf	240,3,c	;volatile
   916   000B3E                     
   917                           ;L07_main_serialCommunication.c: 246:     INTCONbits.PEIE = 1;
   918   000B3E  8CF2               	bsf	242,6,c	;volatile
   919   000B40                     
   920                           ;L07_main_serialCommunication.c: 247:     INTCONbits.GIE = 1;
   921   000B40  8EF2               	bsf	242,7,c	;volatile
   922   000B42  0012               	return		;funcret
   923   000B44                     __end_of___init:
   924                           	callstack 0
   925                           
   926 ;; *************** function _Open1USART *****************
   927 ;; Defined at:
   928 ;;		line 15 in file "../../Libraries/PLIB_USART.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  config          1    wreg     unsigned char 
   931 ;;  spbrg           2   31[COMRAM] unsigned int 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  config          1   33[COMRAM] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, status,2
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   943 ;;      Params:         2       0       0       0
   944 ;;      Locals:         1       0       0       0
   945 ;;      Temps:          0       0       0       0
   946 ;;      Totals:         3       0       0       0
   947 ;;Total ram usage:        3 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 4
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		___init
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text6
   958   0007FC                     __ptext6:
   959                           	callstack 0
   960   0007FC                     _Open1USART:
   961                           	callstack 25
   962                           
   963                           ;incstack = 0
   964                           ;Open1USART@config stored from wreg
   965   0007FC  6E22               	movwf	Open1USART@config^0,c
   966   0007FE                     
   967                           ;../../Libraries/PLIB_USART.c: 16:     TXSTA1 = 0;
   968   0007FE  0E00               	movlw	0
   969   000800  6EAC               	movwf	172,c	;volatile
   970                           
   971                           ;../../Libraries/PLIB_USART.c: 17:     RCSTA1 = 0;
   972   000802  0E00               	movlw	0
   973   000804  6EAB               	movwf	171,c	;volatile
   974   000806                     
   975                           ;../../Libraries/PLIB_USART.c: 19:     if (config & 0x01)
   976   000806  A022               	btfss	Open1USART@config^0,0,c
   977   000808  EF08  F004         	goto	u1591
   978   00080C  EF0A  F004         	goto	u1590
   979   000810                     u1591:
   980   000810  EF0B  F004         	goto	l1930
   981   000814                     u1590:
   982   000814                     
   983                           ;../../Libraries/PLIB_USART.c: 20:         TXSTA1bits.SYNC = 1;
   984   000814  88AC               	bsf	172,4,c	;volatile
   985   000816                     l1930:
   986                           
   987                           ;../../Libraries/PLIB_USART.c: 22:     if (config & 0x02)
   988   000816  A222               	btfss	Open1USART@config^0,1,c
   989   000818  EF10  F004         	goto	u1601
   990   00081C  EF12  F004         	goto	u1600
   991   000820                     u1601:
   992   000820  EF14  F004         	goto	l1934
   993   000824                     u1600:
   994   000824                     
   995                           ;../../Libraries/PLIB_USART.c: 23:     {;../../Libraries/PLIB_USART.c: 24:         TXSTA
      +                          1bits.TX9 = 1;
   996   000824  8CAC               	bsf	172,6,c	;volatile
   997                           
   998                           ;../../Libraries/PLIB_USART.c: 25:         RCSTA1bits.RX9 = 1;
   999   000826  8CAB               	bsf	171,6,c	;volatile
  1000   000828                     l1934:
  1001                           
  1002                           ;../../Libraries/PLIB_USART.c: 28:     if (config & 0x04)
  1003   000828  A422               	btfss	Open1USART@config^0,2,c
  1004   00082A  EF19  F004         	goto	u1611
  1005   00082E  EF1B  F004         	goto	u1610
  1006   000832                     u1611:
  1007   000832  EF1C  F004         	goto	l1938
  1008   000836                     u1610:
  1009   000836                     
  1010                           ;../../Libraries/PLIB_USART.c: 29:         TXSTA1bits.CSRC = 1;
  1011   000836  8EAC               	bsf	172,7,c	;volatile
  1012   000838                     l1938:
  1013                           
  1014                           ;../../Libraries/PLIB_USART.c: 31:     if (config & 0x08)
  1015   000838  A622               	btfss	Open1USART@config^0,3,c
  1016   00083A  EF21  F004         	goto	u1621
  1017   00083E  EF23  F004         	goto	u1620
  1018   000842                     u1621:
  1019   000842  EF26  F004         	goto	l314
  1020   000846                     u1620:
  1021   000846                     
  1022                           ;../../Libraries/PLIB_USART.c: 32:         RCSTA1bits.CREN = 1;
  1023   000846  88AB               	bsf	171,4,c	;volatile
  1024   000848  EF27  F004         	goto	l1942
  1025   00084C                     l314:
  1026                           
  1027                           ;../../Libraries/PLIB_USART.c: 34:         RCSTA1bits.SREN = 1;
  1028   00084C  8AAB               	bsf	171,5,c	;volatile
  1029   00084E                     l1942:
  1030                           
  1031                           ;../../Libraries/PLIB_USART.c: 36:     if (config & 0x10)
  1032   00084E  A822               	btfss	Open1USART@config^0,4,c
  1033   000850  EF2C  F004         	goto	u1631
  1034   000854  EF2E  F004         	goto	u1630
  1035   000858                     u1631:
  1036   000858  EF2F  F004         	goto	l1946
  1037   00085C                     u1630:
  1038   00085C                     
  1039                           ;../../Libraries/PLIB_USART.c: 37:         TXSTA1bits.BRGH = 1;
  1040   00085C  84AC               	bsf	172,2,c	;volatile
  1041   00085E                     l1946:
  1042                           
  1043                           ;../../Libraries/PLIB_USART.c: 39:     if (config & 0x20)
  1044   00085E  AA22               	btfss	Open1USART@config^0,5,c
  1045   000860  EF34  F004         	goto	u1641
  1046   000864  EF36  F004         	goto	u1640
  1047   000868                     u1641:
  1048   000868  EF37  F004         	goto	l1950
  1049   00086C                     u1640:
  1050   00086C                     
  1051                           ;../../Libraries/PLIB_USART.c: 40:         RCSTA1bits.ADDEN = 1;
  1052   00086C  86AB               	bsf	171,3,c	;volatile
  1053   00086E                     l1950:
  1054                           
  1055                           ;../../Libraries/PLIB_USART.c: 44:     if (config & 0x40)
  1056   00086E  AC22               	btfss	Open1USART@config^0,6,c
  1057   000870  EF3C  F004         	goto	u1651
  1058   000874  EF3E  F004         	goto	u1650
  1059   000878                     u1651:
  1060   000878  EF41  F004         	goto	l318
  1061   00087C                     u1650:
  1062   00087C                     
  1063                           ;../../Libraries/PLIB_USART.c: 45:         PIE1bits.RC1IE = 1;
  1064   00087C  8A9D               	bsf	157,5,c	;volatile
  1065   00087E  EF42  F004         	goto	l1954
  1066   000882                     l318:
  1067                           
  1068                           ;../../Libraries/PLIB_USART.c: 47:         PIE1bits.RC1IE = 0;
  1069   000882  9A9D               	bcf	157,5,c	;volatile
  1070   000884                     l1954:
  1071                           
  1072                           ;../../Libraries/PLIB_USART.c: 49:     if (config & 0x80)
  1073   000884  AE22               	btfss	Open1USART@config^0,7,c
  1074   000886  EF47  F004         	goto	u1661
  1075   00088A  EF49  F004         	goto	u1660
  1076   00088E                     u1661:
  1077   00088E  EF4C  F004         	goto	l320
  1078   000892                     u1660:
  1079   000892                     
  1080                           ;../../Libraries/PLIB_USART.c: 50:         PIE1bits.TX1IE = 1;
  1081   000892  889D               	bsf	157,4,c	;volatile
  1082   000894  EF4D  F004         	goto	l321
  1083   000898                     l320:
  1084                           
  1085                           ;../../Libraries/PLIB_USART.c: 52:         PIE1bits.TX1IE = 0;
  1086   000898  989D               	bcf	157,4,c	;volatile
  1087   00089A                     l321:
  1088                           
  1089                           ;../../Libraries/PLIB_USART.c: 54:     SPBRG1 = spbrg;
  1090   00089A  C020  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  1091   00089E                     
  1092                           ;../../Libraries/PLIB_USART.c: 55:     SPBRGH1 = spbrg >> 8;
  1093   00089E  5021               	movf	(Open1USART@spbrg+1)^0,w,c
  1094   0008A0  6EB0               	movwf	176,c	;volatile
  1095   0008A2                     
  1096                           ;../../Libraries/PLIB_USART.c: 57:     TXSTA1bits.TXEN = 1;
  1097   0008A2  8AAC               	bsf	172,5,c	;volatile
  1098   0008A4                     
  1099                           ;../../Libraries/PLIB_USART.c: 58:     RCSTA1bits.SPEN = 1;
  1100   0008A4  8EAB               	bsf	171,7,c	;volatile
  1101   0008A6  0012               	return		;funcret
  1102   0008A8                     __end_of_Open1USART:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function _LCD_Init *****************
  1106 ;; Defined at:
  1107 ;;		line 30 in file "../../Libraries/LCD_library.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1121 ;;      Params:         0       0       0       0
  1122 ;;      Locals:         0       0       0       0
  1123 ;;      Temps:          1       0       0       0
  1124 ;;      Totals:         1       0       0       0
  1125 ;;Total ram usage:        1 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 5
  1128 ;; This function calls:
  1129 ;;		_LCD_Busy
  1130 ;;		_LCD_Write
  1131 ;;		_LCD_Write_Nibble
  1132 ;; This function is called by:
  1133 ;;		___init
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text7
  1138   0005E2                     __ptext7:
  1139                           	callstack 0
  1140   0005E2                     _LCD_Init:
  1141                           	callstack 24
  1142   0005E2                     
  1143                           ;../../Libraries/LCD_library.c: 34:     LATCbits.LATC0 = 0; TRISCbits.TRISC0 = 0;
  1144   0005E2  908B               	bcf	139,0,c	;volatile
  1145   0005E4  9094               	bcf	148,0,c	;volatile
  1146                           
  1147                           ;../../Libraries/LCD_library.c: 35:     LATAbits.LATA5 = 0; TRISAbits.TRISA5 = 0;
  1148   0005E6  9A89               	bcf	137,5,c	;volatile
  1149   0005E8  9A92               	bcf	146,5,c	;volatile
  1150                           
  1151                           ;../../Libraries/LCD_library.c: 36:     LATCbits.LATC1 = 0; TRISCbits.TRISC1 = 0;
  1152   0005EA  928B               	bcf	139,1,c	;volatile
  1153   0005EC  9294               	bcf	148,1,c	;volatile
  1154                           
  1155                           ;../../Libraries/LCD_library.c: 39:     LATBbits.LATB2 = 0; TRISBbits.TRISB2 = 0;
  1156   0005EE  948A               	bcf	138,2,c	;volatile
  1157   0005F0  9493               	bcf	147,2,c	;volatile
  1158                           
  1159                           ;../../Libraries/LCD_library.c: 40:     LATBbits.LATB3 = 0; TRISBbits.TRISB3 = 0;
  1160   0005F2  968A               	bcf	138,3,c	;volatile
  1161   0005F4  9693               	bcf	147,3,c	;volatile
  1162                           
  1163                           ;../../Libraries/LCD_library.c: 41:     LATBbits.LATB4 = 0; TRISBbits.TRISB4 = 0;
  1164   0005F6  988A               	bcf	138,4,c	;volatile
  1165   0005F8  9893               	bcf	147,4,c	;volatile
  1166                           
  1167                           ;../../Libraries/LCD_library.c: 42:     LATBbits.LATB5 = 0; TRISBbits.TRISB5 = 0;
  1168   0005FA  9A8A               	bcf	138,5,c	;volatile
  1169   0005FC  9A93               	bcf	147,5,c	;volatile
  1170   0005FE                     
  1171                           ;../../Libraries/LCD_library.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));_d
      +                          elay((unsigned long)((5)*(4000000/4000.0)));_delay((unsigned long)((5)*(4000000/4000.0))
      +                          );
  1172   0005FE  0E07               	movlw	7
  1173   000600  6E21               	movwf	??_LCD_Init^0,c
  1174   000602  0E7D               	movlw	125
  1175   000604                     u2007:
  1176   000604  2EE8               	decfsz	wreg,f,c
  1177   000606  D7FE               	bra	u2007
  1178   000608  2E21               	decfsz	??_LCD_Init^0,f,c
  1179   00060A  D7FC               	bra	u2007
  1180   00060C  F000               	nop	
  1181   00060E  0E07               	movlw	7
  1182   000610  6E21               	movwf	??_LCD_Init^0,c
  1183   000612  0E7D               	movlw	125
  1184   000614                     u2017:
  1185   000614  2EE8               	decfsz	wreg,f,c
  1186   000616  D7FE               	bra	u2017
  1187   000618  2E21               	decfsz	??_LCD_Init^0,f,c
  1188   00061A  D7FC               	bra	u2017
  1189   00061C  F000               	nop	
  1190   00061E  0E07               	movlw	7
  1191   000620  6E21               	movwf	??_LCD_Init^0,c
  1192   000622  0E7D               	movlw	125
  1193   000624                     u2027:
  1194   000624  2EE8               	decfsz	wreg,f,c
  1195   000626  D7FE               	bra	u2027
  1196   000628  2E21               	decfsz	??_LCD_Init^0,f,c
  1197   00062A  D7FC               	bra	u2027
  1198   00062C  F000               	nop	
  1199   00062E                     
  1200                           ;../../Libraries/LCD_library.c: 46:     LCD_Write_Nibble(0x30); _delay((unsigned long)((
      +                          5)*(4000000/4000.0)));
  1201   00062E  0E30               	movlw	48
  1202   000630  EC36  F007         	call	_LCD_Write_Nibble
  1203   000634  0E07               	movlw	7
  1204   000636  6E21               	movwf	??_LCD_Init^0,c
  1205   000638  0E7D               	movlw	125
  1206   00063A                     u2037:
  1207   00063A  2EE8               	decfsz	wreg,f,c
  1208   00063C  D7FE               	bra	u2037
  1209   00063E  2E21               	decfsz	??_LCD_Init^0,f,c
  1210   000640  D7FC               	bra	u2037
  1211   000642  F000               	nop	
  1212                           
  1213                           ;../../Libraries/LCD_library.c: 47:     LCD_Write_Nibble(0x30); _delay((unsigned long)((
      +                          5)*(4000000/4000.0)));
  1214   000644  0E30               	movlw	48
  1215   000646  EC36  F007         	call	_LCD_Write_Nibble
  1216   00064A  0E07               	movlw	7
  1217   00064C  6E21               	movwf	??_LCD_Init^0,c
  1218   00064E  0E7D               	movlw	125
  1219   000650                     u2047:
  1220   000650  2EE8               	decfsz	wreg,f,c
  1221   000652  D7FE               	bra	u2047
  1222   000654  2E21               	decfsz	??_LCD_Init^0,f,c
  1223   000656  D7FC               	bra	u2047
  1224   000658  F000               	nop	
  1225   00065A                     
  1226                           ;../../Libraries/LCD_library.c: 48:     LCD_Write_Nibble(0x30); _delay((unsigned long)((
      +                          5)*(4000000/4000.0)));
  1227   00065A  0E30               	movlw	48
  1228   00065C  EC36  F007         	call	_LCD_Write_Nibble
  1229   000660  0E07               	movlw	7
  1230   000662  6E21               	movwf	??_LCD_Init^0,c
  1231   000664  0E7D               	movlw	125
  1232   000666                     u2057:
  1233   000666  2EE8               	decfsz	wreg,f,c
  1234   000668  D7FE               	bra	u2057
  1235   00066A  2E21               	decfsz	??_LCD_Init^0,f,c
  1236   00066C  D7FC               	bra	u2057
  1237   00066E  F000               	nop	
  1238   000670                     
  1239                           ;../../Libraries/LCD_library.c: 50:     LCD_Write_Nibble(0x20);
  1240   000670  0E20               	movlw	32
  1241   000672  EC36  F007         	call	_LCD_Write_Nibble
  1242   000676                     l1382:
  1243   000676  ECDB  F006         	call	_LCD_Busy	;wreg free
  1244   00067A  0900               	iorlw	0
  1245   00067C  A4D8               	btfss	status,2,c
  1246   00067E  EF43  F003         	goto	u701
  1247   000682  EF45  F003         	goto	u700
  1248   000686                     u701:
  1249   000686  EF3B  F003         	goto	l1382
  1250   00068A                     u700:
  1251   00068A                     l1384:
  1252   00068A  ECDB  F006         	call	_LCD_Busy	;wreg free
  1253   00068E  0900               	iorlw	0
  1254   000690  A4D8               	btfss	status,2,c
  1255   000692  EF4D  F003         	goto	u711
  1256   000696  EF4F  F003         	goto	u710
  1257   00069A                     u711:
  1258   00069A  EF45  F003         	goto	l1384
  1259   00069E                     u710:
  1260   00069E  9A89               	bcf	137,5,c	;volatile
  1261   0006A0  0E28               	movlw	40
  1262   0006A2  ECA2  F005         	call	_LCD_Write
  1263   0006A6                     l1388:
  1264   0006A6  ECDB  F006         	call	_LCD_Busy	;wreg free
  1265   0006AA  0900               	iorlw	0
  1266   0006AC  A4D8               	btfss	status,2,c
  1267   0006AE  EF5B  F003         	goto	u721
  1268   0006B2  EF5D  F003         	goto	u720
  1269   0006B6                     u721:
  1270   0006B6  EF53  F003         	goto	l1388
  1271   0006BA                     u720:
  1272   0006BA  9A89               	bcf	137,5,c	;volatile
  1273   0006BC  0E0C               	movlw	12
  1274   0006BE  ECA2  F005         	call	_LCD_Write
  1275   0006C2                     l1392:
  1276   0006C2  ECDB  F006         	call	_LCD_Busy	;wreg free
  1277   0006C6  0900               	iorlw	0
  1278   0006C8  A4D8               	btfss	status,2,c
  1279   0006CA  EF69  F003         	goto	u731
  1280   0006CE  EF6B  F003         	goto	u730
  1281   0006D2                     u731:
  1282   0006D2  EF61  F003         	goto	l1392
  1283   0006D6                     u730:
  1284   0006D6  9A89               	bcf	137,5,c	;volatile
  1285   0006D8  0E06               	movlw	6
  1286   0006DA  ECA2  F005         	call	_LCD_Write
  1287   0006DE                     l1396:
  1288   0006DE  ECDB  F006         	call	_LCD_Busy	;wreg free
  1289   0006E2  0900               	iorlw	0
  1290   0006E4  A4D8               	btfss	status,2,c
  1291   0006E6  EF77  F003         	goto	u741
  1292   0006EA  EF79  F003         	goto	u740
  1293   0006EE                     u741:
  1294   0006EE  EF6F  F003         	goto	l1396
  1295   0006F2                     u740:
  1296   0006F2  9A89               	bcf	137,5,c	;volatile
  1297   0006F4  0E01               	movlw	1
  1298   0006F6  ECA2  F005         	call	_LCD_Write
  1299   0006FA  0E07               	movlw	7
  1300   0006FC  6E21               	movwf	??_LCD_Init^0,c
  1301   0006FE  0E7D               	movlw	125
  1302   000700                     u2067:
  1303   000700  2EE8               	decfsz	wreg,f,c
  1304   000702  D7FE               	bra	u2067
  1305   000704  2E21               	decfsz	??_LCD_Init^0,f,c
  1306   000706  D7FC               	bra	u2067
  1307   000708  F000               	nop	
  1308   00070A                     l1402:
  1309   00070A  ECDB  F006         	call	_LCD_Busy	;wreg free
  1310   00070E  0900               	iorlw	0
  1311   000710  A4D8               	btfss	status,2,c
  1312   000712  EF8D  F003         	goto	u751
  1313   000716  EF8F  F003         	goto	u750
  1314   00071A                     u751:
  1315   00071A  EF85  F003         	goto	l1402
  1316   00071E                     u750:
  1317   00071E  9A89               	bcf	137,5,c	;volatile
  1318   000720  0E02               	movlw	2
  1319   000722  ECA2  F005         	call	_LCD_Write
  1320   000726  0E07               	movlw	7
  1321   000728  6E21               	movwf	??_LCD_Init^0,c
  1322   00072A  0E7D               	movlw	125
  1323   00072C                     u2077:
  1324   00072C  2EE8               	decfsz	wreg,f,c
  1325   00072E  D7FE               	bra	u2077
  1326   000730  2E21               	decfsz	??_LCD_Init^0,f,c
  1327   000732  D7FC               	bra	u2077
  1328   000734  F000               	nop	
  1329   000736  0012               	return		;funcret
  1330   000738                     __end_of_LCD_Init:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function _LCD_Write_Nibble *****************
  1334 ;; Defined at:
  1335 ;;		line 76 in file "../../Libraries/LCD_library.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  value           1    wreg     unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  value           1   31[COMRAM] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1349 ;;      Params:         0       0       0       0
  1350 ;;      Locals:         1       0       0       0
  1351 ;;      Temps:          0       0       0       0
  1352 ;;      Totals:         1       0       0       0
  1353 ;;Total ram usage:        1 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 4
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_LCD_Init
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text8
  1364   000E6C                     __ptext8:
  1365                           	callstack 0
  1366   000E6C                     _LCD_Write_Nibble:
  1367                           	callstack 24
  1368                           
  1369                           ;incstack = 0
  1370                           ;LCD_Write_Nibble@value stored from wreg
  1371   000E6C  6E20               	movwf	LCD_Write_Nibble@value^0,c
  1372   000E6E                     
  1373                           ;../../Libraries/LCD_library.c: 76: void LCD_Write_Nibble(unsigned char value);../../Lib
      +                          raries/LCD_library.c: 77: {;../../Libraries/LCD_library.c: 78:     LCD_data.all = value;
  1374   000E6E  C020  F034         	movff	LCD_Write_Nibble@value,_LCD_data
  1375   000E72                     
  1376                           ;../../Libraries/LCD_library.c: 79:     LATAbits.LATA5 = 0;
  1377   000E72  9A89               	bcf	137,5,c	;volatile
  1378   000E74                     
  1379                           ;../../Libraries/LCD_library.c: 80:     LATCbits.LATC0 = 0;
  1380   000E74  908B               	bcf	139,0,c	;volatile
  1381   000E76                     
  1382                           ;../../Libraries/LCD_library.c: 82:     LATBbits.LATB2 = LCD_data.bit4;
  1383   000E76  A834               	btfss	_LCD_data^0,4,c
  1384   000E78  D002               	bra	u115
  1385   000E7A  848A               	bsf	138,2,c	;volatile
  1386   000E7C  D001               	bra	u117
  1387   000E7E                     u115:
  1388   000E7E  948A               	bcf	138,2,c	;volatile
  1389   000E80                     u117:
  1390   000E80                     
  1391                           ;../../Libraries/LCD_library.c: 83:     LATBbits.LATB3 = LCD_data.bit5;
  1392   000E80  AA34               	btfss	_LCD_data^0,5,c
  1393   000E82  D002               	bra	u125
  1394   000E84  868A               	bsf	138,3,c	;volatile
  1395   000E86  D001               	bra	u127
  1396   000E88                     u125:
  1397   000E88  968A               	bcf	138,3,c	;volatile
  1398   000E8A                     u127:
  1399   000E8A                     
  1400                           ;../../Libraries/LCD_library.c: 84:     LATBbits.LATB4 = LCD_data.bit6;
  1401   000E8A  AC34               	btfss	_LCD_data^0,6,c
  1402   000E8C  D002               	bra	u135
  1403   000E8E  888A               	bsf	138,4,c	;volatile
  1404   000E90  D001               	bra	u137
  1405   000E92                     u135:
  1406   000E92  988A               	bcf	138,4,c	;volatile
  1407   000E94                     u137:
  1408   000E94                     
  1409                           ;../../Libraries/LCD_library.c: 85:     LATBbits.LATB5 = LCD_data.bit7;
  1410   000E94  AE34               	btfss	_LCD_data^0,7,c
  1411   000E96  D002               	bra	u145
  1412   000E98  8A8A               	bsf	138,5,c	;volatile
  1413   000E9A  D001               	bra	u147
  1414   000E9C                     u145:
  1415   000E9C  9A8A               	bcf	138,5,c	;volatile
  1416   000E9E                     u147:
  1417   000E9E                     
  1418                           ;../../Libraries/LCD_library.c: 87:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*(
      +                          4000000/4000000.0))); LATCbits.LATC1 = 0;
  1419   000E9E  828B               	bsf	139,1,c	;volatile
  1420   000EA0  F000               	nop	
  1421   000EA2  928B               	bcf	139,1,c	;volatile
  1422   000EA4  0012               	return		;funcret
  1423   000EA6                     __end_of_LCD_Write_Nibble:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _LCD_Write *****************
  1427 ;; Defined at:
  1428 ;;		line 91 in file "../../Libraries/LCD_library.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  value           1    wreg     unsigned char 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  value           1   31[COMRAM] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1442 ;;      Params:         0       0       0       0
  1443 ;;      Locals:         1       0       0       0
  1444 ;;      Temps:          0       0       0       0
  1445 ;;      Totals:         1       0       0       0
  1446 ;;Total ram usage:        1 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 4
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;;		_LCD_Init
  1454 ;;		_LCD_TextOut
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text9
  1459   000B44                     __ptext9:
  1460                           	callstack 0
  1461   000B44                     _LCD_Write:
  1462                           	callstack 24
  1463                           
  1464                           ;incstack = 0
  1465                           ;LCD_Write@value stored from wreg
  1466   000B44  6E20               	movwf	LCD_Write@value^0,c
  1467   000B46                     
  1468                           ;../../Libraries/LCD_library.c: 91: void LCD_Write(unsigned char value);../../Libraries/
      +                          LCD_library.c: 92: {;../../Libraries/LCD_library.c: 93:     LCD_data.all = value;
  1469   000B46  C020  F034         	movff	LCD_Write@value,_LCD_data
  1470   000B4A                     
  1471                           ;../../Libraries/LCD_library.c: 94:     LATCbits.LATC0 = 0;
  1472   000B4A  908B               	bcf	139,0,c	;volatile
  1473   000B4C                     
  1474                           ;../../Libraries/LCD_library.c: 96:     LATBbits.LATB5 = LCD_data.bit7;
  1475   000B4C  AE34               	btfss	_LCD_data^0,7,c
  1476   000B4E  D002               	bra	u35
  1477   000B50  8A8A               	bsf	138,5,c	;volatile
  1478   000B52  D001               	bra	u37
  1479   000B54                     u35:
  1480   000B54  9A8A               	bcf	138,5,c	;volatile
  1481   000B56                     u37:
  1482   000B56                     
  1483                           ;../../Libraries/LCD_library.c: 97:     LATBbits.LATB4 = LCD_data.bit6;
  1484   000B56  AC34               	btfss	_LCD_data^0,6,c
  1485   000B58  D002               	bra	u45
  1486   000B5A  888A               	bsf	138,4,c	;volatile
  1487   000B5C  D001               	bra	u47
  1488   000B5E                     u45:
  1489   000B5E  988A               	bcf	138,4,c	;volatile
  1490   000B60                     u47:
  1491   000B60                     
  1492                           ;../../Libraries/LCD_library.c: 98:     LATBbits.LATB3 = LCD_data.bit5;
  1493   000B60  AA34               	btfss	_LCD_data^0,5,c
  1494   000B62  D002               	bra	u55
  1495   000B64  868A               	bsf	138,3,c	;volatile
  1496   000B66  D001               	bra	u57
  1497   000B68                     u55:
  1498   000B68  968A               	bcf	138,3,c	;volatile
  1499   000B6A                     u57:
  1500   000B6A                     
  1501                           ;../../Libraries/LCD_library.c: 99:     LATBbits.LATB2 = LCD_data.bit4;
  1502   000B6A  A834               	btfss	_LCD_data^0,4,c
  1503   000B6C  D002               	bra	u65
  1504   000B6E  848A               	bsf	138,2,c	;volatile
  1505   000B70  D001               	bra	u67
  1506   000B72                     u65:
  1507   000B72  948A               	bcf	138,2,c	;volatile
  1508   000B74                     u67:
  1509   000B74                     
  1510                           ;../../Libraries/LCD_library.c: 100:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*
      +                          (4000000/4000000.0))); LATCbits.LATC1 = 0;
  1511   000B74  828B               	bsf	139,1,c	;volatile
  1512   000B76  F000               	nop	
  1513   000B78  928B               	bcf	139,1,c	;volatile
  1514   000B7A                     
  1515                           ;../../Libraries/LCD_library.c: 102:     LATBbits.LATB5 = LCD_data.bit3;
  1516   000B7A  A634               	btfss	_LCD_data^0,3,c
  1517   000B7C  D002               	bra	u75
  1518   000B7E  8A8A               	bsf	138,5,c	;volatile
  1519   000B80  D001               	bra	u77
  1520   000B82                     u75:
  1521   000B82  9A8A               	bcf	138,5,c	;volatile
  1522   000B84                     u77:
  1523   000B84                     
  1524                           ;../../Libraries/LCD_library.c: 103:     LATBbits.LATB4 = LCD_data.bit2;
  1525   000B84  A434               	btfss	_LCD_data^0,2,c
  1526   000B86  D002               	bra	u85
  1527   000B88  888A               	bsf	138,4,c	;volatile
  1528   000B8A  D001               	bra	u87
  1529   000B8C                     u85:
  1530   000B8C  988A               	bcf	138,4,c	;volatile
  1531   000B8E                     u87:
  1532   000B8E                     
  1533                           ;../../Libraries/LCD_library.c: 104:     LATBbits.LATB3 = LCD_data.bit1;
  1534   000B8E  A234               	btfss	_LCD_data^0,1,c
  1535   000B90  D002               	bra	u95
  1536   000B92  868A               	bsf	138,3,c	;volatile
  1537   000B94  D001               	bra	u97
  1538   000B96                     u95:
  1539   000B96  968A               	bcf	138,3,c	;volatile
  1540   000B98                     u97:
  1541   000B98                     
  1542                           ;../../Libraries/LCD_library.c: 105:     LATBbits.LATB2 = LCD_data.bit0;
  1543   000B98  A034               	btfss	_LCD_data^0,0,c
  1544   000B9A  D002               	bra	u105
  1545   000B9C  848A               	bsf	138,2,c	;volatile
  1546   000B9E  D001               	bra	u107
  1547   000BA0                     u105:
  1548   000BA0  948A               	bcf	138,2,c	;volatile
  1549   000BA2                     u107:
  1550   000BA2                     
  1551                           ;../../Libraries/LCD_library.c: 106:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*
      +                          (4000000/4000000.0))); LATCbits.LATC1 = 0;
  1552   000BA2  828B               	bsf	139,1,c	;volatile
  1553   000BA4  F000               	nop	
  1554   000BA6  928B               	bcf	139,1,c	;volatile
  1555   000BA8  0012               	return		;funcret
  1556   000BAA                     __end_of_LCD_Write:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _LCD_Busy *****************
  1560 ;; Defined at:
  1561 ;;		line 184 in file "../../Libraries/LCD_library.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      unsigned char 
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1575 ;;      Params:         0       0       0       0
  1576 ;;      Locals:         0       0       0       0
  1577 ;;      Temps:          0       0       0       0
  1578 ;;      Totals:         0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 4
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;;		_LCD_Init
  1587 ;;		_LCD_TextOut
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text10
  1592   000DB6                     __ptext10:
  1593                           	callstack 0
  1594   000DB6                     _LCD_Busy:
  1595                           	callstack 24
  1596   000DB6                     
  1597                           ;../../Libraries/LCD_library.c: 187:     LATCbits.LATC0 = 1;
  1598   000DB6  808B               	bsf	139,0,c	;volatile
  1599                           
  1600                           ;../../Libraries/LCD_library.c: 188:     LATAbits.LATA5 = 0;
  1601   000DB8  9A89               	bcf	137,5,c	;volatile
  1602                           
  1603                           ;../../Libraries/LCD_library.c: 189:     TRISBbits.TRISB2 = 1; TRISBbits.TRISB3 = 1; TRI
      +                          SBbits.TRISB4 = 1; TRISBbits.TRISB5 = 1;
  1604   000DBA  8493               	bsf	147,2,c	;volatile
  1605   000DBC  8693               	bsf	147,3,c	;volatile
  1606   000DBE  8893               	bsf	147,4,c	;volatile
  1607   000DC0  8A93               	bsf	147,5,c	;volatile
  1608                           
  1609                           ;../../Libraries/LCD_library.c: 191:     LATCbits.LATC1 = 1;; _delay((unsigned long)((1)
      +                          *(4000000/4000000.0)));
  1610   000DC2  828B               	bsf	139,1,c	;volatile
  1611   000DC4  F000               	nop	
  1612                           
  1613                           ;../../Libraries/LCD_library.c: 192:     LCD_data.bit7 = PORTBbits.RB5;
  1614   000DC6  AA81               	btfss	129,5,c	;volatile
  1615   000DC8  D002               	bra	u15
  1616   000DCA  8E34               	bsf	_LCD_data^0,7,c
  1617   000DCC  D001               	bra	u17
  1618   000DCE                     u15:
  1619   000DCE  9E34               	bcf	_LCD_data^0,7,c
  1620   000DD0                     u17:
  1621                           
  1622                           ;../../Libraries/LCD_library.c: 193:     LATCbits.LATC1 = 0;;
  1623   000DD0  928B               	bcf	139,1,c	;volatile
  1624                           
  1625                           ;../../Libraries/LCD_library.c: 195:     TRISBbits.TRISB2 = 0; TRISBbits.TRISB3 = 0; TRI
      +                          SBbits.TRISB4 = 0; TRISBbits.TRISB5 = 0;
  1626   000DD2  9493               	bcf	147,2,c	;volatile
  1627   000DD4  9693               	bcf	147,3,c	;volatile
  1628   000DD6  9893               	bcf	147,4,c	;volatile
  1629   000DD8  9A93               	bcf	147,5,c	;volatile
  1630                           
  1631                           ;../../Libraries/LCD_library.c: 196:     LATCbits.LATC0 = 0;
  1632   000DDA  908B               	bcf	139,0,c	;volatile
  1633                           
  1634                           ;../../Libraries/LCD_library.c: 198:     if (LCD_data.bit7 == 1) {
  1635   000DDC  AE34               	btfss	_LCD_data^0,7,c
  1636   000DDE  EFF3  F006         	goto	u21
  1637   000DE2  EFF5  F006         	goto	u20
  1638   000DE6                     u21:
  1639   000DE6  EFF8  F006         	goto	l1036
  1640   000DEA                     u20:
  1641   000DEA                     
  1642                           ;../../Libraries/LCD_library.c: 199:         return 1;
  1643   000DEA  0E01               	movlw	1
  1644   000DEC  EFF9  F006         	goto	l287
  1645   000DF0                     l1036:
  1646                           
  1647                           ;../../Libraries/LCD_library.c: 201:         return 0;
  1648   000DF0  0E00               	movlw	0
  1649   000DF2                     l287:
  1650   000DF2  0012               	return		;funcret
  1651   000DF4                     __end_of_LCD_Busy:
  1652                           	callstack 0
  1653                           
  1654 ;; *************** function _high_isr *****************
  1655 ;; Defined at:
  1656 ;;		line 58 in file "L07_main_serialCommunication.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;		None
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  data            1   30[COMRAM] unsigned char 
  1661 ;;  val             2   28[COMRAM] unsigned int 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1671 ;;      Params:         0       0       0       0
  1672 ;;      Locals:         3       0       0       0
  1673 ;;      Temps:         10       0       0       0
  1674 ;;      Totals:        13       0       0       0
  1675 ;;Total ram usage:       13 bytes
  1676 ;; Hardware stack levels used: 1
  1677 ;; Hardware stack levels required when called: 3
  1678 ;; This function calls:
  1679 ;;		_Read1USART
  1680 ;;		___lwdiv
  1681 ;;		___wmul
  1682 ;;		_adc_to_LCD
  1683 ;;		_append_sign_to_LCD
  1684 ;;		_sendStatus
  1685 ;;		_writeValToUSART
  1686 ;;		i2_LCD_Busy
  1687 ;;		i2_LCD_Write
  1688 ;;		i2_Write1USART
  1689 ;; This function is called by:
  1690 ;;		Interrupt level 2
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	intcode
  1695   000008                     __pintcode:
  1696                           	callstack 0
  1697   000008                     _high_isr:
  1698                           	callstack 24
  1699                           
  1700                           ;incstack = 0
  1701   000008  823E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1702   00000A  CFD9 F015          	movff	fsr2l,??_high_isr+2
  1703   00000E  CFDA F016          	movff	fsr2h,??_high_isr+3
  1704   000012  CFF3 F017          	movff	prodl,??_high_isr+4
  1705   000016  CFF4 F018          	movff	prodh,??_high_isr+5
  1706   00001A  CFF6 F019          	movff	tblptrl,??_high_isr+6
  1707   00001E  CFF7 F01A          	movff	tblptrh,??_high_isr+7
  1708   000022  CFF8 F01B          	movff	tblptru,??_high_isr+8
  1709   000026  CFF5 F01C          	movff	tablat,??_high_isr+9
  1710   00002A                     
  1711                           ;L07_main_serialCommunication.c: 60:     if (INTCON3bits.INT1IE && INTCON3bits.INT1IF){
  1712   00002A  A6F0               	btfss	240,3,c	;volatile
  1713   00002C  EF1A  F000         	goto	i2u188_41
  1714   000030  EF1C  F000         	goto	i2u188_40
  1715   000034                     i2u188_41:
  1716   000034  EF2B  F000         	goto	i2l98
  1717   000038                     i2u188_40:
  1718   000038  A0F0               	btfss	240,0,c	;volatile
  1719   00003A  EF21  F000         	goto	i2u189_41
  1720   00003E  EF23  F000         	goto	i2u189_40
  1721   000042                     i2u189_41:
  1722   000042  EF2B  F000         	goto	i2l98
  1723   000046                     i2u189_40:
  1724   000046                     
  1725                           ;L07_main_serialCommunication.c: 61:         INTCON3bits.INT1IF = 0;
  1726   000046  90F0               	bcf	240,0,c	;volatile
  1727   000048                     
  1728                           ;L07_main_serialCommunication.c: 63:         Write1USART('*');
  1729   000048  0E2A               	movlw	42
  1730   00004A  EC7D  F007         	call	i2_Write1USART
  1731   00004E  EFF8  F000         	goto	i2l99
  1732   000052                     i2l2140:
  1733                           
  1734                           ;L07_main_serialCommunication.c: 64:         return;
  1735   000052  EFF8  F000         	goto	i2l99
  1736   000056                     i2l98:
  1737                           
  1738                           ;L07_main_serialCommunication.c: 68:     if(PIE1bits.ADIE && PIR1bits.ADIF){
  1739   000056  AC9D               	btfss	157,6,c	;volatile
  1740   000058  EF30  F000         	goto	i2u190_41
  1741   00005C  EF32  F000         	goto	i2u190_40
  1742   000060                     i2u190_41:
  1743   000060  EF5F  F000         	goto	i2l100
  1744   000064                     i2u190_40:
  1745   000064  AC9E               	btfss	158,6,c	;volatile
  1746   000066  EF37  F000         	goto	i2u191_41
  1747   00006A  EF39  F000         	goto	i2u191_40
  1748   00006E                     i2u191_41:
  1749   00006E  EF5F  F000         	goto	i2l100
  1750   000072                     i2u191_40:
  1751   000072                     
  1752                           ;L07_main_serialCommunication.c: 69:         PIR1bits.ADIF = 0;
  1753   000072  9C9E               	bcf	158,6,c	;volatile
  1754   000074                     
  1755                           ;L07_main_serialCommunication.c: 71:         unsigned int val = (unsigned int) ((unsigne
      +                          d long)ADRES * 4750) / 1023;
  1756   000074  CFC3 F001          	movff	4035,___wmul@multiplier
  1757   000078  CFC4 F002          	movff	4036,___wmul@multiplier+1
  1758   00007C  0E12               	movlw	18
  1759   00007E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1760   000080  0E8E               	movlw	142
  1761   000082  6E03               	movwf	___wmul@multiplicand^0,c
  1762   000084  ECA5  F007         	call	___wmul	;wreg free
  1763   000088  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1764   00008C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1765   000090  0E03               	movlw	3
  1766   000092  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1767   000094  6809               	setf	___lwdiv@divisor^0,c
  1768   000096  EC8E  F004         	call	___lwdiv	;wreg free
  1769   00009A  C007  F01D         	movff	?___lwdiv,high_isr@val
  1770   00009E  C008  F01E         	movff	?___lwdiv+1,high_isr@val+1
  1771   0000A2                     
  1772                           ;L07_main_serialCommunication.c: 73:         adc_to_LCD(val);
  1773   0000A2  C01D  F010         	movff	high_isr@val,adc_to_LCD@val
  1774   0000A6  C01E  F011         	movff	high_isr@val+1,adc_to_LCD@val+1
  1775   0000AA  EC6B  F006         	call	_adc_to_LCD	;wreg free
  1776   0000AE                     
  1777                           ;L07_main_serialCommunication.c: 75:         writeValToUSART(val);
  1778   0000AE  C01D  F00E         	movff	high_isr@val,writeValToUSART@val
  1779   0000B2  C01E  F00F         	movff	high_isr@val+1,writeValToUSART@val+1
  1780   0000B6  EC54  F004         	call	_writeValToUSART	;wreg free
  1781   0000BA  EFF8  F000         	goto	i2l99
  1782   0000BE                     i2l100:
  1783                           
  1784                           ;L07_main_serialCommunication.c: 80:     if(PIE1bits.RC1IE && PIR1bits.RCIF){
  1785   0000BE  AA9D               	btfss	157,5,c	;volatile
  1786   0000C0  EF64  F000         	goto	i2u192_41
  1787   0000C4  EF66  F000         	goto	i2u192_40
  1788   0000C8                     i2u192_41:
  1789   0000C8  EFF8  F000         	goto	i2l99
  1790   0000CC                     i2u192_40:
  1791   0000CC  AA9E               	btfss	158,5,c	;volatile
  1792   0000CE  EF6B  F000         	goto	i2u193_41
  1793   0000D2  EF6D  F000         	goto	i2u193_40
  1794   0000D6                     i2u193_41:
  1795   0000D6  EFF8  F000         	goto	i2l99
  1796   0000DA                     i2u193_40:
  1797   0000DA                     
  1798                           ;L07_main_serialCommunication.c: 82:         char data = Read1USART();
  1799   0000DA  EC96  F006         	call	_Read1USART	;wreg free
  1800   0000DE  6E1F               	movwf	high_isr@data^0,c
  1801   0000E0                     
  1802                           ;L07_main_serialCommunication.c: 84:         if(!state_text_mode){
  1803   0000E0  5036               	movf	_state_text_mode^0,w,c
  1804   0000E2  A4D8               	btfss	status,2,c
  1805   0000E4  EF76  F000         	goto	i2u194_41
  1806   0000E8  EF78  F000         	goto	i2u194_40
  1807   0000EC                     i2u194_41:
  1808   0000EC  EFCC  F000         	goto	i2l2188
  1809   0000F0                     i2u194_40:
  1810   0000F0  EFAB  F000         	goto	i2l2186
  1811   0000F4                     i2l2162:
  1812                           
  1813                           ;L07_main_serialCommunication.c: 88:                 sendStatus('A');
  1814   0000F4  0E41               	movlw	65
  1815   0000F6  EC53  F007         	call	_sendStatus
  1816   0000FA                     
  1817                           ;L07_main_serialCommunication.c: 90:                 LATBbits.LATB5 = 0;
  1818   0000FA  9A8A               	bcf	138,5,c	;volatile
  1819   0000FC                     
  1820                           ;L07_main_serialCommunication.c: 92:                 state_text_mode = 1;
  1821   0000FC  0E01               	movlw	1
  1822   0000FE  6E36               	movwf	_state_text_mode^0,c
  1823   000100                     
  1824                           ;L07_main_serialCommunication.c: 94:                 text_mode_column = 0;
  1825   000100  0E00               	movlw	0
  1826   000102  6E35               	movwf	_text_mode_column^0,c
  1827   000104                     i2l2170:
  1828   000104  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  1829   000108  0900               	iorlw	0
  1830   00010A  A4D8               	btfss	status,2,c
  1831   00010C  EF8A  F000         	goto	i2u195_41
  1832   000110  EF8C  F000         	goto	i2u195_40
  1833   000114                     i2u195_41:
  1834   000114  EF82  F000         	goto	i2l2170
  1835   000118                     i2u195_40:
  1836   000118  9A89               	bcf	137,5,c	;volatile
  1837   00011A  0E01               	movlw	1
  1838   00011C  ECD5  F005         	call	i2_LCD_Write
  1839   000120  0E07               	movlw	7
  1840   000122  6E13               	movwf	??_high_isr^0,c
  1841   000124  0E7D               	movlw	125
  1842   000126                     i2u208_47:
  1843   000126  2EE8               	decfsz	wreg,f,c
  1844   000128  D7FE               	bra	i2u208_47
  1845   00012A  2E13               	decfsz	??_high_isr^0,f,c
  1846   00012C  D7FC               	bra	i2u208_47
  1847   00012E  F000               	nop	
  1848                           
  1849                           ;L07_main_serialCommunication.c: 96:                 break;
  1850   000130  EFF8  F000         	goto	i2l99
  1851   000134                     i2l2176:
  1852                           
  1853                           ;L07_main_serialCommunication.c: 98:                 sendStatus('A');
  1854   000134  0E41               	movlw	65
  1855   000136  EC53  F007         	call	_sendStatus
  1856   00013A                     
  1857                           ;L07_main_serialCommunication.c: 100:                 ADCON0bits.GO = 1;
  1858   00013A  82C2               	bsf	194,1,c	;volatile
  1859                           
  1860                           ;L07_main_serialCommunication.c: 101:                 break;
  1861   00013C  EFF8  F000         	goto	i2l99
  1862   000140                     i2l2180:
  1863                           
  1864                           ;L07_main_serialCommunication.c: 103:                 sendStatus('A');
  1865   000140  0E41               	movlw	65
  1866   000142  EC53  F007         	call	_sendStatus
  1867   000146                     
  1868                           ;L07_main_serialCommunication.c: 105:                 LATB3 ^= 1;
  1869   000146  768A               	btg	3978,3,c	;volatile
  1870                           
  1871                           ;L07_main_serialCommunication.c: 106:                 break;
  1872   000148  EFF8  F000         	goto	i2l99
  1873   00014C                     i2l2184:
  1874                           
  1875                           ;L07_main_serialCommunication.c: 113:                 sendStatus('X');
  1876   00014C  0E58               	movlw	88
  1877   00014E  EC53  F007         	call	_sendStatus
  1878                           
  1879                           ;L07_main_serialCommunication.c: 114:             }
  1880   000152  EFF8  F000         	goto	i2l99
  1881   000156                     i2l2186:
  1882   000156  501F               	movf	high_isr@data^0,w,c
  1883   000158  6E13               	movwf	??_high_isr^0,c
  1884   00015A  6A14               	clrf	(??_high_isr+1)^0,c
  1885                           
  1886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1887                           ; Switch size 1, requested type "simple"
  1888                           ; Number of cases is 1, Range of values is 0 to 0
  1889                           ; switch strategies available:
  1890                           ; Name         Instructions Cycles
  1891                           ; simple_byte            4     3 (average)
  1892                           ;	Chosen strategy is simple_byte
  1893   00015C  5014               	movf	(??_high_isr+1)^0,w,c
  1894   00015E  0A00               	xorlw	0	; case 0
  1895   000160  B4D8               	btfsc	status,2,c
  1896   000162  EFB5  F000         	goto	i2l2228
  1897   000166  EFA6  F000         	goto	i2l2184
  1898   00016A                     i2l2228:
  1899                           
  1900                           ; Switch size 1, requested type "simple"
  1901                           ; Number of cases is 5, Range of values is 10 to 116
  1902                           ; switch strategies available:
  1903                           ; Name         Instructions Cycles
  1904                           ; simple_byte           16     9 (average)
  1905                           ;	Chosen strategy is simple_byte
  1906   00016A  5013               	movf	??_high_isr^0,w,c
  1907   00016C  0A0A               	xorlw	10	; case 10
  1908   00016E  B4D8               	btfsc	status,2,c
  1909   000170  EF29  F000         	goto	i2l2140
  1910   000174  0A07               	xorlw	7	; case 13
  1911   000176  B4D8               	btfsc	status,2,c
  1912   000178  EFF8  F000         	goto	i2l99
  1913   00017C  0A6C               	xorlw	108	; case 97
  1914   00017E  B4D8               	btfsc	status,2,c
  1915   000180  EF9A  F000         	goto	i2l2176
  1916   000184  0A0D               	xorlw	13	; case 108
  1917   000186  B4D8               	btfsc	status,2,c
  1918   000188  EFA0  F000         	goto	i2l2180
  1919   00018C  0A18               	xorlw	24	; case 116
  1920   00018E  B4D8               	btfsc	status,2,c
  1921   000190  EF7A  F000         	goto	i2l2162
  1922   000194  EFA6  F000         	goto	i2l2184
  1923   000198                     i2l2188:
  1924                           
  1925                           ;L07_main_serialCommunication.c: 118:             if(data != 0){
  1926   000198  501F               	movf	high_isr@data^0,w,c
  1927   00019A  B4D8               	btfsc	status,2,c
  1928   00019C  EFD2  F000         	goto	i2u196_41
  1929   0001A0  EFD4  F000         	goto	i2u196_40
  1930   0001A4                     i2u196_41:
  1931   0001A4  EFD7  F000         	goto	i2l2192
  1932   0001A8                     i2u196_40:
  1933   0001A8                     
  1934                           ;L07_main_serialCommunication.c: 120:                 append_sign_to_LCD(data);
  1935   0001A8  501F               	movf	high_isr@data^0,w,c
  1936   0001AA  EC91  F007         	call	_append_sign_to_LCD
  1937   0001AE                     i2l2192:
  1938                           
  1939                           ;L07_main_serialCommunication.c: 122:             if (data == 0){
  1940   0001AE  501F               	movf	high_isr@data^0,w,c
  1941   0001B0  A4D8               	btfss	status,2,c
  1942   0001B2  EFDD  F000         	goto	i2u197_41
  1943   0001B6  EFDF  F000         	goto	i2u197_40
  1944   0001BA                     i2u197_41:
  1945   0001BA  EFF8  F000         	goto	i2l99
  1946   0001BE                     i2u197_40:
  1947   0001BE                     
  1948                           ;L07_main_serialCommunication.c: 124:                 state_text_mode = 0;
  1949   0001BE  0E00               	movlw	0
  1950   0001C0  6E36               	movwf	_state_text_mode^0,c
  1951   0001C2                     i2l2196:
  1952   0001C2  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  1953   0001C6  0900               	iorlw	0
  1954   0001C8  A4D8               	btfss	status,2,c
  1955   0001CA  EFE9  F000         	goto	i2u198_41
  1956   0001CE  EFEB  F000         	goto	i2u198_40
  1957   0001D2                     i2u198_41:
  1958   0001D2  EFE1  F000         	goto	i2l2196
  1959   0001D6                     i2u198_40:
  1960   0001D6  9A89               	bcf	137,5,c	;volatile
  1961   0001D8  0E01               	movlw	1
  1962   0001DA  ECD5  F005         	call	i2_LCD_Write
  1963   0001DE  0E07               	movlw	7
  1964   0001E0  6E13               	movwf	??_high_isr^0,c
  1965   0001E2  0E7D               	movlw	125
  1966   0001E4                     i2u209_47:
  1967   0001E4  2EE8               	decfsz	wreg,f,c
  1968   0001E6  D7FE               	bra	i2u209_47
  1969   0001E8  2E13               	decfsz	??_high_isr^0,f,c
  1970   0001EA  D7FC               	bra	i2u209_47
  1971   0001EC  F000               	nop	
  1972   0001EE                     
  1973                           ;L07_main_serialCommunication.c: 126:                 LATBbits.LATB5 = 1;
  1974   0001EE  8A8A               	bsf	138,5,c	;volatile
  1975   0001F0                     i2l99:
  1976   0001F0  C01C  FFF5         	movff	??_high_isr+9,tablat
  1977   0001F4  C01B  FFF8         	movff	??_high_isr+8,tblptru
  1978   0001F8  C01A  FFF7         	movff	??_high_isr+7,tblptrh
  1979   0001FC  C019  FFF6         	movff	??_high_isr+6,tblptrl
  1980   000200  C018  FFF4         	movff	??_high_isr+5,prodh
  1981   000204  C017  FFF3         	movff	??_high_isr+4,prodl
  1982   000208  C016  FFDA         	movff	??_high_isr+3,fsr2h
  1983   00020C  C015  FFD9         	movff	??_high_isr+2,fsr2l
  1984   000210  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1985   000212  0011               	retfie		f
  1986   000214                     __end_of_high_isr:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _writeValToUSART *****************
  1990 ;; Defined at:
  1991 ;;		line 176 in file "L07_main_serialCommunication.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  val             2   13[COMRAM] unsigned int 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  c               1   15[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2005 ;;      Params:         2       0       0       0
  2006 ;;      Locals:         1       0       0       0
  2007 ;;      Temps:          0       0       0       0
  2008 ;;      Totals:         3       0       0       0
  2009 ;;Total ram usage:        3 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 1
  2012 ;; This function calls:
  2013 ;;		___lwdiv
  2014 ;;		___lwmod
  2015 ;;		i2_Write1USART
  2016 ;; This function is called by:
  2017 ;;		_high_isr
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text12
  2022   0008A8                     __ptext12:
  2023                           	callstack 0
  2024   0008A8                     _writeValToUSART:
  2025                           	callstack 25
  2026   0008A8                     i2l2090:
  2027                           
  2028                           ;L07_main_serialCommunication.c: 179:         c = val % 10;
  2029   0008A8  C00E  F001         	movff	writeValToUSART@val,___lwmod@dividend
  2030   0008AC  C00F  F002         	movff	writeValToUSART@val+1,___lwmod@dividend+1
  2031   0008B0  0E00               	movlw	0
  2032   0008B2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2033   0008B4  0E0A               	movlw	10
  2034   0008B6  6E03               	movwf	___lwmod@divisor^0,c
  2035   0008B8  EC08  F006         	call	___lwmod	;wreg free
  2036   0008BC  5001               	movf	?___lwmod^0,w,c
  2037   0008BE  6E10               	movwf	writeValToUSART@c^0,c
  2038   0008C0                     
  2039                           ;L07_main_serialCommunication.c: 180:         val /= 10;
  2040   0008C0  C00E  F007         	movff	writeValToUSART@val,___lwdiv@dividend
  2041   0008C4  C00F  F008         	movff	writeValToUSART@val+1,___lwdiv@dividend+1
  2042   0008C8  0E00               	movlw	0
  2043   0008CA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2044   0008CC  0E0A               	movlw	10
  2045   0008CE  6E09               	movwf	___lwdiv@divisor^0,c
  2046   0008D0  EC8E  F004         	call	___lwdiv	;wreg free
  2047   0008D4  C007  F00E         	movff	?___lwdiv,writeValToUSART@val
  2048   0008D8  C008  F00F         	movff	?___lwdiv+1,writeValToUSART@val+1
  2049   0008DC                     
  2050                           ;L07_main_serialCommunication.c: 181:         c += '0';
  2051   0008DC  0E30               	movlw	48
  2052   0008DE  2610               	addwf	writeValToUSART@c^0,f,c
  2053   0008E0                     i2l146:
  2054   0008E0  A2AC               	btfss	172,1,c	;volatile
  2055   0008E2  EF75  F004         	goto	i2u181_41
  2056   0008E6  EF77  F004         	goto	i2u181_40
  2057   0008EA                     i2u181_41:
  2058   0008EA  EF70  F004         	goto	i2l146
  2059   0008EE                     i2u181_40:
  2060   0008EE                     
  2061                           ;L07_main_serialCommunication.c: 183:         Write1USART(c);
  2062   0008EE  5010               	movf	writeValToUSART@c^0,w,c
  2063   0008F0  EC7D  F007         	call	i2_Write1USART
  2064   0008F4                     
  2065                           ;L07_main_serialCommunication.c: 184:     } while (val!=0);
  2066   0008F4  500E               	movf	writeValToUSART@val^0,w,c
  2067   0008F6  100F               	iorwf	(writeValToUSART@val+1)^0,w,c
  2068   0008F8  A4D8               	btfss	status,2,c
  2069   0008FA  EF81  F004         	goto	i2u182_41
  2070   0008FE  EF83  F004         	goto	i2u182_40
  2071   000902                     i2u182_41:
  2072   000902  EF54  F004         	goto	i2l2090
  2073   000906                     i2u182_40:
  2074   000906                     i2l150:
  2075   000906  A2AC               	btfss	172,1,c	;volatile
  2076   000908  EF88  F004         	goto	i2u183_41
  2077   00090C  EF8A  F004         	goto	i2u183_40
  2078   000910                     i2u183_41:
  2079   000910  EF83  F004         	goto	i2l150
  2080   000914                     i2u183_40:
  2081   000914                     
  2082                           ;L07_main_serialCommunication.c: 186:     Write1USART('\r');
  2083   000914  0E0D               	movlw	13
  2084   000916  EC7D  F007         	call	i2_Write1USART
  2085   00091A  0012               	return		;funcret
  2086   00091C                     __end_of_writeValToUSART:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function ___lwmod *****************
  2090 ;; Defined at:
  2091 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  dividend        2    0[COMRAM] unsigned int 
  2094 ;;  divisor         2    2[COMRAM] unsigned int 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  counter         1    4[COMRAM] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2    0[COMRAM] unsigned int 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2106 ;;      Params:         4       0       0       0
  2107 ;;      Locals:         1       0       0       0
  2108 ;;      Temps:          0       0       0       0
  2109 ;;      Totals:         5       0       0       0
  2110 ;;Total ram usage:        5 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_writeValToUSART
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text13
  2120   000C10                     __ptext13:
  2121                           	callstack 0
  2122   000C10                     ___lwmod:
  2123                           	callstack 25
  2124   000C10  5003               	movf	___lwmod@divisor^0,w,c
  2125   000C12  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2126   000C14  B4D8               	btfsc	status,2,c
  2127   000C16  EF0F  F006         	goto	i2u170_41
  2128   000C1A  EF11  F006         	goto	i2u170_40
  2129   000C1E                     i2u170_41:
  2130   000C1E  EF35  F006         	goto	i2l856
  2131   000C22                     i2u170_40:
  2132   000C22  0E01               	movlw	1
  2133   000C24  6E05               	movwf	___lwmod@counter^0,c
  2134   000C26  EF19  F006         	goto	i2l1992
  2135   000C2A                     i2l1990:
  2136   000C2A  90D8               	bcf	status,0,c
  2137   000C2C  3603               	rlcf	___lwmod@divisor^0,f,c
  2138   000C2E  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2139   000C30  2A05               	incf	___lwmod@counter^0,f,c
  2140   000C32                     i2l1992:
  2141   000C32  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2142   000C34  EF1E  F006         	goto	i2u171_41
  2143   000C38  EF20  F006         	goto	i2u171_40
  2144   000C3C                     i2u171_41:
  2145   000C3C  EF15  F006         	goto	i2l1990
  2146   000C40                     i2u171_40:
  2147   000C40                     i2l1994:
  2148   000C40  5003               	movf	___lwmod@divisor^0,w,c
  2149   000C42  5C01               	subwf	___lwmod@dividend^0,w,c
  2150   000C44  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2151   000C46  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2152   000C48  A0D8               	btfss	status,0,c
  2153   000C4A  EF29  F006         	goto	i2u172_41
  2154   000C4E  EF2B  F006         	goto	i2u172_40
  2155   000C52                     i2u172_41:
  2156   000C52  EF2F  F006         	goto	i2l1998
  2157   000C56                     i2u172_40:
  2158   000C56  5003               	movf	___lwmod@divisor^0,w,c
  2159   000C58  5E01               	subwf	___lwmod@dividend^0,f,c
  2160   000C5A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2161   000C5C  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2162   000C5E                     i2l1998:
  2163   000C5E  90D8               	bcf	status,0,c
  2164   000C60  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2165   000C62  3203               	rrcf	___lwmod@divisor^0,f,c
  2166   000C64  2E05               	decfsz	___lwmod@counter^0,f,c
  2167   000C66  EF20  F006         	goto	i2l1994
  2168   000C6A                     i2l856:
  2169   000C6A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2170   000C6E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2171   000C72  0012               	return		;funcret
  2172   000C74                     __end_of___lwmod:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function ___lwdiv *****************
  2176 ;; Defined at:
  2177 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  dividend        2    6[COMRAM] unsigned int 
  2180 ;;  divisor         2    8[COMRAM] unsigned int 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  quotient        2   10[COMRAM] unsigned int 
  2183 ;;  counter         1   12[COMRAM] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  2    6[COMRAM] unsigned int 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2193 ;;      Params:         4       0       0       0
  2194 ;;      Locals:         3       0       0       0
  2195 ;;      Temps:          0       0       0       0
  2196 ;;      Totals:         7       0       0       0
  2197 ;;Total ram usage:        7 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_high_isr
  2203 ;;		_writeValToUSART
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text14
  2208   00091C                     __ptext14:
  2209                           	callstack 0
  2210   00091C                     ___lwdiv:
  2211                           	callstack 25
  2212   00091C  0E00               	movlw	0
  2213   00091E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2214   000920  0E00               	movlw	0
  2215   000922  6E0B               	movwf	___lwdiv@quotient^0,c
  2216   000924  5009               	movf	___lwdiv@divisor^0,w,c
  2217   000926  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2218   000928  B4D8               	btfsc	status,2,c
  2219   00092A  EF99  F004         	goto	i2u167_41
  2220   00092E  EF9B  F004         	goto	i2u167_40
  2221   000932                     i2u167_41:
  2222   000932  EFC3  F004         	goto	i2l846
  2223   000936                     i2u167_40:
  2224   000936  0E01               	movlw	1
  2225   000938  6E0D               	movwf	___lwdiv@counter^0,c
  2226   00093A  EFA3  F004         	goto	i2l1972
  2227   00093E                     i2l1970:
  2228   00093E  90D8               	bcf	status,0,c
  2229   000940  3609               	rlcf	___lwdiv@divisor^0,f,c
  2230   000942  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2231   000944  2A0D               	incf	___lwdiv@counter^0,f,c
  2232   000946                     i2l1972:
  2233   000946  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2234   000948  EFA8  F004         	goto	i2u168_41
  2235   00094C  EFAA  F004         	goto	i2u168_40
  2236   000950                     i2u168_41:
  2237   000950  EF9F  F004         	goto	i2l1970
  2238   000954                     i2u168_40:
  2239   000954                     i2l1974:
  2240   000954  90D8               	bcf	status,0,c
  2241   000956  360B               	rlcf	___lwdiv@quotient^0,f,c
  2242   000958  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2243   00095A  5009               	movf	___lwdiv@divisor^0,w,c
  2244   00095C  5C07               	subwf	___lwdiv@dividend^0,w,c
  2245   00095E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2246   000960  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2247   000962  A0D8               	btfss	status,0,c
  2248   000964  EFB6  F004         	goto	i2u169_41
  2249   000968  EFB8  F004         	goto	i2u169_40
  2250   00096C                     i2u169_41:
  2251   00096C  EFBD  F004         	goto	i2l1982
  2252   000970                     i2u169_40:
  2253   000970  5009               	movf	___lwdiv@divisor^0,w,c
  2254   000972  5E07               	subwf	___lwdiv@dividend^0,f,c
  2255   000974  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2256   000976  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2257   000978  800B               	bsf	___lwdiv@quotient^0,0,c
  2258   00097A                     i2l1982:
  2259   00097A  90D8               	bcf	status,0,c
  2260   00097C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2261   00097E  3209               	rrcf	___lwdiv@divisor^0,f,c
  2262   000980  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2263   000982  EFAA  F004         	goto	i2l1974
  2264   000986                     i2l846:
  2265   000986  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2266   00098A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2267   00098E  0012               	return		;funcret
  2268   000990                     __end_of___lwdiv:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function _sendStatus *****************
  2272 ;; Defined at:
  2273 ;;		line 132 in file "L07_main_serialCommunication.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  status          1    wreg     unsigned char 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  status          1    1[COMRAM] unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  1    wreg      void 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2287 ;;      Params:         0       0       0       0
  2288 ;;      Locals:         1       0       0       0
  2289 ;;      Temps:          0       0       0       0
  2290 ;;      Totals:         1       0       0       0
  2291 ;;Total ram usage:        1 bytes
  2292 ;; Hardware stack levels used: 1
  2293 ;; Hardware stack levels required when called: 1
  2294 ;; This function calls:
  2295 ;;		i2_Write1USART
  2296 ;; This function is called by:
  2297 ;;		_high_isr
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           	psect	text15
  2302   000EA6                     __ptext15:
  2303                           	callstack 0
  2304   000EA6                     _sendStatus:
  2305                           	callstack 25
  2306                           
  2307                           ;incstack = 0
  2308                           ;sendStatus@status stored from wreg
  2309   000EA6  6E02               	movwf	sendStatus@status^0,c
  2310   000EA8                     i2l122:
  2311   000EA8  A2AC               	btfss	172,1,c	;volatile
  2312   000EAA  EF59  F007         	goto	i2u184_41
  2313   000EAE  EF5B  F007         	goto	i2u184_40
  2314   000EB2                     i2u184_41:
  2315   000EB2  EF54  F007         	goto	i2l122
  2316   000EB6                     i2u184_40:
  2317   000EB6                     
  2318                           ;L07_main_serialCommunication.c: 136:     Write1USART(status);
  2319   000EB6  5002               	movf	sendStatus@status^0,w,c
  2320   000EB8  EC7D  F007         	call	i2_Write1USART
  2321   000EBC                     i2l125:
  2322   000EBC  A2AC               	btfss	172,1,c	;volatile
  2323   000EBE  EF63  F007         	goto	i2u185_41
  2324   000EC2  EF65  F007         	goto	i2u185_40
  2325   000EC6                     i2u185_41:
  2326   000EC6  EF5E  F007         	goto	i2l125
  2327   000ECA                     i2u185_40:
  2328   000ECA                     
  2329                           ;L07_main_serialCommunication.c: 140:     Write1USART('\r');
  2330   000ECA  0E0D               	movlw	13
  2331   000ECC  EC7D  F007         	call	i2_Write1USART
  2332   000ED0  0012               	return		;funcret
  2333   000ED2                     __end_of_sendStatus:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function i2_Write1USART *****************
  2337 ;; Defined at:
  2338 ;;		line 84 in file "../../Libraries/PLIB_USART.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  data            1    wreg     unsigned char 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  data            1    0[COMRAM] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2352 ;;      Params:         0       0       0       0
  2353 ;;      Locals:         1       0       0       0
  2354 ;;      Temps:          0       0       0       0
  2355 ;;      Totals:         1       0       0       0
  2356 ;;Total ram usage:        1 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_high_isr
  2362 ;;		_sendStatus
  2363 ;;		_writeValToUSART
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text16
  2368   000EFA                     __ptext16:
  2369                           	callstack 0
  2370   000EFA                     i2_Write1USART:
  2371                           	callstack 26
  2372                           
  2373                           ;incstack = 0
  2374                           ;i2Write1USART@data stored from wreg
  2375   000EFA  6E01               	movwf	i2Write1USART@data^0,c
  2376   000EFC                     
  2377                           ;../../Libraries/PLIB_USART.c: 85:     if (TXSTA1bits.TX9)
  2378   000EFC  ACAC               	btfss	172,6,c	;volatile
  2379   000EFE  EF83  F007         	goto	i2u176_41
  2380   000F02  EF85  F007         	goto	i2u176_40
  2381   000F06                     i2u176_41:
  2382   000F06  EF8E  F007         	goto	i2l2022
  2383   000F0A                     i2u176_40:
  2384   000F0A                     
  2385                           ;../../Libraries/PLIB_USART.c: 86:     {;../../Libraries/PLIB_USART.c: 87:         TXSTA
      +                          1bits.TX9D = 0;
  2386   000F0A  90AC               	bcf	172,0,c	;volatile
  2387                           
  2388                           ;../../Libraries/PLIB_USART.c: 88:         if (USART1_Status.TX_NINE)
  2389   000F0C  A233               	btfss	_USART1_Status^0,1,c
  2390   000F0E  EF8B  F007         	goto	i2u177_41
  2391   000F12  EF8D  F007         	goto	i2u177_40
  2392   000F16                     i2u177_41:
  2393   000F16  EF8E  F007         	goto	i2l2022
  2394   000F1A                     i2u177_40:
  2395   000F1A                     
  2396                           ;../../Libraries/PLIB_USART.c: 89:             TXSTA1bits.TX9D = 1;
  2397   000F1A  80AC               	bsf	172,0,c	;volatile
  2398   000F1C                     i2l2022:
  2399                           
  2400                           ;../../Libraries/PLIB_USART.c: 92:     TXREG1 = data;
  2401   000F1C  C001  FFAD         	movff	i2Write1USART@data,4013	;volatile
  2402   000F20  0012               	return		;funcret
  2403   000F22                     __end_ofi2_Write1USART:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _append_sign_to_LCD *****************
  2407 ;; Defined at:
  2408 ;;		line 153 in file "L07_main_serialCommunication.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  data            1    wreg     unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  data            1    5[COMRAM] unsigned char 
  2413 ;;  tempstr         2    6[COMRAM] unsigned char [2]
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2423 ;;      Params:         0       0       0       0
  2424 ;;      Locals:         3       0       0       0
  2425 ;;      Temps:          0       0       0       0
  2426 ;;      Totals:         3       0       0       0
  2427 ;;Total ram usage:        3 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 2
  2430 ;; This function calls:
  2431 ;;		i2_LCD_TextOut
  2432 ;; This function is called by:
  2433 ;;		_high_isr
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text17
  2438   000F22                     __ptext17:
  2439                           	callstack 0
  2440   000F22                     _append_sign_to_LCD:
  2441                           	callstack 24
  2442                           
  2443                           ;incstack = 0
  2444                           ;append_sign_to_LCD@data stored from wreg
  2445   000F22  6E06               	movwf	append_sign_to_LCD@data^0,c
  2446   000F24                     
  2447                           ;L07_main_serialCommunication.c: 155:         char tempstr[] = {data,'\0'};
  2448   000F24  C031  F007         	movff	append_sign_to_LCD@F5825,append_sign_to_LCD@tempstr
  2449   000F28  C032  F008         	movff	append_sign_to_LCD@F5825+1,append_sign_to_LCD@tempstr+1
  2450   000F2C  C006  F007         	movff	append_sign_to_LCD@data,append_sign_to_LCD@tempstr
  2451   000F30  0E00               	movlw	0
  2452   000F32  6E08               	movwf	(append_sign_to_LCD@tempstr+1)^0,c
  2453   000F34                     
  2454                           ;L07_main_serialCommunication.c: 156:         LCD_TextOut(1,text_mode_column,tempstr);
  2455   000F34  C035  F002         	movff	_text_mode_column,i2LCD_TextOut@col
  2456   000F38  0E07               	movlw	low append_sign_to_LCD@tempstr
  2457   000F3A  6E03               	movwf	i2LCD_TextOut@text^0,c
  2458   000F3C  0E00               	movlw	high append_sign_to_LCD@tempstr
  2459   000F3E  6E04               	movwf	(i2LCD_TextOut@text+1)^0,c
  2460   000F40  0E01               	movlw	1
  2461   000F42  EC37  F005         	call	i2_LCD_TextOut
  2462   000F46                     
  2463                           ;L07_main_serialCommunication.c: 157:         text_mode_column++;
  2464   000F46  2A35               	incf	_text_mode_column^0,f,c
  2465   000F48  0012               	return		;funcret
  2466   000F4A                     __end_of_append_sign_to_LCD:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function i2_LCD_TextOut *****************
  2470 ;; Defined at:
  2471 ;;		line 174 in file "../../Libraries/LCD_library.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  row             1    wreg     unsigned char 
  2474 ;;  col             1    1[COMRAM] unsigned char 
  2475 ;;  text            2    2[COMRAM] PTR unsigned char 
  2476 ;;		 -> append_sign_to_LCD@tempstr(2), main@text(7), 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  row             1    4[COMRAM] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2488 ;;      Params:         3       0       0       0
  2489 ;;      Locals:         1       0       0       0
  2490 ;;      Temps:          0       0       0       0
  2491 ;;      Totals:         4       0       0       0
  2492 ;;Total ram usage:        4 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 1
  2495 ;; This function calls:
  2496 ;;		i2_LCD_Busy
  2497 ;;		i2_LCD_Write
  2498 ;; This function is called by:
  2499 ;;		_append_sign_to_LCD
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text18
  2504   000A6E                     __ptext18:
  2505                           	callstack 0
  2506   000A6E                     i2_LCD_TextOut:
  2507                           	callstack 24
  2508                           
  2509                           ;incstack = 0
  2510                           ;i2LCD_TextOut@row stored from wreg
  2511   000A6E  6E05               	movwf	i2LCD_TextOut@row^0,c
  2512   000A70                     i2l2004:
  2513   000A70  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2514   000A74  0900               	iorlw	0
  2515   000A76  A4D8               	btfss	status,2,c
  2516   000A78  EF40  F005         	goto	i2u173_41
  2517   000A7C  EF42  F005         	goto	i2u173_40
  2518   000A80                     i2u173_41:
  2519   000A80  EF38  F005         	goto	i2l2004
  2520   000A84                     i2u173_40:
  2521   000A84  9A89               	bcf	137,5,c	;volatile
  2522   000A86  5005               	movf	i2LCD_TextOut@row^0,w,c
  2523   000A88  0D40               	mullw	64
  2524   000A8A  50F3               	movf	243,w,c
  2525   000A8C  2402               	addwf	i2LCD_TextOut@col^0,w,c
  2526   000A8E  0F80               	addlw	128
  2527   000A90  ECD5  F005         	call	i2_LCD_Write
  2528                           
  2529                           ;../../Libraries/LCD_library.c: 177:     while (*text) {
  2530   000A94  EF60  F005         	goto	i2l2014
  2531   000A98                     i2l2008:
  2532   000A98  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2533   000A9C  0900               	iorlw	0
  2534   000A9E  A4D8               	btfss	status,2,c
  2535   000AA0  EF54  F005         	goto	i2u174_41
  2536   000AA4  EF56  F005         	goto	i2u174_40
  2537   000AA8                     i2u174_41:
  2538   000AA8  EF4C  F005         	goto	i2l2008
  2539   000AAC                     i2u174_40:
  2540   000AAC  8A89               	bsf	137,5,c	;volatile
  2541   000AAE  C003  FFD9         	movff	i2LCD_TextOut@text,fsr2l
  2542   000AB2  C004  FFDA         	movff	i2LCD_TextOut@text+1,fsr2h
  2543   000AB6  50DF               	movf	indf2,w,c
  2544   000AB8  ECD5  F005         	call	i2_LCD_Write
  2545   000ABC                     
  2546                           ;../../Libraries/LCD_library.c: 179:         text++;
  2547   000ABC  4A03               	infsnz	i2LCD_TextOut@text^0,f,c
  2548   000ABE  2A04               	incf	(i2LCD_TextOut@text+1)^0,f,c
  2549   000AC0                     i2l2014:
  2550                           
  2551                           ;../../Libraries/LCD_library.c: 177:     while (*text) {
  2552   000AC0  C003  FFD9         	movff	i2LCD_TextOut@text,fsr2l
  2553   000AC4  C004  FFDA         	movff	i2LCD_TextOut@text+1,fsr2h
  2554   000AC8  50DF               	movf	indf2,w,c
  2555   000ACA  A4D8               	btfss	status,2,c
  2556   000ACC  EF6A  F005         	goto	i2u175_41
  2557   000AD0  EF6C  F005         	goto	i2u175_40
  2558   000AD4                     i2u175_41:
  2559   000AD4  EF4C  F005         	goto	i2l2008
  2560   000AD8                     i2u175_40:
  2561   000AD8  0012               	return		;funcret
  2562   000ADA                     __end_ofi2_LCD_TextOut:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _adc_to_LCD *****************
  2566 ;; Defined at:
  2567 ;;		line 164 in file "L07_main_serialCommunication.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  val             2   15[COMRAM] unsigned int 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2581 ;;      Params:         2       0       0       0
  2582 ;;      Locals:         0       0       0       0
  2583 ;;      Temps:          1       0       0       0
  2584 ;;      Totals:         3       0       0       0
  2585 ;;Total ram usage:        3 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 2
  2588 ;; This function calls:
  2589 ;;		_LCD_ConstTextOut
  2590 ;;		_LCD_ValueOut_00
  2591 ;;		i2_LCD_Busy
  2592 ;;		i2_LCD_Write
  2593 ;; This function is called by:
  2594 ;;		_high_isr
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text19
  2599   000CD6                     __ptext19:
  2600                           	callstack 0
  2601   000CD6                     _adc_to_LCD:
  2602                           	callstack 24
  2603   000CD6                     i2l2078:
  2604   000CD6  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2605   000CDA  0900               	iorlw	0
  2606   000CDC  A4D8               	btfss	status,2,c
  2607   000CDE  EF73  F006         	goto	i2u180_41
  2608   000CE2  EF75  F006         	goto	i2u180_40
  2609   000CE6                     i2u180_41:
  2610   000CE6  EF6B  F006         	goto	i2l2078
  2611   000CEA                     i2u180_40:
  2612   000CEA  9A89               	bcf	137,5,c	;volatile
  2613   000CEC  0E01               	movlw	1
  2614   000CEE  ECD5  F005         	call	i2_LCD_Write
  2615   000CF2  0E07               	movlw	7
  2616   000CF4  6E12               	movwf	??_adc_to_LCD^0,c
  2617   000CF6  0E7D               	movlw	125
  2618   000CF8                     i2u210_47:
  2619   000CF8  2EE8               	decfsz	wreg,f,c
  2620   000CFA  D7FE               	bra	i2u210_47
  2621   000CFC  2E12               	decfsz	??_adc_to_LCD^0,f,c
  2622   000CFE  D7FC               	bra	i2u210_47
  2623   000D00  F000               	nop	
  2624   000D02                     
  2625                           ;L07_main_serialCommunication.c: 167:         LCD_ValueOut_00(0, 0, val, 4);
  2626   000D02  0E00               	movlw	0
  2627   000D04  6E09               	movwf	LCD_ValueOut_00@col^0,c
  2628   000D06  C010  F00A         	movff	adc_to_LCD@val,LCD_ValueOut_00@value
  2629   000D0A  C011  F00B         	movff	adc_to_LCD@val+1,LCD_ValueOut_00@value+1
  2630   000D0E  0E04               	movlw	4
  2631   000D10  6E0C               	movwf	LCD_ValueOut_00@min_dig^0,c
  2632   000D12  0E00               	movlw	0
  2633   000D14  EC83  F001         	call	_LCD_ValueOut_00
  2634   000D18                     
  2635                           ;L07_main_serialCommunication.c: 168:         LCD_ConstTextOut(0, 4, " mV");
  2636   000D18  0E04               	movlw	4
  2637   000D1A  6E02               	movwf	LCD_ConstTextOut@col^0,c
  2638   000D1C  0E01               	movlw	low STR_1
  2639   000D1E  6E03               	movwf	LCD_ConstTextOut@text^0,c
  2640   000D20  0E03               	movlw	high STR_1
  2641   000D22  6E04               	movwf	(LCD_ConstTextOut@text+1)^0,c
  2642   000D24  0E00               	movlw	0
  2643   000D26  ECC8  F004         	call	_LCD_ConstTextOut
  2644   000D2A  0012               	return		;funcret
  2645   000D2C                     __end_of_adc_to_LCD:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _LCD_ValueOut_00 *****************
  2649 ;; Defined at:
  2650 ;;		line 110 in file "../../Libraries/LCD_library.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  row             1    wreg     unsigned char 
  2653 ;;  col             1    8[COMRAM] unsigned char 
  2654 ;;  value           2    9[COMRAM] short 
  2655 ;;  min_dig         1   11[COMRAM] unsigned char 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  row             1   12[COMRAM] unsigned char 
  2658 ;;  chBuffer        1   14[COMRAM] unsigned char 
  2659 ;;  leading_0       1   13[COMRAM] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2669 ;;      Params:         4       0       0       0
  2670 ;;      Locals:         3       0       0       0
  2671 ;;      Temps:          0       0       0       0
  2672 ;;      Totals:         7       0       0       0
  2673 ;;Total ram usage:        7 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 1
  2676 ;; This function calls:
  2677 ;;		___awdiv
  2678 ;;		___wmul
  2679 ;;		i2_LCD_Busy
  2680 ;;		i2_LCD_Write
  2681 ;; This function is called by:
  2682 ;;		_adc_to_LCD
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text20
  2687   000306                     __ptext20:
  2688                           	callstack 0
  2689   000306                     _LCD_ValueOut_00:
  2690                           	callstack 24
  2691                           
  2692                           ;incstack = 0
  2693                           ;LCD_ValueOut_00@row stored from wreg
  2694   000306  6E0D               	movwf	LCD_ValueOut_00@row^0,c
  2695   000308                     i2l1806:
  2696   000308  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2697   00030C  0900               	iorlw	0
  2698   00030E  A4D8               	btfss	status,2,c
  2699   000310  EF8C  F001         	goto	i2u133_41
  2700   000314  EF8E  F001         	goto	i2u133_40
  2701   000318                     i2u133_41:
  2702   000318  EF84  F001         	goto	i2l1806
  2703   00031C                     i2u133_40:
  2704   00031C  9A89               	bcf	137,5,c	;volatile
  2705   00031E  500D               	movf	LCD_ValueOut_00@row^0,w,c
  2706   000320  0D40               	mullw	64
  2707   000322  50F3               	movf	243,w,c
  2708   000324  2409               	addwf	LCD_ValueOut_00@col^0,w,c
  2709   000326  0F80               	addlw	128
  2710   000328  ECD5  F005         	call	i2_LCD_Write
  2711   00032C                     
  2712                           ;../../Libraries/LCD_library.c: 116:     leading_0 = 1;
  2713   00032C  0E01               	movlw	1
  2714   00032E  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2715   000330                     
  2716                           ;../../Libraries/LCD_library.c: 118:     if (value < 0){
  2717   000330  BE0B               	btfsc	(LCD_ValueOut_00@value+1)^0,7,c
  2718   000332  EF9F  F001         	goto	i2u134_40
  2719   000336  EF9D  F001         	goto	i2u134_41
  2720   00033A                     i2u134_41:
  2721   00033A  EFB3  F001         	goto	i2l1822
  2722   00033E                     i2u134_40:
  2723   00033E                     i2l1816:
  2724   00033E  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2725   000342  0900               	iorlw	0
  2726   000344  A4D8               	btfss	status,2,c
  2727   000346  EFA7  F001         	goto	i2u135_41
  2728   00034A  EFA9  F001         	goto	i2u135_40
  2729   00034E                     i2u135_41:
  2730   00034E  EF9F  F001         	goto	i2l1816
  2731   000352                     i2u135_40:
  2732   000352  8A89               	bsf	137,5,c	;volatile
  2733   000354  0E2D               	movlw	45
  2734   000356  ECD5  F005         	call	i2_LCD_Write
  2735   00035A                     
  2736                           ;../../Libraries/LCD_library.c: 121:         value = -value;
  2737   00035A  6C0A               	negf	LCD_ValueOut_00@value^0,c
  2738   00035C  1E0B               	comf	(LCD_ValueOut_00@value+1)^0,f,c
  2739   00035E  B0D8               	btfsc	status,0,c
  2740   000360  2A0B               	incf	(LCD_ValueOut_00@value+1)^0,f,c
  2741                           
  2742                           ;../../Libraries/LCD_library.c: 122:     }
  2743   000362  EFB3  F001         	goto	i2l1832
  2744   000366                     i2l1822:
  2745   000366                     i2l1832:
  2746                           
  2747                           ;../../Libraries/LCD_library.c: 127:     chBuffer = value / 10000;
  2748   000366  C00A  F001         	movff	LCD_ValueOut_00@value,___awdiv@dividend
  2749   00036A  C00B  F002         	movff	LCD_ValueOut_00@value+1,___awdiv@dividend+1
  2750   00036E  0E27               	movlw	39
  2751   000370  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2752   000372  0E10               	movlw	16
  2753   000374  6E03               	movwf	___awdiv@divisor^0,c
  2754   000376  EC9C  F003         	call	___awdiv	;wreg free
  2755   00037A  5001               	movf	?___awdiv^0,w,c
  2756   00037C  6E0F               	movwf	LCD_ValueOut_00@chBuffer^0,c
  2757   00037E                     
  2758                           ;../../Libraries/LCD_library.c: 129:         if((chBuffer != 0)||(min_dig == 5)) leading
      +                          _0 = 0;
  2759   00037E  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2760   000380  A4D8               	btfss	status,2,c
  2761   000382  EFC5  F001         	goto	i2u136_41
  2762   000386  EFC7  F001         	goto	i2u136_40
  2763   00038A                     i2u136_41:
  2764   00038A  EFD0  F001         	goto	i2l1840
  2765   00038E                     i2u136_40:
  2766   00038E  0E05               	movlw	5
  2767   000390  180C               	xorwf	LCD_ValueOut_00@min_dig^0,w,c
  2768   000392  A4D8               	btfss	status,2,c
  2769   000394  EFCE  F001         	goto	i2u137_41
  2770   000398  EFD0  F001         	goto	i2u137_40
  2771   00039C                     i2u137_41:
  2772   00039C  EFD2  F001         	goto	i2l224
  2773   0003A0                     i2u137_40:
  2774   0003A0                     i2l1840:
  2775   0003A0  0E00               	movlw	0
  2776   0003A2  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2777   0003A4                     i2l224:
  2778                           
  2779                           ;../../Libraries/LCD_library.c: 131:     if(!leading_0){
  2780   0003A4  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2781   0003A6  A4D8               	btfss	status,2,c
  2782   0003A8  EFD8  F001         	goto	i2u138_41
  2783   0003AC  EFDA  F001         	goto	i2u138_40
  2784   0003B0                     i2u138_41:
  2785   0003B0  EFE9  F001         	goto	i2l1848
  2786   0003B4                     i2u138_40:
  2787   0003B4                     i2l1844:
  2788   0003B4  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2789   0003B8  0900               	iorlw	0
  2790   0003BA  A4D8               	btfss	status,2,c
  2791   0003BC  EFE2  F001         	goto	i2u139_41
  2792   0003C0  EFE4  F001         	goto	i2u139_40
  2793   0003C4                     i2u139_41:
  2794   0003C4  EFDA  F001         	goto	i2l1844
  2795   0003C8                     i2u139_40:
  2796   0003C8  8A89               	bsf	137,5,c	;volatile
  2797   0003CA  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2798   0003CC  0F30               	addlw	48
  2799   0003CE  ECD5  F005         	call	i2_LCD_Write
  2800   0003D2                     i2l1848:
  2801                           
  2802                           ;../../Libraries/LCD_library.c: 134:     value = value - (10000 * chBuffer);
  2803   0003D2  C00F  F001         	movff	LCD_ValueOut_00@chBuffer,___wmul@multiplier
  2804   0003D6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2805   0003D8  0ED8               	movlw	216
  2806   0003DA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2807   0003DC  0EF0               	movlw	240
  2808   0003DE  6E03               	movwf	___wmul@multiplicand^0,c
  2809   0003E0  ECA5  F007         	call	___wmul	;wreg free
  2810   0003E4  500A               	movf	LCD_ValueOut_00@value^0,w,c
  2811   0003E6  2401               	addwf	?___wmul^0,w,c
  2812   0003E8  6E0A               	movwf	LCD_ValueOut_00@value^0,c
  2813   0003EA  500B               	movf	(LCD_ValueOut_00@value+1)^0,w,c
  2814   0003EC  2002               	addwfc	(?___wmul+1)^0,w,c
  2815   0003EE  6E0B               	movwf	(LCD_ValueOut_00@value+1)^0,c
  2816   0003F0                     
  2817                           ;../../Libraries/LCD_library.c: 135:     chBuffer = value / 1000;
  2818   0003F0  C00A  F001         	movff	LCD_ValueOut_00@value,___awdiv@dividend
  2819   0003F4  C00B  F002         	movff	LCD_ValueOut_00@value+1,___awdiv@dividend+1
  2820   0003F8  0E03               	movlw	3
  2821   0003FA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2822   0003FC  0EE8               	movlw	232
  2823   0003FE  6E03               	movwf	___awdiv@divisor^0,c
  2824   000400  EC9C  F003         	call	___awdiv	;wreg free
  2825   000404  5001               	movf	?___awdiv^0,w,c
  2826   000406  6E0F               	movwf	LCD_ValueOut_00@chBuffer^0,c
  2827   000408                     
  2828                           ;../../Libraries/LCD_library.c: 136:     if(leading_0){
  2829   000408  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2830   00040A  B4D8               	btfsc	status,2,c
  2831   00040C  EF0A  F002         	goto	i2u140_41
  2832   000410  EF0C  F002         	goto	i2u140_40
  2833   000414                     i2u140_41:
  2834   000414  EF1F  F002         	goto	i2l232
  2835   000418                     i2u140_40:
  2836   000418                     
  2837                           ;../../Libraries/LCD_library.c: 137:         if((chBuffer != 0)||(min_dig == 4)) leading
      +                          _0 = 0;
  2838   000418  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2839   00041A  A4D8               	btfss	status,2,c
  2840   00041C  EF12  F002         	goto	i2u141_41
  2841   000420  EF14  F002         	goto	i2u141_40
  2842   000424                     i2u141_41:
  2843   000424  EF1D  F002         	goto	i2l1858
  2844   000428                     i2u141_40:
  2845   000428  0E04               	movlw	4
  2846   00042A  180C               	xorwf	LCD_ValueOut_00@min_dig^0,w,c
  2847   00042C  A4D8               	btfss	status,2,c
  2848   00042E  EF1B  F002         	goto	i2u142_41
  2849   000432  EF1D  F002         	goto	i2u142_40
  2850   000436                     i2u142_41:
  2851   000436  EF1F  F002         	goto	i2l232
  2852   00043A                     i2u142_40:
  2853   00043A                     i2l1858:
  2854   00043A  0E00               	movlw	0
  2855   00043C  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2856   00043E                     i2l232:
  2857                           
  2858                           ;../../Libraries/LCD_library.c: 139:     if(!leading_0){
  2859   00043E  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2860   000440  A4D8               	btfss	status,2,c
  2861   000442  EF25  F002         	goto	i2u143_41
  2862   000446  EF27  F002         	goto	i2u143_40
  2863   00044A                     i2u143_41:
  2864   00044A  EF36  F002         	goto	i2l1866
  2865   00044E                     i2u143_40:
  2866   00044E                     i2l1862:
  2867   00044E  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2868   000452  0900               	iorlw	0
  2869   000454  A4D8               	btfss	status,2,c
  2870   000456  EF2F  F002         	goto	i2u144_41
  2871   00045A  EF31  F002         	goto	i2u144_40
  2872   00045E                     i2u144_41:
  2873   00045E  EF27  F002         	goto	i2l1862
  2874   000462                     i2u144_40:
  2875   000462  8A89               	bsf	137,5,c	;volatile
  2876   000464  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2877   000466  0F30               	addlw	48
  2878   000468  ECD5  F005         	call	i2_LCD_Write
  2879   00046C                     i2l1866:
  2880                           
  2881                           ;../../Libraries/LCD_library.c: 142:     value = value - (1000 * chBuffer);
  2882   00046C  C00F  F001         	movff	LCD_ValueOut_00@chBuffer,___wmul@multiplier
  2883   000470  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2884   000472  0EFC               	movlw	252
  2885   000474  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2886   000476  0E18               	movlw	24
  2887   000478  6E03               	movwf	___wmul@multiplicand^0,c
  2888   00047A  ECA5  F007         	call	___wmul	;wreg free
  2889   00047E  500A               	movf	LCD_ValueOut_00@value^0,w,c
  2890   000480  2401               	addwf	?___wmul^0,w,c
  2891   000482  6E0A               	movwf	LCD_ValueOut_00@value^0,c
  2892   000484  500B               	movf	(LCD_ValueOut_00@value+1)^0,w,c
  2893   000486  2002               	addwfc	(?___wmul+1)^0,w,c
  2894   000488  6E0B               	movwf	(LCD_ValueOut_00@value+1)^0,c
  2895   00048A                     
  2896                           ;../../Libraries/LCD_library.c: 143:     chBuffer = value / 100;
  2897   00048A  C00A  F001         	movff	LCD_ValueOut_00@value,___awdiv@dividend
  2898   00048E  C00B  F002         	movff	LCD_ValueOut_00@value+1,___awdiv@dividend+1
  2899   000492  0E00               	movlw	0
  2900   000494  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2901   000496  0E64               	movlw	100
  2902   000498  6E03               	movwf	___awdiv@divisor^0,c
  2903   00049A  EC9C  F003         	call	___awdiv	;wreg free
  2904   00049E  5001               	movf	?___awdiv^0,w,c
  2905   0004A0  6E0F               	movwf	LCD_ValueOut_00@chBuffer^0,c
  2906   0004A2                     
  2907                           ;../../Libraries/LCD_library.c: 144:     if(leading_0){
  2908   0004A2  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2909   0004A4  B4D8               	btfsc	status,2,c
  2910   0004A6  EF57  F002         	goto	i2u145_41
  2911   0004AA  EF59  F002         	goto	i2u145_40
  2912   0004AE                     i2u145_41:
  2913   0004AE  EF6C  F002         	goto	i2l240
  2914   0004B2                     i2u145_40:
  2915   0004B2                     
  2916                           ;../../Libraries/LCD_library.c: 145:         if((chBuffer != 0)||(min_dig == 3)) leading
      +                          _0 = 0;
  2917   0004B2  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2918   0004B4  A4D8               	btfss	status,2,c
  2919   0004B6  EF5F  F002         	goto	i2u146_41
  2920   0004BA  EF61  F002         	goto	i2u146_40
  2921   0004BE                     i2u146_41:
  2922   0004BE  EF6A  F002         	goto	i2l1876
  2923   0004C2                     i2u146_40:
  2924   0004C2  0E03               	movlw	3
  2925   0004C4  180C               	xorwf	LCD_ValueOut_00@min_dig^0,w,c
  2926   0004C6  A4D8               	btfss	status,2,c
  2927   0004C8  EF68  F002         	goto	i2u147_41
  2928   0004CC  EF6A  F002         	goto	i2u147_40
  2929   0004D0                     i2u147_41:
  2930   0004D0  EF6C  F002         	goto	i2l240
  2931   0004D4                     i2u147_40:
  2932   0004D4                     i2l1876:
  2933   0004D4  0E00               	movlw	0
  2934   0004D6  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  2935   0004D8                     i2l240:
  2936                           
  2937                           ;../../Libraries/LCD_library.c: 147:     if(!leading_0){
  2938   0004D8  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2939   0004DA  A4D8               	btfss	status,2,c
  2940   0004DC  EF72  F002         	goto	i2u148_41
  2941   0004E0  EF74  F002         	goto	i2u148_40
  2942   0004E4                     i2u148_41:
  2943   0004E4  EF83  F002         	goto	i2l1884
  2944   0004E8                     i2u148_40:
  2945   0004E8                     i2l1880:
  2946   0004E8  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  2947   0004EC  0900               	iorlw	0
  2948   0004EE  A4D8               	btfss	status,2,c
  2949   0004F0  EF7C  F002         	goto	i2u149_41
  2950   0004F4  EF7E  F002         	goto	i2u149_40
  2951   0004F8                     i2u149_41:
  2952   0004F8  EF74  F002         	goto	i2l1880
  2953   0004FC                     i2u149_40:
  2954   0004FC  8A89               	bsf	137,5,c	;volatile
  2955   0004FE  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2956   000500  0F30               	addlw	48
  2957   000502  ECD5  F005         	call	i2_LCD_Write
  2958   000506                     i2l1884:
  2959                           
  2960                           ;../../Libraries/LCD_library.c: 150:     value = value - ((short)100 * chBuffer);
  2961   000506  C00F  F001         	movff	LCD_ValueOut_00@chBuffer,___wmul@multiplier
  2962   00050A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2963   00050C  0EFF               	movlw	255
  2964   00050E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2965   000510  0E9C               	movlw	156
  2966   000512  6E03               	movwf	___wmul@multiplicand^0,c
  2967   000514  ECA5  F007         	call	___wmul	;wreg free
  2968   000518  500A               	movf	LCD_ValueOut_00@value^0,w,c
  2969   00051A  2401               	addwf	?___wmul^0,w,c
  2970   00051C  6E0A               	movwf	LCD_ValueOut_00@value^0,c
  2971   00051E  500B               	movf	(LCD_ValueOut_00@value+1)^0,w,c
  2972   000520  2002               	addwfc	(?___wmul+1)^0,w,c
  2973   000522  6E0B               	movwf	(LCD_ValueOut_00@value+1)^0,c
  2974   000524                     
  2975                           ;../../Libraries/LCD_library.c: 151:     chBuffer = value / 10;
  2976   000524  C00A  F001         	movff	LCD_ValueOut_00@value,___awdiv@dividend
  2977   000528  C00B  F002         	movff	LCD_ValueOut_00@value+1,___awdiv@dividend+1
  2978   00052C  0E00               	movlw	0
  2979   00052E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2980   000530  0E0A               	movlw	10
  2981   000532  6E03               	movwf	___awdiv@divisor^0,c
  2982   000534  EC9C  F003         	call	___awdiv	;wreg free
  2983   000538  5001               	movf	?___awdiv^0,w,c
  2984   00053A  6E0F               	movwf	LCD_ValueOut_00@chBuffer^0,c
  2985   00053C                     
  2986                           ;../../Libraries/LCD_library.c: 152:     if(leading_0){
  2987   00053C  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  2988   00053E  B4D8               	btfsc	status,2,c
  2989   000540  EFA4  F002         	goto	i2u150_41
  2990   000544  EFA6  F002         	goto	i2u150_40
  2991   000548                     i2u150_41:
  2992   000548  EFB9  F002         	goto	i2l248
  2993   00054C                     i2u150_40:
  2994   00054C                     
  2995                           ;../../Libraries/LCD_library.c: 153:         if((chBuffer != 0)||(min_dig == 2)) leading
      +                          _0 = 0;
  2996   00054C  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  2997   00054E  A4D8               	btfss	status,2,c
  2998   000550  EFAC  F002         	goto	i2u151_41
  2999   000554  EFAE  F002         	goto	i2u151_40
  3000   000558                     i2u151_41:
  3001   000558  EFB7  F002         	goto	i2l1894
  3002   00055C                     i2u151_40:
  3003   00055C  0E02               	movlw	2
  3004   00055E  180C               	xorwf	LCD_ValueOut_00@min_dig^0,w,c
  3005   000560  A4D8               	btfss	status,2,c
  3006   000562  EFB5  F002         	goto	i2u152_41
  3007   000566  EFB7  F002         	goto	i2u152_40
  3008   00056A                     i2u152_41:
  3009   00056A  EFB9  F002         	goto	i2l248
  3010   00056E                     i2u152_40:
  3011   00056E                     i2l1894:
  3012   00056E  0E00               	movlw	0
  3013   000570  6E0E               	movwf	LCD_ValueOut_00@leading_0^0,c
  3014   000572                     i2l248:
  3015                           
  3016                           ;../../Libraries/LCD_library.c: 155:     if(!leading_0){
  3017   000572  500E               	movf	LCD_ValueOut_00@leading_0^0,w,c
  3018   000574  A4D8               	btfss	status,2,c
  3019   000576  EFBF  F002         	goto	i2u153_41
  3020   00057A  EFC1  F002         	goto	i2u153_40
  3021   00057E                     i2u153_41:
  3022   00057E  EFD0  F002         	goto	i2l1902
  3023   000582                     i2u153_40:
  3024   000582                     i2l1898:
  3025   000582  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  3026   000586  0900               	iorlw	0
  3027   000588  A4D8               	btfss	status,2,c
  3028   00058A  EFC9  F002         	goto	i2u154_41
  3029   00058E  EFCB  F002         	goto	i2u154_40
  3030   000592                     i2u154_41:
  3031   000592  EFC1  F002         	goto	i2l1898
  3032   000596                     i2u154_40:
  3033   000596  8A89               	bsf	137,5,c	;volatile
  3034   000598  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  3035   00059A  0F30               	addlw	48
  3036   00059C  ECD5  F005         	call	i2_LCD_Write
  3037   0005A0                     i2l1902:
  3038                           
  3039                           ;../../Libraries/LCD_library.c: 158:     value = value - ((short)10 * chBuffer);
  3040   0005A0  C00F  F001         	movff	LCD_ValueOut_00@chBuffer,___wmul@multiplier
  3041   0005A4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  3042   0005A6  0EFF               	movlw	255
  3043   0005A8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3044   0005AA  0EF6               	movlw	246
  3045   0005AC  6E03               	movwf	___wmul@multiplicand^0,c
  3046   0005AE  ECA5  F007         	call	___wmul	;wreg free
  3047   0005B2  500A               	movf	LCD_ValueOut_00@value^0,w,c
  3048   0005B4  2401               	addwf	?___wmul^0,w,c
  3049   0005B6  6E0A               	movwf	LCD_ValueOut_00@value^0,c
  3050   0005B8  500B               	movf	(LCD_ValueOut_00@value+1)^0,w,c
  3051   0005BA  2002               	addwfc	(?___wmul+1)^0,w,c
  3052   0005BC  6E0B               	movwf	(LCD_ValueOut_00@value+1)^0,c
  3053   0005BE                     
  3054                           ;../../Libraries/LCD_library.c: 159:     chBuffer = value;
  3055   0005BE  C00A  F00F         	movff	LCD_ValueOut_00@value,LCD_ValueOut_00@chBuffer
  3056   0005C2                     i2l1906:
  3057   0005C2  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  3058   0005C6  0900               	iorlw	0
  3059   0005C8  A4D8               	btfss	status,2,c
  3060   0005CA  EFE9  F002         	goto	i2u155_41
  3061   0005CE  EFEB  F002         	goto	i2u155_40
  3062   0005D2                     i2u155_41:
  3063   0005D2  EFE1  F002         	goto	i2l1906
  3064   0005D6                     i2u155_40:
  3065   0005D6  8A89               	bsf	137,5,c	;volatile
  3066   0005D8  500F               	movf	LCD_ValueOut_00@chBuffer^0,w,c
  3067   0005DA  0F30               	addlw	48
  3068   0005DC  ECD5  F005         	call	i2_LCD_Write
  3069   0005E0  0012               	return		;funcret
  3070   0005E2                     __end_of_LCD_ValueOut_00:
  3071                           	callstack 0
  3072                           
  3073 ;; *************** function ___wmul *****************
  3074 ;; Defined at:
  3075 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  multiplier      2    0[COMRAM] unsigned int 
  3078 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  product         2    4[COMRAM] unsigned int 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  2    0[COMRAM] unsigned int 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0, prodl, prodh
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3090 ;;      Params:         4       0       0       0
  3091 ;;      Locals:         2       0       0       0
  3092 ;;      Temps:          0       0       0       0
  3093 ;;      Totals:         6       0       0       0
  3094 ;;Total ram usage:        6 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_high_isr
  3100 ;;		_LCD_ValueOut_00
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text21
  3105   000F4A                     __ptext21:
  3106                           	callstack 0
  3107   000F4A                     ___wmul:
  3108                           	callstack 24
  3109   000F4A  5001               	movf	___wmul@multiplier^0,w,c
  3110   000F4C  0203               	mulwf	___wmul@multiplicand^0,c
  3111   000F4E  CFF3 F005          	movff	prodl,___wmul@product
  3112   000F52  CFF4 F006          	movff	prodh,___wmul@product+1
  3113   000F56  5001               	movf	___wmul@multiplier^0,w,c
  3114   000F58  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3115   000F5A  50F3               	movf	243,w,c
  3116   000F5C  2606               	addwf	(___wmul@product+1)^0,f,c
  3117   000F5E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3118   000F60  0203               	mulwf	___wmul@multiplicand^0,c
  3119   000F62  50F3               	movf	243,w,c
  3120   000F64  2606               	addwf	(___wmul@product+1)^0,f,c
  3121   000F66  C005  F001         	movff	___wmul@product,?___wmul
  3122   000F6A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3123   000F6E  0012               	return		;funcret
  3124   000F70                     __end_of___wmul:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function ___awdiv *****************
  3128 ;; Defined at:
  3129 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  dividend        2    0[COMRAM] int 
  3132 ;;  divisor         2    2[COMRAM] int 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  quotient        2    6[COMRAM] int 
  3135 ;;  sign            1    5[COMRAM] unsigned char 
  3136 ;;  counter         1    4[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    0[COMRAM] int 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3146 ;;      Params:         4       0       0       0
  3147 ;;      Locals:         4       0       0       0
  3148 ;;      Temps:          0       0       0       0
  3149 ;;      Totals:         8       0       0       0
  3150 ;;Total ram usage:        8 bytes
  3151 ;; Hardware stack levels used: 1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_LCD_ValueOut_00
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           	psect	text22
  3160   000738                     __ptext22:
  3161                           	callstack 0
  3162   000738                     ___awdiv:
  3163                           	callstack 24
  3164   000738  0E00               	movlw	0
  3165   00073A  6E06               	movwf	___awdiv@sign^0,c
  3166   00073C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3167   00073E  EFA5  F003         	goto	i2u114_40
  3168   000742  EFA3  F003         	goto	i2u114_41
  3169   000746                     i2u114_41:
  3170   000746  EFAB  F003         	goto	i2l1710
  3171   00074A                     i2u114_40:
  3172   00074A  6C03               	negf	___awdiv@divisor^0,c
  3173   00074C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3174   00074E  B0D8               	btfsc	status,0,c
  3175   000750  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3176   000752  0E01               	movlw	1
  3177   000754  6E06               	movwf	___awdiv@sign^0,c
  3178   000756                     i2l1710:
  3179   000756  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3180   000758  EFB2  F003         	goto	i2u115_40
  3181   00075C  EFB0  F003         	goto	i2u115_41
  3182   000760                     i2u115_41:
  3183   000760  EFB8  F003         	goto	i2l1716
  3184   000764                     i2u115_40:
  3185   000764  6C01               	negf	___awdiv@dividend^0,c
  3186   000766  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3187   000768  B0D8               	btfsc	status,0,c
  3188   00076A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3189   00076C  0E01               	movlw	1
  3190   00076E  1A06               	xorwf	___awdiv@sign^0,f,c
  3191   000770                     i2l1716:
  3192   000770  0E00               	movlw	0
  3193   000772  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3194   000774  0E00               	movlw	0
  3195   000776  6E07               	movwf	___awdiv@quotient^0,c
  3196   000778  5003               	movf	___awdiv@divisor^0,w,c
  3197   00077A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3198   00077C  B4D8               	btfsc	status,2,c
  3199   00077E  EFC3  F003         	goto	i2u116_41
  3200   000782  EFC5  F003         	goto	i2u116_40
  3201   000786                     i2u116_41:
  3202   000786  EFED  F003         	goto	i2l1738
  3203   00078A                     i2u116_40:
  3204   00078A  0E01               	movlw	1
  3205   00078C  6E05               	movwf	___awdiv@counter^0,c
  3206   00078E  EFCD  F003         	goto	i2l1724
  3207   000792                     i2l1722:
  3208   000792  90D8               	bcf	status,0,c
  3209   000794  3603               	rlcf	___awdiv@divisor^0,f,c
  3210   000796  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3211   000798  2A05               	incf	___awdiv@counter^0,f,c
  3212   00079A                     i2l1724:
  3213   00079A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3214   00079C  EFD2  F003         	goto	i2u117_41
  3215   0007A0  EFD4  F003         	goto	i2u117_40
  3216   0007A4                     i2u117_41:
  3217   0007A4  EFC9  F003         	goto	i2l1722
  3218   0007A8                     i2u117_40:
  3219   0007A8                     i2l1726:
  3220   0007A8  90D8               	bcf	status,0,c
  3221   0007AA  3607               	rlcf	___awdiv@quotient^0,f,c
  3222   0007AC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3223   0007AE  5003               	movf	___awdiv@divisor^0,w,c
  3224   0007B0  5C01               	subwf	___awdiv@dividend^0,w,c
  3225   0007B2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3226   0007B4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3227   0007B6  A0D8               	btfss	status,0,c
  3228   0007B8  EFE0  F003         	goto	i2u118_41
  3229   0007BC  EFE2  F003         	goto	i2u118_40
  3230   0007C0                     i2u118_41:
  3231   0007C0  EFE7  F003         	goto	i2l1734
  3232   0007C4                     i2u118_40:
  3233   0007C4  5003               	movf	___awdiv@divisor^0,w,c
  3234   0007C6  5E01               	subwf	___awdiv@dividend^0,f,c
  3235   0007C8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3236   0007CA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3237   0007CC  8007               	bsf	___awdiv@quotient^0,0,c
  3238   0007CE                     i2l1734:
  3239   0007CE  90D8               	bcf	status,0,c
  3240   0007D0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3241   0007D2  3203               	rrcf	___awdiv@divisor^0,f,c
  3242   0007D4  2E05               	decfsz	___awdiv@counter^0,f,c
  3243   0007D6  EFD4  F003         	goto	i2l1726
  3244   0007DA                     i2l1738:
  3245   0007DA  5006               	movf	___awdiv@sign^0,w,c
  3246   0007DC  B4D8               	btfsc	status,2,c
  3247   0007DE  EFF3  F003         	goto	i2u119_41
  3248   0007E2  EFF5  F003         	goto	i2u119_40
  3249   0007E6                     i2u119_41:
  3250   0007E6  EFF9  F003         	goto	i2l1742
  3251   0007EA                     i2u119_40:
  3252   0007EA  6C07               	negf	___awdiv@quotient^0,c
  3253   0007EC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3254   0007EE  B0D8               	btfsc	status,0,c
  3255   0007F0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3256   0007F2                     i2l1742:
  3257   0007F2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3258   0007F6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3259   0007FA  0012               	return		;funcret
  3260   0007FC                     __end_of___awdiv:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _LCD_ConstTextOut *****************
  3264 ;; Defined at:
  3265 ;;		line 164 in file "../../Libraries/LCD_library.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  row             1    wreg     unsigned char 
  3268 ;;  col             1    1[COMRAM] unsigned char 
  3269 ;;  text            2    2[COMRAM] PTR const unsigned char 
  3270 ;;		 -> STR_1(4), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  row             1    4[COMRAM] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3282 ;;      Params:         3       0       0       0
  3283 ;;      Locals:         1       0       0       0
  3284 ;;      Temps:          0       0       0       0
  3285 ;;      Totals:         4       0       0       0
  3286 ;;Total ram usage:        4 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 1
  3289 ;; This function calls:
  3290 ;;		i2_LCD_Busy
  3291 ;;		i2_LCD_Write
  3292 ;; This function is called by:
  3293 ;;		_adc_to_LCD
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text23
  3298   000990                     __ptext23:
  3299                           	callstack 0
  3300   000990                     _LCD_ConstTextOut:
  3301                           	callstack 24
  3302                           
  3303                           ;incstack = 0
  3304                           ;LCD_ConstTextOut@row stored from wreg
  3305   000990  6E05               	movwf	LCD_ConstTextOut@row^0,c
  3306   000992                     i2l1912:
  3307   000992  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  3308   000996  0900               	iorlw	0
  3309   000998  A4D8               	btfss	status,2,c
  3310   00099A  EFD1  F004         	goto	i2u156_41
  3311   00099E  EFD3  F004         	goto	i2u156_40
  3312   0009A2                     i2u156_41:
  3313   0009A2  EFC9  F004         	goto	i2l1912
  3314   0009A6                     i2u156_40:
  3315   0009A6  9A89               	bcf	137,5,c	;volatile
  3316   0009A8  5005               	movf	LCD_ConstTextOut@row^0,w,c
  3317   0009AA  0D40               	mullw	64
  3318   0009AC  50F3               	movf	243,w,c
  3319   0009AE  2402               	addwf	LCD_ConstTextOut@col^0,w,c
  3320   0009B0  0F80               	addlw	128
  3321   0009B2  ECD5  F005         	call	i2_LCD_Write
  3322                           
  3323                           ;../../Libraries/LCD_library.c: 167:     while (*text) {
  3324   0009B6  EFF2  F004         	goto	i2l1922
  3325   0009BA                     i2l1916:
  3326   0009BA  ECFA  F006         	call	i2_LCD_Busy	;wreg free
  3327   0009BE  0900               	iorlw	0
  3328   0009C0  A4D8               	btfss	status,2,c
  3329   0009C2  EFE5  F004         	goto	i2u157_41
  3330   0009C6  EFE7  F004         	goto	i2u157_40
  3331   0009CA                     i2u157_41:
  3332   0009CA  EFDD  F004         	goto	i2l1916
  3333   0009CE                     i2u157_40:
  3334   0009CE  8A89               	bsf	137,5,c	;volatile
  3335   0009D0  C003  FFF6         	movff	LCD_ConstTextOut@text,tblptrl
  3336   0009D4  C004  FFF7         	movff	LCD_ConstTextOut@text+1,tblptrh
  3337   0009D8                     	if	0	;tblptru may be non-zero
  3338   0009D8                     	endif
  3339   0009D8                     	if	0	;tblptru may be non-zero
  3340   0009D8                     	endif
  3341   0009D8  0008               	tblrd		*
  3342   0009DA  50F5               	movf	tablat,w,c
  3343   0009DC  ECD5  F005         	call	i2_LCD_Write
  3344   0009E0                     
  3345                           ;../../Libraries/LCD_library.c: 169:         text++;
  3346   0009E0  4A03               	infsnz	LCD_ConstTextOut@text^0,f,c
  3347   0009E2  2A04               	incf	(LCD_ConstTextOut@text+1)^0,f,c
  3348   0009E4                     i2l1922:
  3349                           
  3350                           ;../../Libraries/LCD_library.c: 167:     while (*text) {
  3351   0009E4  C003  FFF6         	movff	LCD_ConstTextOut@text,tblptrl
  3352   0009E8  C004  FFF7         	movff	LCD_ConstTextOut@text+1,tblptrh
  3353   0009EC                     	if	0	;tblptru may be non-zero
  3354   0009EC                     	endif
  3355   0009EC                     	if	0	;tblptru may be non-zero
  3356   0009EC                     	endif
  3357   0009EC  0008               	tblrd		*
  3358   0009EE  50F5               	movf	tablat,w,c
  3359   0009F0  0900               	iorlw	0
  3360   0009F2  A4D8               	btfss	status,2,c
  3361   0009F4  EFFE  F004         	goto	i2u158_41
  3362   0009F8  EF00  F005         	goto	i2u158_40
  3363   0009FC                     i2u158_41:
  3364   0009FC  EFDD  F004         	goto	i2l1916
  3365   000A00                     i2u158_40:
  3366   000A00  0012               	return		;funcret
  3367   000A02                     __end_of_LCD_ConstTextOut:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function i2_LCD_Write *****************
  3371 ;; Defined at:
  3372 ;;		line 91 in file "../../Libraries/LCD_library.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  value           1    wreg     unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  value           1    0[COMRAM] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3386 ;;      Params:         0       0       0       0
  3387 ;;      Locals:         1       0       0       0
  3388 ;;      Temps:          0       0       0       0
  3389 ;;      Totals:         1       0       0       0
  3390 ;;Total ram usage:        1 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_high_isr
  3396 ;;		_adc_to_LCD
  3397 ;;		_LCD_ValueOut_00
  3398 ;;		_LCD_ConstTextOut
  3399 ;;		i2_LCD_TextOut
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text24
  3404   000BAA                     __ptext24:
  3405                           	callstack 0
  3406   000BAA                     i2_LCD_Write:
  3407                           	callstack 26
  3408                           
  3409                           ;incstack = 0
  3410                           ;i2LCD_Write@value stored from wreg
  3411   000BAA  6E01               	movwf	i2LCD_Write@value^0,c
  3412   000BAC                     
  3413                           ;../../Libraries/LCD_library.c: 91: void LCD_Write(unsigned char value);../../Libraries/
      +                          LCD_library.c: 92: {;../../Libraries/LCD_library.c: 93:     LCD_data.all = value;
  3414   000BAC  C001  F034         	movff	i2LCD_Write@value,_LCD_data
  3415   000BB0                     
  3416                           ;../../Libraries/LCD_library.c: 94:     LATCbits.LATC0 = 0;
  3417   000BB0  908B               	bcf	139,0,c	;volatile
  3418   000BB2                     
  3419                           ;../../Libraries/LCD_library.c: 96:     LATBbits.LATB5 = LCD_data.bit7;
  3420   000BB2  AE34               	btfss	_LCD_data^0,7,c
  3421   000BB4  D002               	bra	i2u120_45
  3422   000BB6  8A8A               	bsf	138,5,c	;volatile
  3423   000BB8  D001               	bra	i2u120_47
  3424   000BBA                     i2u120_45:
  3425   000BBA  9A8A               	bcf	138,5,c	;volatile
  3426   000BBC                     i2u120_47:
  3427   000BBC                     
  3428                           ;../../Libraries/LCD_library.c: 97:     LATBbits.LATB4 = LCD_data.bit6;
  3429   000BBC  AC34               	btfss	_LCD_data^0,6,c
  3430   000BBE  D002               	bra	i2u121_45
  3431   000BC0  888A               	bsf	138,4,c	;volatile
  3432   000BC2  D001               	bra	i2u121_47
  3433   000BC4                     i2u121_45:
  3434   000BC4  988A               	bcf	138,4,c	;volatile
  3435   000BC6                     i2u121_47:
  3436   000BC6                     
  3437                           ;../../Libraries/LCD_library.c: 98:     LATBbits.LATB3 = LCD_data.bit5;
  3438   000BC6  AA34               	btfss	_LCD_data^0,5,c
  3439   000BC8  D002               	bra	i2u122_45
  3440   000BCA  868A               	bsf	138,3,c	;volatile
  3441   000BCC  D001               	bra	i2u122_47
  3442   000BCE                     i2u122_45:
  3443   000BCE  968A               	bcf	138,3,c	;volatile
  3444   000BD0                     i2u122_47:
  3445   000BD0                     
  3446                           ;../../Libraries/LCD_library.c: 99:     LATBbits.LATB2 = LCD_data.bit4;
  3447   000BD0  A834               	btfss	_LCD_data^0,4,c
  3448   000BD2  D002               	bra	i2u123_45
  3449   000BD4  848A               	bsf	138,2,c	;volatile
  3450   000BD6  D001               	bra	i2u123_47
  3451   000BD8                     i2u123_45:
  3452   000BD8  948A               	bcf	138,2,c	;volatile
  3453   000BDA                     i2u123_47:
  3454   000BDA                     
  3455                           ;../../Libraries/LCD_library.c: 100:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*
      +                          (4000000/4000000.0))); LATCbits.LATC1 = 0;
  3456   000BDA  828B               	bsf	139,1,c	;volatile
  3457   000BDC  F000               	nop	
  3458   000BDE  928B               	bcf	139,1,c	;volatile
  3459   000BE0                     
  3460                           ;../../Libraries/LCD_library.c: 102:     LATBbits.LATB5 = LCD_data.bit3;
  3461   000BE0  A634               	btfss	_LCD_data^0,3,c
  3462   000BE2  D002               	bra	i2u124_45
  3463   000BE4  8A8A               	bsf	138,5,c	;volatile
  3464   000BE6  D001               	bra	i2u124_47
  3465   000BE8                     i2u124_45:
  3466   000BE8  9A8A               	bcf	138,5,c	;volatile
  3467   000BEA                     i2u124_47:
  3468   000BEA                     
  3469                           ;../../Libraries/LCD_library.c: 103:     LATBbits.LATB4 = LCD_data.bit2;
  3470   000BEA  A434               	btfss	_LCD_data^0,2,c
  3471   000BEC  D002               	bra	i2u125_45
  3472   000BEE  888A               	bsf	138,4,c	;volatile
  3473   000BF0  D001               	bra	i2u125_47
  3474   000BF2                     i2u125_45:
  3475   000BF2  988A               	bcf	138,4,c	;volatile
  3476   000BF4                     i2u125_47:
  3477   000BF4                     
  3478                           ;../../Libraries/LCD_library.c: 104:     LATBbits.LATB3 = LCD_data.bit1;
  3479   000BF4  A234               	btfss	_LCD_data^0,1,c
  3480   000BF6  D002               	bra	i2u126_45
  3481   000BF8  868A               	bsf	138,3,c	;volatile
  3482   000BFA  D001               	bra	i2u126_47
  3483   000BFC                     i2u126_45:
  3484   000BFC  968A               	bcf	138,3,c	;volatile
  3485   000BFE                     i2u126_47:
  3486   000BFE                     
  3487                           ;../../Libraries/LCD_library.c: 105:     LATBbits.LATB2 = LCD_data.bit0;
  3488   000BFE  A034               	btfss	_LCD_data^0,0,c
  3489   000C00  D002               	bra	i2u127_45
  3490   000C02  848A               	bsf	138,2,c	;volatile
  3491   000C04  D001               	bra	i2u127_47
  3492   000C06                     i2u127_45:
  3493   000C06  948A               	bcf	138,2,c	;volatile
  3494   000C08                     i2u127_47:
  3495   000C08                     
  3496                           ;../../Libraries/LCD_library.c: 106:     LATCbits.LATC1 = 1; _delay((unsigned long)((1)*
      +                          (4000000/4000000.0))); LATCbits.LATC1 = 0;
  3497   000C08  828B               	bsf	139,1,c	;volatile
  3498   000C0A  F000               	nop	
  3499   000C0C  928B               	bcf	139,1,c	;volatile
  3500   000C0E  0012               	return		;funcret
  3501   000C10                     __end_ofi2_LCD_Write:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function i2_LCD_Busy *****************
  3505 ;; Defined at:
  3506 ;;		line 184 in file "../../Libraries/LCD_library.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      unsigned char 
  3513 ;; Registers used:
  3514 ;;		wreg
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3520 ;;      Params:         0       0       0       0
  3521 ;;      Locals:         0       0       0       0
  3522 ;;      Temps:          0       0       0       0
  3523 ;;      Totals:         0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_high_isr
  3530 ;;		_adc_to_LCD
  3531 ;;		_LCD_ValueOut_00
  3532 ;;		_LCD_ConstTextOut
  3533 ;;		i2_LCD_TextOut
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text25
  3538   000DF4                     __ptext25:
  3539                           	callstack 0
  3540   000DF4                     i2_LCD_Busy:
  3541                           	callstack 26
  3542   000DF4                     
  3543                           ;../../Libraries/LCD_library.c: 187:     LATCbits.LATC0 = 1;
  3544   000DF4  808B               	bsf	139,0,c	;volatile
  3545                           
  3546                           ;../../Libraries/LCD_library.c: 188:     LATAbits.LATA5 = 0;
  3547   000DF6  9A89               	bcf	137,5,c	;volatile
  3548                           
  3549                           ;../../Libraries/LCD_library.c: 189:     TRISBbits.TRISB2 = 1; TRISBbits.TRISB3 = 1; TRI
      +                          SBbits.TRISB4 = 1; TRISBbits.TRISB5 = 1;
  3550   000DF8  8493               	bsf	147,2,c	;volatile
  3551   000DFA  8693               	bsf	147,3,c	;volatile
  3552   000DFC  8893               	bsf	147,4,c	;volatile
  3553   000DFE  8A93               	bsf	147,5,c	;volatile
  3554                           
  3555                           ;../../Libraries/LCD_library.c: 191:     LATCbits.LATC1 = 1;; _delay((unsigned long)((1)
      +                          *(4000000/4000000.0)));
  3556   000E00  828B               	bsf	139,1,c	;volatile
  3557   000E02  F000               	nop	
  3558                           
  3559                           ;../../Libraries/LCD_library.c: 192:     LCD_data.bit7 = PORTBbits.RB5;
  3560   000E04  AA81               	btfss	129,5,c	;volatile
  3561   000E06  D002               	bra	i2u128_45
  3562   000E08  8E34               	bsf	_LCD_data^0,7,c
  3563   000E0A  D001               	bra	i2u128_47
  3564   000E0C                     i2u128_45:
  3565   000E0C  9E34               	bcf	_LCD_data^0,7,c
  3566   000E0E                     i2u128_47:
  3567                           
  3568                           ;../../Libraries/LCD_library.c: 193:     LATCbits.LATC1 = 0;;
  3569   000E0E  928B               	bcf	139,1,c	;volatile
  3570                           
  3571                           ;../../Libraries/LCD_library.c: 195:     TRISBbits.TRISB2 = 0; TRISBbits.TRISB3 = 0; TRI
      +                          SBbits.TRISB4 = 0; TRISBbits.TRISB5 = 0;
  3572   000E10  9493               	bcf	147,2,c	;volatile
  3573   000E12  9693               	bcf	147,3,c	;volatile
  3574   000E14  9893               	bcf	147,4,c	;volatile
  3575   000E16  9A93               	bcf	147,5,c	;volatile
  3576                           
  3577                           ;../../Libraries/LCD_library.c: 196:     LATCbits.LATC0 = 0;
  3578   000E18  908B               	bcf	139,0,c	;volatile
  3579                           
  3580                           ;../../Libraries/LCD_library.c: 198:     if (LCD_data.bit7 == 1) {
  3581   000E1A  AE34               	btfss	_LCD_data^0,7,c
  3582   000E1C  EF12  F007         	goto	i2u129_41
  3583   000E20  EF14  F007         	goto	i2u129_40
  3584   000E24                     i2u129_41:
  3585   000E24  EF17  F007         	goto	i2l1786
  3586   000E28                     i2u129_40:
  3587   000E28                     
  3588                           ;../../Libraries/LCD_library.c: 199:         return 1;
  3589   000E28  0E01               	movlw	1
  3590   000E2A  EF18  F007         	goto	i2l287
  3591   000E2E                     i2l1786:
  3592                           
  3593                           ;../../Libraries/LCD_library.c: 201:         return 0;
  3594   000E2E  0E00               	movlw	0
  3595   000E30                     i2l287:
  3596   000E30  0012               	return		;funcret
  3597   000E32                     __end_ofi2_LCD_Busy:
  3598                           	callstack 0
  3599                           
  3600 ;; *************** function _Read1USART *****************
  3601 ;; Defined at:
  3602 ;;		line 61 in file "../../Libraries/PLIB_USART.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  data            1    0[COMRAM] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      unsigned char 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3616 ;;      Params:         0       0       0       0
  3617 ;;      Locals:         1       0       0       0
  3618 ;;      Temps:          0       0       0       0
  3619 ;;      Totals:         1       0       0       0
  3620 ;;Total ram usage:        1 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_high_isr
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text26
  3630   000D2C                     __ptext26:
  3631                           	callstack 0
  3632   000D2C                     _Read1USART:
  3633                           	callstack 26
  3634   000D2C                     
  3635                           ;../../Libraries/PLIB_USART.c: 62:     char data;;../../Libraries/PLIB_USART.c: 64:     
      +                          USART1_Status.val &= 0xf2;
  3636   000D2C  0EF2               	movlw	242
  3637   000D2E  1633               	andwf	_USART1_Status^0,f,c
  3638   000D30                     
  3639                           ;../../Libraries/PLIB_USART.c: 66:     if (RCSTA1bits.RX9)
  3640   000D30  ACAB               	btfss	171,6,c	;volatile
  3641   000D32  EF9D  F006         	goto	i2u93_41
  3642   000D36  EF9F  F006         	goto	i2u93_40
  3643   000D3A                     i2u93_41:
  3644   000D3A  EFA8  F006         	goto	i2l325
  3645   000D3E                     i2u93_40:
  3646   000D3E                     
  3647                           ;../../Libraries/PLIB_USART.c: 67:     {;../../Libraries/PLIB_USART.c: 68:         USART
      +                          1_Status.RX_NINE = 0;
  3648   000D3E  9033               	bcf	_USART1_Status^0,0,c
  3649                           
  3650                           ;../../Libraries/PLIB_USART.c: 69:         if (RCSTA1bits.RX9D)
  3651   000D40  A0AB               	btfss	171,0,c	;volatile
  3652   000D42  EFA5  F006         	goto	i2u94_41
  3653   000D46  EFA7  F006         	goto	i2u94_40
  3654   000D4A                     i2u94_41:
  3655   000D4A  EFA8  F006         	goto	i2l325
  3656   000D4E                     i2u94_40:
  3657   000D4E                     
  3658                           ;../../Libraries/PLIB_USART.c: 70:             USART1_Status.RX_NINE = 1;
  3659   000D4E  8033               	bsf	_USART1_Status^0,0,c
  3660   000D50                     i2l325:
  3661                           
  3662                           ;../../Libraries/PLIB_USART.c: 73:     if (RCSTA1bits.FERR)
  3663   000D50  A4AB               	btfss	171,2,c	;volatile
  3664   000D52  EFAD  F006         	goto	i2u95_41
  3665   000D56  EFAF  F006         	goto	i2u95_40
  3666   000D5A                     i2u95_41:
  3667   000D5A  EFB0  F006         	goto	i2l327
  3668   000D5E                     i2u95_40:
  3669   000D5E                     
  3670                           ;../../Libraries/PLIB_USART.c: 74:         USART1_Status.FRAME_ERROR = 1;
  3671   000D5E  8433               	bsf	_USART1_Status^0,2,c
  3672   000D60                     i2l327:
  3673                           
  3674                           ;../../Libraries/PLIB_USART.c: 76:     if (RCSTA1bits.OERR)
  3675   000D60  A2AB               	btfss	171,1,c	;volatile
  3676   000D62  EFB5  F006         	goto	i2u96_41
  3677   000D66  EFB7  F006         	goto	i2u96_40
  3678   000D6A                     i2u96_41:
  3679   000D6A  EFB8  F006         	goto	i2l328
  3680   000D6E                     i2u96_40:
  3681   000D6E                     
  3682                           ;../../Libraries/PLIB_USART.c: 77:         USART1_Status.OVERRUN_ERROR = 1;
  3683   000D6E  8633               	bsf	_USART1_Status^0,3,c
  3684   000D70                     i2l328:
  3685                           
  3686                           ;../../Libraries/PLIB_USART.c: 79:     data = RCREG1;
  3687   000D70  CFAE F001          	movff	4014,Read1USART@data	;volatile
  3688   000D74                     
  3689                           ;../../Libraries/PLIB_USART.c: 81:     return (data);
  3690   000D74  5001               	movf	Read1USART@data^0,w,c
  3691   000D76  0012               	return		;funcret
  3692   000D78                     __end_of_Read1USART:
  3693                           	callstack 0
  3694                           
  3695                           	psect	rparam
  3696   000000                     
  3697                           	psect	temp
  3698   00003E                     btemp:
  3699                           	callstack 0
  3700   00003E                     	ds	1
  3701   000000                     int$flags	set	btemp
  3702   000000                     wtemp8	set	btemp+1
  3703   000000                     ttemp5	set	btemp+1
  3704   000000                     ttemp6	set	btemp+4
  3705   000000                     ttemp7	set	btemp+8
  3706                           
  3707                           	psect	idloc
  3708                           
  3709                           ;Config register IDLOC0 @ 0x200000
  3710                           ;	unspecified, using default values
  3711   200000                     	org	2097152
  3712   200000  FF                 	db	255
  3713                           
  3714                           ;Config register IDLOC1 @ 0x200001
  3715                           ;	unspecified, using default values
  3716   200001                     	org	2097153
  3717   200001  FF                 	db	255
  3718                           
  3719                           ;Config register IDLOC2 @ 0x200002
  3720                           ;	unspecified, using default values
  3721   200002                     	org	2097154
  3722   200002  FF                 	db	255
  3723                           
  3724                           ;Config register IDLOC3 @ 0x200003
  3725                           ;	unspecified, using default values
  3726   200003                     	org	2097155
  3727   200003  FF                 	db	255
  3728                           
  3729                           ;Config register IDLOC4 @ 0x200004
  3730                           ;	unspecified, using default values
  3731   200004                     	org	2097156
  3732   200004  FF                 	db	255
  3733                           
  3734                           ;Config register IDLOC5 @ 0x200005
  3735                           ;	unspecified, using default values
  3736   200005                     	org	2097157
  3737   200005  FF                 	db	255
  3738                           
  3739                           ;Config register IDLOC6 @ 0x200006
  3740                           ;	unspecified, using default values
  3741   200006                     	org	2097158
  3742   200006  FF                 	db	255
  3743                           
  3744                           ;Config register IDLOC7 @ 0x200007
  3745                           ;	unspecified, using default values
  3746   200007                     	org	2097159
  3747   200007  FF                 	db	255
  3748                           
  3749                           	psect	config
  3750                           
  3751                           ; Padding undefined space
  3752   300000                     	org	3145728
  3753   300000  FF                 	db	255
  3754                           
  3755                           ;Config register CONFIG1H @ 0x300001
  3756                           ;	Oscillator Selection bits
  3757                           ;	FOSC = INTIO7, Internal oscillator block, CLKOUT function on OSC2
  3758                           ;	4X PLL Enable
  3759                           ;	PLLCFG = OFF, Oscillator used directly
  3760                           ;	Primary clock enable bit
  3761                           ;	PRICLKEN = ON, Primary clock enabled
  3762                           ;	Fail-Safe Clock Monitor Enable bit
  3763                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3764                           ;	Internal/External Oscillator Switchover bit
  3765                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3766   300001                     	org	3145729
  3767   300001  29                 	db	41
  3768                           
  3769                           ;Config register CONFIG2L @ 0x300002
  3770                           ;	Power-up Timer Enable bit
  3771                           ;	PWRTEN = OFF, Power up timer disabled
  3772                           ;	Brown-out Reset Enable bits
  3773                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3774                           ;	Brown Out Reset Voltage bits
  3775                           ;	BORV = 190, VBOR set to 1.90 V nominal
  3776   300002                     	org	3145730
  3777   300002  19                 	db	25
  3778                           
  3779                           ;Config register CONFIG2H @ 0x300003
  3780                           ;	Watchdog Timer Enable bits
  3781                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  3782                           ;	Watchdog Timer Postscale Select bits
  3783                           ;	WDTPS = 32768, 1:32768
  3784   300003                     	org	3145731
  3785   300003  3C                 	db	60
  3786                           
  3787                           ; Padding undefined space
  3788   300004                     	org	3145732
  3789   300004  FF                 	db	255
  3790                           
  3791                           ;Config register CONFIG3H @ 0x300005
  3792                           ;	CCP2 MUX bit
  3793                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  3794                           ;	PORTB A/D Enable bit
  3795                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  3796                           ;	P3A/CCP3 Mux bit
  3797                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  3798                           ;	HFINTOSC Fast Start-up
  3799                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  3800                           ;	Timer3 Clock input mux bit
  3801                           ;	T3CMX = PORTC0, T3CKI is on RC0
  3802                           ;	ECCP2 B output mux bit
  3803                           ;	P2BMX = PORTB5, P2B is on RB5
  3804                           ;	MCLR Pin Enable bit
  3805                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  3806   300005                     	org	3145733
  3807   300005  BD                 	db	189
  3808                           
  3809                           ;Config register CONFIG4L @ 0x300006
  3810                           ;	Stack Full/Underflow Reset Enable bit
  3811                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3812                           ;	Single-Supply ICSP Enable bit
  3813                           ;	LVP = OFF, Single-Supply ICSP disabled
  3814                           ;	Extended Instruction Set Enable bit
  3815                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3816                           ;	Background Debug
  3817                           ;	DEBUG = 0x1, unprogrammed default
  3818   300006                     	org	3145734
  3819   300006  81                 	db	129
  3820                           
  3821                           ; Padding undefined space
  3822   300007                     	org	3145735
  3823   300007  FF                 	db	255
  3824                           
  3825                           ;Config register CONFIG5L @ 0x300008
  3826                           ;	Code Protection Block 0
  3827                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3828                           ;	Code Protection Block 1
  3829                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3830   300008                     	org	3145736
  3831   300008  03                 	db	3
  3832                           
  3833                           ;Config register CONFIG5H @ 0x300009
  3834                           ;	Boot Block Code Protection bit
  3835                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3836                           ;	Data EEPROM Code Protection bit
  3837                           ;	CPD = OFF, Data EEPROM not code-protected
  3838   300009                     	org	3145737
  3839   300009  C0                 	db	192
  3840                           
  3841                           ;Config register CONFIG6L @ 0x30000A
  3842                           ;	Write Protection Block 0
  3843                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3844                           ;	Write Protection Block 1
  3845                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3846   30000A                     	org	3145738
  3847   30000A  03                 	db	3
  3848                           
  3849                           ;Config register CONFIG6H @ 0x30000B
  3850                           ;	Configuration Register Write Protection bit
  3851                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3852                           ;	Boot Block Write Protection bit
  3853                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3854                           ;	Data EEPROM Write Protection bit
  3855                           ;	WRTD = OFF, Data EEPROM not write-protected
  3856   30000B                     	org	3145739
  3857   30000B  E0                 	db	224
  3858                           
  3859                           ;Config register CONFIG7L @ 0x30000C
  3860                           ;	Table Read Protection Block 0
  3861                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3862                           ;	Table Read Protection Block 1
  3863                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3864   30000C                     	org	3145740
  3865   30000C  03                 	db	3
  3866                           
  3867                           ;Config register CONFIG7H @ 0x30000D
  3868                           ;	Boot Block Table Read Protection bit
  3869                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3870   30000D                     	org	3145741
  3871   30000D  40                 	db	64
  3872                           tosu	equ	0xFFF
  3873                           tosh	equ	0xFFE
  3874                           tosl	equ	0xFFD
  3875                           stkptr	equ	0xFFC
  3876                           pclatu	equ	0xFFB
  3877                           pclath	equ	0xFFA
  3878                           pcl	equ	0xFF9
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           prodh	equ	0xFF4
  3884                           prodl	equ	0xFF3
  3885                           indf0	equ	0xFEF
  3886                           postinc0	equ	0xFEE
  3887                           postdec0	equ	0xFED
  3888                           preinc0	equ	0xFEC
  3889                           plusw0	equ	0xFEB
  3890                           fsr0h	equ	0xFEA
  3891                           fsr0l	equ	0xFE9
  3892                           wreg	equ	0xFE8
  3893                           indf1	equ	0xFE7
  3894                           postinc1	equ	0xFE6
  3895                           postdec1	equ	0xFE5
  3896                           preinc1	equ	0xFE4
  3897                           plusw1	equ	0xFE3
  3898                           fsr1h	equ	0xFE2
  3899                           fsr1l	equ	0xFE1
  3900                           bsr	equ	0xFE0
  3901                           indf2	equ	0xFDF
  3902                           postinc2	equ	0xFDE
  3903                           postdec2	equ	0xFDD
  3904                           preinc2	equ	0xFDC
  3905                           plusw2	equ	0xFDB
  3906                           fsr2h	equ	0xFDA
  3907                           fsr2l	equ	0xFD9
  3908                           status	equ	0xFD8

Data Sizes:
    Strings     4
    Constant    0
    Data        7
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    puts1USART@data	PTR unsigned char  size(2) Largest target is 7
		 -> main@text(COMRAM[7]), 

    LCD_TextOut@text	PTR unsigned char  size(2) Largest target is 7
		 -> append_sign_to_LCD@tempstr(COMRAM[2]), main@text(COMRAM[7]), 

    LCD_ConstTextOut@text	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    write_to_LCD@data	PTR unsigned char  size(2) Largest target is 7
		 -> main@text(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_write_to_LCD
    _write_to_LCD->_LCD_TextOut
    _LCD_TextOut->_LCD_Write
    _puts1USART->_Write1USART
    ___init->_Open1USART
    _LCD_Init->_LCD_Write
    _LCD_Init->_LCD_Write_Nibble

Critical Paths under _high_isr in COMRAM

    _high_isr->_adc_to_LCD
    _writeValToUSART->___lwdiv
    ___lwdiv->___wmul
    _sendStatus->i2_Write1USART
    _append_sign_to_LCD->i2_LCD_TextOut
    i2_LCD_TextOut->i2_LCD_Write
    _adc_to_LCD->_LCD_ValueOut_00
    _LCD_ValueOut_00->___awdiv
    _LCD_ConstTextOut->i2_LCD_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1028
                                             38 COMRAM     8     8      0
                           _LCD_Busy
                          _LCD_Write
                             ___init
                         _puts1USART
                       _write_to_LCD
 ---------------------------------------------------------------------------------
 (1) _write_to_LCD                                         2     0      2     454
                                             36 COMRAM     2     0      2
                        _LCD_TextOut
 ---------------------------------------------------------------------------------
 (2) _LCD_TextOut                                          4     1      3     356
                                             32 COMRAM     4     1      3
                           _LCD_Busy
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _puts1USART                                           2     0      2     136
                                             32 COMRAM     2     0      2
                        _Write1USART
 ---------------------------------------------------------------------------------
 (2) _Write1USART                                          1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___init                                               3     3      0     372
                                             34 COMRAM     2     2      0
                           _LCD_Init
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     296
                                             31 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      30
                                             32 COMRAM     1     1      0
                           _LCD_Busy
                          _LCD_Write
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Nibble                                     1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Write                                            1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            13    13      0    6227
                                             18 COMRAM    13    13      0
                         _Read1USART
                            ___lwdiv
                             ___wmul
                         _adc_to_LCD
                 _append_sign_to_LCD
                         _sendStatus
                    _writeValToUSART
                         i2_LCD_Busy
                        i2_LCD_Write
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (5) _writeValToUSART                                      3     1      2     967
                                             13 COMRAM     3     1      2
                            ___lwdiv
                            ___lwmod
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     466
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _sendStatus                                           1     1      0      44
                                              1 COMRAM     1     1      0
                      i2_Write1USART
 ---------------------------------------------------------------------------------
 (5) i2_Write1USART                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _append_sign_to_LCD                                   3     3      0     237
                                              5 COMRAM     3     3      0
                      i2_LCD_TextOut
 ---------------------------------------------------------------------------------
 (6) i2_LCD_TextOut                                        4     1      3     163
                                              1 COMRAM     4     1      3
                         i2_LCD_Busy
                        i2_LCD_Write
 ---------------------------------------------------------------------------------
 (5) _adc_to_LCD                                           3     1      2    3401
                                             15 COMRAM     3     1      2
                   _LCD_ConstTextOut
                    _LCD_ValueOut_00
                         i2_LCD_Busy
                        i2_LCD_Write
 ---------------------------------------------------------------------------------
 (6) _LCD_ValueOut_00                                      7     3      4    3018
                                              8 COMRAM     7     3      4
                            ___awdiv
                             ___wmul
                         i2_LCD_Busy
                        i2_LCD_Write
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     919
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _LCD_ConstTextOut                                     4     1      3     263
                                              1 COMRAM     4     1      3
                         i2_LCD_Busy
                        i2_LCD_Write
 ---------------------------------------------------------------------------------
 (5) i2_LCD_Write                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i2_LCD_Busy                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Read1USART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Busy
   _LCD_Write
   ___init
     _LCD_Init
       _LCD_Busy
       _LCD_Write
       _LCD_Write_Nibble
     _Open1USART
   _puts1USART
     _Write1USART
   _write_to_LCD
     _LCD_TextOut
       _LCD_Busy
       _LCD_Write

 _high_isr (ROOT)
   _Read1USART
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _adc_to_LCD
     _LCD_ConstTextOut
       i2_LCD_Busy
       i2_LCD_Write
     _LCD_ValueOut_00
       ___awdiv
       ___wmul
       i2_LCD_Busy
       i2_LCD_Write
     i2_LCD_Busy
     i2_LCD_Write
   _append_sign_to_LCD
     i2_LCD_TextOut
       i2_LCD_Busy
       i2_LCD_Write
   _sendStatus
     i2_Write1USART
   _writeValToUSART
     ___lwdiv
     ___lwmod
     i2_Write1USART
   i2_LCD_Busy
   i2_LCD_Write
   i2_Write1USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       5        0.0%
BANK2              100      0       0       6        0.0%
BITBANK1           100      0       0       8        0.0%
BANK1              100      0       0       4        0.0%
BITBANK0            A0      0       0       7        0.0%
BANK0               A0      0       0       3        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      3D       1       64.9%
BITBIGSFRll         46      0       0      19        0.0%
BITBIGSFRhlhhh      1C      0       0      11        0.0%
BITBIGSFRhlhhl       E      0       0      12        0.0%
BITBIGSFRhlhll       C      0       0      15        0.0%
BITBIGSFRhhh         A      0       0       9        0.0%
BITBIGSFRhllh        8      0       0      16        0.0%
BITBIGSFRhlhlhl      7      0       0      14        0.0%
BITBIGSFRlh          7      0       0      18        0.0%
BITBIGSFRhlhlhh      7      0       0      13        0.0%
BITBIGSFRhlll        6      0       0      17        0.0%
BITBIGSFRhhl         1      0       0      10        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D      20        0.0%
DATA                 0      0      3D      22        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 23:29:26 2022

                        l90 0CCE                          l91 0CCE                          l87 0C8C  
                        u20 0DEA                          u21 0DE6                          u15 0DCE  
                        u17 0DD0                          u35 0B54                          u45 0B5E  
                        u37 0B56                          u55 0B68                          u47 0B60  
                        u65 0B72                          u57 0B6A                          u75 0B82  
                        u67 0B74                          u85 0B8C                          u77 0B84  
                        u95 0B96                          u87 0B8E                          u97 0B98  
              ___awdiv@sign 0006         ___wmul@multiplicand 0003                         l202 071E  
                       l203 0736                         l131 0F82                         l206 0EA4  
                       l320 0898                         l209 0BA8                         l321 089A  
                       l322 08A6                         l314 084C                         l156 0B42  
                       l190 069E                         l318 0882                         l334 0EF8  
                       l343 0DB4                         l193 06BA                         l281 0A40  
                       l339 0D7C                         l283 0A6C                         l196 06D6  
                       l276 0A18                         l287 0DF2                         l199 06F2  
                       u105 0BA0                         u107 0BA2                         u115 0E7E  
                       u125 0E88                         u117 0E80                         u310 0EE2  
                       u135 0E92                         u127 0E8A                         u311 0EDE  
                       u320 0EF2                         u145 0E9C                         u137 0E94  
                       u321 0EEE                         u147 0E9E                         u700 068A  
                       u701 0686                         u710 069E                         u711 069A  
                       u720 06BA                         u721 06B6                         u730 06D6  
                       u731 06D2                         u740 06F2                         u741 06EE  
                       u750 071E                         u751 071A                ?_LCD_TextOut 0021  
                       wreg 000FE8                  _TXSTA1bits 000FAC                 high_isr@val 001D  
                      l1030 0DEA                        l1040 0B46                        l1050 0B6A  
                      l1042 0B4A                        l1036 0DF0                        l1028 0DB6  
                      l1060 0B84                        l1052 0B74                        l1044 0B4C  
                      l1070 0BA6                        l1062 0B8E                        l1054 0B76  
                      l1046 0B56                        l2030 0AF4                        l1064 0B98  
                      l1056 0B78                        l1048 0B60                        l1080 0E80  
                      l1072 0E6E                        l1400 06FA                        l2040 0B14  
                      l2032 0AF6                        l2024 0ADA                        l2120 0C78  
                      l1066 0BA2                        l1058 0B7A                        l1090 0EA2  
                      l1082 0E8A                        l1074 0E72                        l1402 070A  
                      l2050 0B30                        l2042 0B18                        l2034 0AF8  
                      l2026 0ADE                        l2130 0CC2                        l2122 0C8E  
                      l1068 0BA4                        l1084 0E94                        l1076 0E74  
                      l1404 0720                        l2060 0B3C                        l2052 0B32  
                      l2044 0B1C                        l2036 0B02                        l2028 0AE0  
                      l2124 0C94                        l1086 0E9E                        l1078 0E76  
                      l1406 0726                        l2062 0B3E                        l2054 0B34  
                      l2046 0B20                        l2038 0B10                        l1190 0EF2  
                      l2070 0D8A                        l2126 0CA4                        l2118 0C74  
                      l1088 0EA0                        l2064 0B40                        l2056 0B36  
                      l2048 0B28                        l1192 0EF4                        l2072 0D98  
                      l2128 0CB6                        l1370 05FE                        l2058 0B38  
                      l1186 0ED4                        l2074 0D9C                        l2066 0F70  
                      l1380 0670                        l1372 062E                        l1188 0EE2  
                      l2068 0D78                        l1390 06BC                        l1382 0676  
                      l1374 0634                        l1392 06C2                        l1384 068A  
                      l1376 064A                        l1368 05E2                        l1800 0A50  
                      l1394 06D8                        l1386 06A0                        l1378 065A  
                      l1802 0A54                        l1396 06DE                        l1388 06A6  
                      l1398 06F4                        l1930 0816                        l1940 0846  
                      l1932 0824                        l1924 07FE                        l1950 086E  
                      l1942 084E                        l1934 0828                        l1926 0806  
                      l1790 0A04                        l1960 08A2                        l1952 087C  
                      l1944 085C                        l1936 0836                        l1928 0814  
                      l1792 0A04                        l1962 08A4                        l1954 0884  
                      l1946 085E                        l1938 0838                        l1794 0A1A  
                      l1956 0892                        l1948 086C                        l1796 0A2C  
                      l1958 089E                        l1798 0A42           ?_LCD_Write_Nibble 0001  
                      STR_1 0301                        u1300 0A18                        u1301 0A14  
                      u1310 0A40                        u2007 0604                        u1311 0A3C  
                      u1320 0A6C                        u2017 0614                        u1321 0A68  
                      u2027 0624                        u2037 063A                        _LATB 000F8A  
                      u2047 0650                        u1600 0824                        u2057 0666  
                      u1601 0820                        u1610 0836                        u2067 0700  
                      u1611 0832                        u1620 0846                        u2077 072C  
                      u1621 0842                        u1630 085C                        u1631 0858  
                      u1640 086C                        u1641 0868                        u1650 087C  
                      u1651 0878                        u1660 0892                        u1661 088E  
                      u1590 0814                        u1591 0810                        u1780 0D8A  
                      u1860 0C8C                        u1781 0D86                        u1861 0C88  
                      u1790 0DB4                        u1791 0DB0                        u1871 0CAE  
                      u1997 0C9A                        i2l98 0056                        i2l99 01F0  
              ___init@spbrg 0023          ??_LCD_Write_Nibble 0020                 ?i2_LCD_Busy 0001  
            Read1USART@data 0001                        _main 0C74                        fsr2h 000FDA  
                      indf2 000FDF                        fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 003E                        prodh 000FF4                        prodl 000FF3  
                      start 0214            _text_mode_column 0035                ___param_bank 000000  
              high_isr@data 001F            __end_of_LCD_Busy 0DF4            __end_of_LCD_Init 0738  
                     ?_main 0001             __end_of___awdiv 07FC                       _ADRES 000FC3  
           ___awdiv@divisor 0003           i2LCD_TextOut@text 0003                       _LATB3 007C53  
           __end_of___lwdiv 0990                       i2l100 00BE             __end_of___lwmod 0C74  
                     i2l122 0EA8                       i2l107 0118                       i2l141 0CEA  
                     i2l125 0EBC                       i2l214 031C                       i2l142 0D2A  
                     i2l150 0906                       i2l231 03C8                       i2l119 01D6  
                     i2l240 04D8                       i2l232 043E                       i2l224 03A4  
                     i2l136 0F48                       i2l128 0ED0                       i2l209 0C0E  
                     i2l153 091A                       i2l218 0352                       i2l146 08E0  
                     i2l325 0D50                       i2l334 0F20                       i2l327 0D60  
                     i2l271 0A00                       i2l255 0596                       i2l247 04FC  
                     i2l239 0462                       i2l328 0D70                       i2l264 09A6  
                     i2l248 0572                       i2l329 0D76                       i2l281 0AAC  
                     i2l258 05D6                       i2l355 0F6E                       i2l259 05E0  
                     i2l283 0AD8                       i2l276 0A84                       i2l269 09CE  
                     i2l287 0E30                       i2l586 07FA                       i2l853 098E  
                     i2l846 0986                       i2l863 0C72                       i2l856 0C6A  
           ___awdiv@counter 0005                       _TRISB 000F93                ?i2_LCD_Write 0001  
                _Read1USART 0D2C                       tablat 000FF5                       plusw1 000FE3  
                     plusw2 000FDB                       ttemp5 003F                       ttemp6 0042  
                     ttemp7 0046                       status 000FD8                       wtemp8 003F  
  __end_of_LCD_ConstTextOut 0A02             _LCD_ValueOut_00 0306               i2_Write1USART 0EFA  
           __initialization 0E32                __end_of_main 0CD6              puts1USART@data 0021  
                _Open1USART 07FC                      ??_main 0027               __activetblptr 000002  
         __end_of_LCD_Write 0BAA            ___awdiv@dividend 0001                      _ANSELA 000F38  
                    _ANSELB 000F39                      _ANSELC 000F3A                      i2l2000 0C64  
                    i2l2010 0AAE                      i2l2002 0A70                      i2l2012 0ABC  
                    i2l2004 0A70                      i2l2020 0F1A                      i2l2100 0914  
                    i2l2014 0AC0                      i2l2006 0A86                      i2l2110 0F2C  
                    i2l2022 0F1C                      i2l2102 0EA8                      i2l2008 0A98  
                    i2l2112 0F30                      i2l2016 0EFC                      i2l2104 0EB6  
                    i2l2200 01DE                      i2l2114 0F34                      i2l2018 0F0A  
                    i2l2106 0ECA                      i2l2202 01EE                      i2l2116 0F46  
                    i2l2108 0F24                      i2l2140 0052                      i2l2132 002A  
                    i2l2150 00AE                      i2l2142 0064                      i2l2134 0038  
                    i2l2080 0CEC                      i2l2144 0072                      i2l2136 0046  
                    i2l2082 0CF2                      i2l2090 08A8                      i2l2170 0104  
                    i2l2162 00F4                      i2l2154 00CC                      i2l2146 0074  
                    i2l2138 0048                      i2l2084 0D02                      i2l2076 0CD6  
                    i2l2092 08C0                      i2l2228 016A                      i2l2180 0140  
                    i2l2172 011A                      i2l2164 00FA                      i2l2156 00DA  
                    i2l2148 00A2                      i2l1550 0D3E                      i2l1710 0756  
                    i2l1702 0738                      i2l2086 0D18                      i2l2078 0CD6  
                    i2l2094 08DC                      i2l2190 01A8                      i2l2182 0146  
                    i2l2174 0120                      i2l2166 00FC                      i2l2158 00E0  
                    i2l1552 0D4E                      i2l1720 078A                      i2l1712 0764  
                    i2l1704 073C                      i2l2096 08EE                      i2l2088 08A8  
                    i2l2192 01AE                      i2l2184 014C                      i2l2176 0134  
                    i2l2168 0100                      i2l1554 0D5E                      i2l1546 0D2C  
                    i2l1730 07C4                      i2l1722 0792                      i2l1714 076C  
                    i2l1706 074A                      i2l1810 032C                      i2l2098 08F4  
                    i2l2194 01BE                      i2l2178 013A                      i2l2186 0156  
                    i2l1556 0D6E                      i2l1548 0D30                      i2l1740 07EA  
                    i2l1732 07CC                      i2l1724 079A                      i2l1716 0770  
                    i2l1708 0752                      i2l1900 0598                      i2l1820 035A  
                    i2l1812 0330                      i2l1804 0308                      i2l2196 01C2  
                    i2l2188 0198                      i2l1558 0D74                      i2l1750 0BB2  
                    i2l1910 0992                      i2l1742 07F2                      i2l1734 07CE  
                    i2l1726 07A8                      i2l1718 0778                      i2l1902 05A0  
                    i2l1814 033E                      i2l1822 0366                      i2l1806 0308  
                    i2l2198 01D8                      i2l1760 0BDC                      i2l1752 0BBC  
                    i2l1920 09E0                      i2l1912 0992                      i2l1736 07D4  
                    i2l1728 07AE                      i2l1904 05BE                      i2l1840 03A0  
                    i2l1832 0366                      i2l1816 033E                      i2l1808 031E  
                    i2l1770 0BFE                      i2l1762 0BDE                      i2l1754 0BC6  
                    i2l1746 0BAC                      i2l1922 09E4                      i2l1914 09A8  
                    i2l1738 07DA                      i2l1906 05C2                      i2l1850 03F0  
                    i2l1834 037E                      i2l1818 0354                      i2l1780 0E28  
                    i2l1772 0C08                      i2l1764 0BE0                      i2l1756 0BD0  
                    i2l1748 0BB0                      i2l1916 09BA                      i2l1908 05D8  
                    i2l1852 0408                      i2l1844 03B4                      i2l1836 037E  
                    i2l1774 0C0A                      i2l1766 0BEA                      i2l1758 0BDA  
                    i2l1918 09D0                      i2l1870 04A2                      i2l1862 044E  
                    i2l1854 0418                      i2l1846 03CA                      i2l1838 038E  
                    i2l1776 0C0C                      i2l1768 0BF4                      i2l1696 0F4A  
                    i2l1880 04E8                      i2l1872 04B2                      i2l1864 0464  
                    i2l1856 0428                      i2l1848 03D2                      i2l1786 0E2E  
                    i2l1778 0DF4                      i2l1698 0F66                      i2l1890 054C  
                    i2l1882 04FE                      i2l1874 04C2                      i2l1866 046C  
                    i2l1858 043A                      i2l1970 093E                      i2l1892 055C  
                    i2l1884 0506                      i2l1876 04D4                      i2l1868 048A  
                    i2l1980 0978                      i2l1972 0946                      i2l1964 091C  
                    i2l1894 056E                      i2l1886 0524                      i2l1982 097A  
                    i2l1974 0954                      i2l1966 0924                      i2l1990 0C2A  
                    i2l1888 053C                      i2l1984 0980                      i2l1976 095A  
                    i2l1968 0936                      i2l1992 0C32                      i2l1898 0582  
                    i2l1978 0970                      i2l1994 0C40                      i2l1986 0C10  
                    i2l1996 0C56                      i2l1988 0C22                      i2l1998 0C5E  
                    _RCREG1 000FAE                      _RCSTA1 000FAB                      _OSCCON 000FD3  
                    _SPBRG1 000FAF              ?i2_Write1USART 0001           ??_writeValToUSART 0010  
                    _TXREG1 000FAD                      _TXSTA1 000FAC                _write_to_LCD 0F70  
          __end_of_high_isr 0214                      ___init 0ADA                      ___wmul 0F4A  
                 ??___awdiv 0005                   ??___lwdiv 000B                   ??___lwmod 0005  
                    clear_0 0E58            ___awdiv@quotient 0007                      isa$std 000001  
              __pdataCOMRAM 0037                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8     __end_of_LCD_ValueOut_00 05E2  
               ?_Read1USART 0001                  __accesstop 0060     __end_of__initialization 0E5E  
                 ?_LCD_Busy 0001                   ?_LCD_Init 0001               ___rparam_used 000001  
            __pcstackCOMRAM 0001             _state_text_mode 0036                  _adc_to_LCD 0CD6  
               ?_Open1USART 0020      append_sign_to_LCD@data 0006             ??i2_Write1USART 0001  
             ??_Write1USART 0020                ??i2_LCD_Busy 0001                  ??_LCD_Busy 0020  
                ??_LCD_Init 0021                     ?___init 0001                     ?___wmul 0001  
          Open1USART@config 0022          __end_ofi2_LCD_Busy 0E32               i2_LCD_TextOut 0A6E  
                   _SPBRGH1 000FB0                     i2u93_40 0D3E                     i2u93_41 0D3A  
                   i2u94_40 0D4E                     i2u94_41 0D4A                     i2u95_40 0D5E  
                   i2u95_41 0D5A                     i2u96_40 0D6E                     i2u96_41 0D6A  
                 ?_high_isr 0001            ?_LCD_ValueOut_00 0009           i2Write1USART@data 0001  
         ?_LCD_ConstTextOut 0002                     __Hparam 0000                     __Lparam 0000  
        ??_LCD_ConstTextOut 0005         __end_of_Write1USART 0EFA                     ___awdiv 0738  
               ?_adc_to_LCD 0010                     ___lwdiv 091C                     ___lwmod 0C10  
              __psmallconst 0300             LCD_TextOut@text 0022                     __pcinit 0E32  
                   __ramtop 0300                     __ptext0 0C74                     __ptext1 0F70  
                   __ptext2 0A02                     __ptext3 0D78                     __ptext4 0ED2  
                   __ptext5 0ADA                     __ptext6 07FC                     __ptext7 05E2  
                   __ptext8 0E6C                     __ptext9 0B44              ?i2_LCD_TextOut 0002  
           _writeValToUSART 08A8                  ??_high_isr 0013                   _LCD_Write 0B44  
      end_of_initialization 0E5E                  _sendStatus 0EA6               __Lmediumconst 0000  
                   postdec1 000FE5                     postinc0 000FEE         LCD_ConstTextOut@col 0002  
       LCD_ConstTextOut@row 0005                   _PORTBbits 000F81                  _puts1USART 0D78  
          write_to_LCD@data 0025                   _TRISAbits 000F92                   _TRISBbits 000F93  
                 _TRISCbits 000F94        LCD_ValueOut_00@value 000A                  ?_LCD_Write 0001  
              ??_Read1USART 0001                 _Write1USART 0ED2  __end_of_append_sign_to_LCD 0F4A  
          _LCD_Write_Nibble 0E6C            i2LCD_TextOut@col 0002              __end_of___init 0B44  
          i2LCD_TextOut@row 0005              __end_of___wmul 0F70               __pidataCOMRAM 0F84  
              ??_Open1USART 0022     __end_of_writeValToUSART 091C          __end_of_Read1USART 0D78  
           ??i2_LCD_TextOut 0005          writeValToUSART@val 000E               ??_LCD_TextOut 0024  
       start_initialization 0E32     append_sign_to_LCD@F5825 0031                _LCD_busy_cnt 002F  
               ?_sendStatus 0001          __end_of_Open1USART 08A8                    ??___init 0023  
                  ??___wmul 0005                 ?_puts1USART 0021          LCD_ValueOut_00@col 0009  
        LCD_ValueOut_00@row 000D                 __pbssCOMRAM 002F               ??i2_LCD_Write 0001  
               ??_LCD_Write 0020            i2LCD_Write@value 0001         __end_of_LCD_TextOut 0A6E  
     LCD_Write_Nibble@value 0020       __end_ofi2_Write1USART 0F22            ___lwdiv@dividend 0007  
                 __pintcode 0008                    ?___awdiv 0001                ??_adc_to_LCD 0012  
             adc_to_LCD@val 0010                    ?___lwdiv 0007                    ?___lwmod 0001  
           Open1USART@spbrg 0020            ?_writeValToUSART 000E                 __smallconst 0300  
                  _BAUDCON1 000FB8            ___lwdiv@quotient 000B              LCD_TextOut@col 0021  
            LCD_TextOut@row 0024             Write1USART@data 0020          __end_of_adc_to_LCD 0D2C  
                  _LCD_Busy 0DB6                    _LCD_Init 05E2              ___wmul@product 0005  
                  _LATAbits 000F89                    _LATBbits 000F8A                    _LATCbits 000F8B  
                  _LCD_data 0034                    _PIE1bits 000F9D         __end_ofi2_LCD_Write 0C10  
          sendStatus@status 0002               ?_write_to_LCD 0025                    i2u120_45 0BBA  
                  i2u120_47 0BBC                    i2u121_45 0BC4                    i2u121_47 0BC6  
                  i2u114_40 074A                    i2u114_41 0746                    i2u122_45 0BCE  
                  i2u122_47 0BD0                    i2u210_47 0CF8                    i2u115_40 0764  
                  i2u115_41 0760                    i2u123_45 0BD8                    i2u123_47 0BDA  
                  i2u116_40 078A                    i2u140_40 0418                    i2u116_41 0786  
                  i2u140_41 0414                    i2u124_45 0BE8                    i2u124_47 0BEA  
                  i2u117_40 07A8                    i2u141_40 0428                    i2u133_40 031C  
                  i2u117_41 07A4                    i2u141_41 0424                    i2u133_41 0318  
                  i2u125_45 0BF2                    i2u125_47 0BF4                    i2u118_40 07C4  
                  i2u150_40 054C                    i2u142_40 043A                    i2u134_40 033E  
                  i2u118_41 07C0                    i2u150_41 0548                    i2u142_41 0436  
                  i2u134_41 033A                    i2u126_45 0BFC                    i2u126_47 0BFE  
                  i2u119_40 07EA                    i2u151_40 055C                    i2u143_40 044E  
                  i2u135_40 0352                    i2u119_41 07E6                    i2u151_41 0558  
                  i2u143_41 044A                    i2u135_41 034E                    i2u127_45 0C06  
                  i2u127_47 0C08                    i2u152_40 056E                    i2u144_40 0462  
                  i2u136_40 038E                    i2u152_41 056A                    i2u144_41 045E  
                  i2u136_41 038A                    i2u128_45 0E0C                    i2u128_47 0E0E  
                  i2u208_47 0126                    i2u129_40 0E28                    i2u153_40 0582  
                  i2u145_40 04B2                    i2u137_40 03A0                    i2u129_41 0E24  
                  i2u153_41 057E                    i2u145_41 04AE                    i2u137_41 039C  
                  i2u209_47 01E4                    i2u154_40 0596                    i2u146_40 04C2  
                  i2u138_40 03B4                    i2u170_40 0C22                    i2u154_41 0592  
                  i2u146_41 04BE                    i2u138_41 03B0                    i2u170_41 0C1E  
                  i2u155_40 05D6                    i2u147_40 04D4                    i2u139_40 03C8  
                  i2u171_40 0C40                    i2u155_41 05D2                    i2u147_41 04D0  
                  i2u139_41 03C4                    i2u171_41 0C3C                    i2u156_40 09A6  
                  i2u148_40 04E8                    i2u180_40 0CEA                    i2u172_40 0C56  
                  i2u156_41 09A2                    i2u148_41 04E4                    i2u180_41 0CE6  
                  i2u172_41 0C52                    i2u157_40 09CE                    i2u149_40 04FC  
                  i2u173_40 0A84                    i2u181_40 08EE                    i2u157_41 09CA  
                  i2u149_41 04F8                    i2u173_41 0A80                    i2u181_41 08EA  
                  i2u158_40 0A00                    i2u174_40 0AAC                    i2u182_40 0906  
                  i2u190_40 0064                    i2u158_41 09FC                    i2u174_41 0AA8  
                  i2u182_41 0902                    i2u190_41 0060                    i2u175_40 0AD8  
                  i2u167_40 0936                    i2u183_40 0914                    i2u191_40 0072  
                  i2u175_41 0AD4                    i2u167_41 0932                    i2u183_41 0910  
                  i2u191_41 006E                    i2u176_40 0F0A                    i2u184_40 0EB6  
                  i2u168_40 0954                    i2u192_40 00CC                    i2u176_41 0F06  
                  i2u184_41 0EB2                    i2u168_41 0950                    i2u192_41 00C8  
                  i2u177_40 0F1A                    i2u185_40 0ECA                    i2u169_40 0970  
                  i2u193_40 00DA                    i2u177_41 0F16                    i2u185_41 0EC6  
                  i2u169_41 096C                    i2u193_41 00D6                    _PIR1bits 000F9E  
                  i2u194_40 00F0                    i2u194_41 00EC                    i2u195_40 0118  
                  i2u195_41 0114                    i2u196_40 01A8                    i2u188_40 0038  
                  i2u196_41 01A4                    i2u188_41 0034                    i2u197_40 01BE  
                  i2u189_40 0046                    i2u197_41 01BA                    i2u189_41 0042  
                  i2u198_40 01D6                    i2u198_41 01D2                   main@F5814 0037  
                _ADCON0bits 000FC2                  _ADCON1bits 000FC1                  _ADCON2bits 000FC0  
         ___wmul@multiplier 0001                 _LCD_TextOut 0A02    __end_of_LCD_Write_Nibble 0EA6  
               _INTCON3bits 000FF0                   copy_data0 0E46                ?_Write1USART 0001  
            ??_write_to_LCD 0027                    __Hrparam 0000                    __Lrparam 0000  
            LCD_Write@value 0020          _append_sign_to_LCD 0F22         ?_append_sign_to_LCD 0001  
           ___lwdiv@divisor 0009             ___lwdiv@counter 000D                    __ptext10 0DB6  
                  __ptext20 0306                    __ptext12 08A8                    __ptext21 0F4A  
                  __ptext13 0C10                    __ptext22 0738                    __ptext14 091C  
                  __ptext23 0990                    __ptext15 0EA6                    __ptext24 0BAA  
                  __ptext16 0EFA                    __ptext25 0DF4                    __ptext17 0F22  
                  __ptext26 0D2C                    __ptext18 0A6E                    __ptext19 0CD6  
                  _high_isr 0008                 i2_LCD_Write 0BAA                ??_sendStatus 0002  
      ??_append_sign_to_LCD 0006                    isa$xinst 000000                    int$flags 003E  
         ??_LCD_ValueOut_00 000D                    main@text 0028                ??_puts1USART 0023  
             _USART1_Status 0033            _LCD_ConstTextOut 0990            writeValToUSART@c 0010  
        __end_of_sendStatus 0ED2                  _INTCONbits 000FF2       __end_ofi2_LCD_TextOut 0ADA  
                  intlevel2 0000            ___lwmod@dividend 0001                  i2_LCD_Busy 0DF4  
                _RCSTA1bits 000FAB          __end_of_puts1USART 0DB6     LCD_ValueOut_00@chBuffer 000F  
  LCD_ValueOut_00@leading_0 000E   append_sign_to_LCD@tempstr 0007             ___lwmod@divisor 0003  
      LCD_ConstTextOut@text 0003        __end_of_write_to_LCD 0F84             ___lwmod@counter 0005  
    LCD_ValueOut_00@min_dig 000C  
